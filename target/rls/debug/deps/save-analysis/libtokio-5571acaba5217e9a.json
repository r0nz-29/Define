{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25","program":"/home/raunit/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"dns\"","--cfg","feature=\"fnv\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-named-pipes\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"process\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","-C","metadata=5571acaba5217e9a","-C","extra-filename=-5571acaba5217e9a","--out-dir","/mnt/data-hdd/temp-clones/define/target/rls/debug/deps","-L","dependency=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps","--extern","bytes=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libbytes-c96089039741c98e.rmeta","--extern","fnv=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libfnv-a73377529446fa20.rmeta","--extern","futures_core=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libfutures_core-65fff6f399cd7f53.rmeta","--extern","iovec=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libiovec-99d84d8b1f32c514.rmeta","--extern","lazy_static=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/liblazy_static-00cd05e918550129.rmeta","--extern","libc=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/liblibc-55609795b61bce9e.rmeta","--extern","memchr=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libmemchr-ebec61e200c8372e.rmeta","--extern","mio=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libmio-bc0f66b247ca17ae.rmeta","--extern","mio_uds=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libmio_uds-a66bb9f8212b0eee.rmeta","--extern","num_cpus=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libnum_cpus-687128f99148bf99.rmeta","--extern","pin_project_lite=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libpin_project_lite-16d35f5901c615aa.rmeta","--extern","signal_hook_registry=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libsignal_hook_registry-126d2189d64c38d1.rmeta","--extern","slab=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libslab-67525e679724f5f0.rmeta","--extern","tokio_macros=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libtokio_macros-9557e92062a3337a.so","--cap-lints","allow","--error-format=json","--sysroot","/home/raunit/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libtokio-5571acaba5217e9a.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[17550634516355149373,0]},"crate_root":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src","external_crates":[{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/try_join.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[15337890374147599949,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","num":21,"id":{"name":"bytes","disambiguator":[17681988112069779642,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","num":22,"id":{"name":"lazy_static","disambiguator":[2335416628160260444,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","num":23,"id":{"name":"futures_core","disambiguator":[2659877968316655252,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":24,"id":{"name":"mio","disambiguator":[17694678366010686396,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":25,"id":{"name":"net2","disambiguator":[13599134683448532048,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","num":26,"id":{"name":"libc","disambiguator":[16461978545476624764,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":27,"id":{"name":"cfg_if","disambiguator":[14009363344889244906,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","num":28,"id":{"name":"iovec","disambiguator":[6455986803578610869,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","num":29,"id":{"name":"slab","disambiguator":[4028794699268519618,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":30,"id":{"name":"log","disambiguator":[16138615073828880648,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":31,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","num":32,"id":{"name":"mio_uds","disambiguator":[8138063546309499524,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","num":33,"id":{"name":"fnv","disambiguator":[5726890394453190873,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[7573113604473485743,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","num":35,"id":{"name":"memchr","disambiguator":[11363686017877364425,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/mod.rs","num":36,"id":{"name":"num_cpus","disambiguator":[10795413462275089228,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","num":37,"id":{"name":"signal_hook_registry","disambiguator":[12261261931747632145,0]}}],"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":30907,"byte_end":30917,"line_start":2,"line_end":2,"column_start":29,"column_end":39},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":30919,"byte_end":30926,"line_start":2,"line_end":2,"column_start":41,"column_end":48},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":1204},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":30954,"byte_end":30966,"line_start":3,"line_end":3,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":12611},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":30992,"byte_end":30998,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":43480},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":31018,"byte_end":31021,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":46047},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":31042,"byte_end":31046,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":1335},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266629,"byte_end":13266641,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1353},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266686,"byte_end":13266696,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1371},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266749,"byte_end":13266763,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1981},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266810,"byte_end":13266820,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266853,"byte_end":13266857,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1552},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266900,"byte_end":13266909,"line_start":43,"line_end":43,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1574},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266950,"byte_end":13266958,"line_start":46,"line_end":46,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":2009},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267007,"byte_end":13267018,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1629},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/mod.rs","byte_start":13317095,"byte_end":13317102,"line_start":4,"line_end":4,"column_start":24,"column_end":31},"alias_span":null,"name":"symlink","value":"","parent":{"krate":0,"index":1618}},{"kind":"Use","ref_id":{"krate":0,"index":1645},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/mod.rs","byte_start":13317159,"byte_end":13317173,"line_start":7,"line_end":7,"column_start":33,"column_end":47},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":1618}},{"kind":"Use","ref_id":{"krate":0,"index":1658},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/mod.rs","byte_start":13317228,"byte_end":13317241,"line_start":10,"line_end":10,"column_start":32,"column_end":45},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":1618}},{"kind":"Use","ref_id":{"krate":0,"index":1676},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267064,"byte_end":13267068,"line_start":54,"line_end":54,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1730},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267110,"byte_end":13267118,"line_start":57,"line_end":57,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":2030},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267120,"byte_end":13267128,"line_start":57,"line_end":57,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":2016},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267130,"byte_end":13267137,"line_start":57,"line_end":57,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1785},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267181,"byte_end":13267190,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1804},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267243,"byte_end":13267257,"line_start":63,"line_end":63,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1822},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267302,"byte_end":13267312,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1840},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267365,"byte_end":13267379,"line_start":69,"line_end":69,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1858},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267426,"byte_end":13267437,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1876},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267474,"byte_end":13267480,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1898},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267535,"byte_end":13267550,"line_start":78,"line_end":78,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1919},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267607,"byte_end":13267623,"line_start":81,"line_end":81,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1938},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267658,"byte_end":13267663,"line_start":84,"line_end":84,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267696,"byte_end":13267700,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":1320}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31150,"byte_end":31160,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":0,"index":2035},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31162,"byte_end":31171,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31205,"byte_end":31212,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45170,"byte_end":45182,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45227,"byte_end":45236,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45281,"byte_end":45290,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45337,"byte_end":45347,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":3804},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45499,"byte_end":45504,"line_start":201,"line_end":201,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":10587},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45506,"byte_end":45515,"line_start":201,"line_end":201,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":3802},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45517,"byte_end":45523,"line_start":201,"line_end":201,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":1,"index":10720},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45525,"byte_end":45533,"line_start":201,"line_end":201,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2534},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45630,"byte_end":45641,"line_start":207,"line_end":207,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2538},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45692,"byte_end":45704,"line_start":210,"line_end":210,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2638},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45760,"byte_end":45766,"line_start":215,"line_end":215,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2639},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45768,"byte_end":45774,"line_start":215,"line_end":215,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2643},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45813,"byte_end":45818,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2644},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45820,"byte_end":45825,"line_start":218,"line_end":218,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2648},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45866,"byte_end":45872,"line_start":221,"line_end":221,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2649},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45874,"byte_end":45880,"line_start":221,"line_end":221,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2861},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45936,"byte_end":45941,"line_start":226,"line_end":226,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2855},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45943,"byte_end":45951,"line_start":226,"line_end":226,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2858},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45953,"byte_end":45962,"line_start":226,"line_end":226,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":2863},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46015,"byte_end":46019,"line_start":229,"line_end":229,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4323},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46075,"byte_end":46079,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3601},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46081,"byte_end":46087,"line_start":233,"line_end":233,"column_start":15,"column_end":21},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4345},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46089,"byte_end":46094,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4587},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46096,"byte_end":46102,"line_start":233,"line_end":233,"column_start":30,"column_end":36},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4602},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46104,"byte_end":46108,"line_start":233,"line_end":233,"column_start":38,"column_end":42},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4217},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46110,"byte_end":46125,"line_start":233,"line_end":233,"column_start":44,"column_end":59},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4225},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46127,"byte_end":46139,"line_start":233,"line_end":233,"column_start":61,"column_end":73},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":3040},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46141,"byte_end":46153,"line_start":233,"line_end":233,"column_start":75,"column_end":87},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4277},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46155,"byte_end":46168,"line_start":233,"line_end":233,"column_start":89,"column_end":102},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":16714},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46178,"byte_end":46187,"line_start":234,"line_end":234,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":16687},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46189,"byte_end":46198,"line_start":234,"line_end":234,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":16637},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46200,"byte_end":46209,"line_start":234,"line_end":234,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4354},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46211,"byte_end":46223,"line_start":234,"line_end":234,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4327},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46225,"byte_end":46229,"line_start":234,"line_end":234,"column_start":56,"column_end":60},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4343},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46231,"byte_end":46236,"line_start":234,"line_end":234,"column_start":62,"column_end":67},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":16549},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46238,"byte_end":46243,"line_start":234,"line_end":234,"column_start":69,"column_end":74},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4588},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46245,"byte_end":46251,"line_start":234,"line_end":234,"column_start":76,"column_end":82},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4600},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46253,"byte_end":46257,"line_start":234,"line_end":234,"column_start":84,"column_end":88},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":15715},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46259,"byte_end":46264,"line_start":234,"line_end":234,"column_start":90,"column_end":95},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":15586},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46266,"byte_end":46270,"line_start":234,"line_end":234,"column_start":97,"column_end":101},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4640},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46321,"byte_end":46334,"line_start":238,"line_end":238,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":15668},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46336,"byte_end":46348,"line_start":238,"line_end":238,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":4694},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46374,"byte_end":46387,"line_start":239,"line_end":239,"column_start":24,"column_end":37},"alias_span":null,"name":"reader_stream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":15626},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46389,"byte_end":46401,"line_start":239,"line_end":239,"column_start":39,"column_end":51},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72848,"byte_end":72861,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":4991},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72921,"byte_end":72932,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":5427},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":13581853,"byte_end":13581861,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":4996}},{"kind":"Use","ref_id":{"krate":0,"index":5433},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":13581891,"byte_end":13581899,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":4996}},{"kind":"Use","ref_id":{"krate":0,"index":5440},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":13581901,"byte_end":13581910,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":4996}},{"kind":"Use","ref_id":{"krate":0,"index":5447},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":13581953,"byte_end":13581966,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":4996}},{"kind":"Use","ref_id":{"krate":0,"index":5451},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":13581968,"byte_end":13581982,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":4996}},{"kind":"Use","ref_id":{"krate":0,"index":5456},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":13581984,"byte_end":13581996,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4996}},{"kind":"Use","ref_id":{"krate":0,"index":5457},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":13581984,"byte_end":13581996,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4996}},{"kind":"Use","ref_id":{"krate":0,"index":5425},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72992,"byte_end":73003,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":5462},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73030,"byte_end":73039,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":5656},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":13642180,"byte_end":13642188,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5661},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":13642190,"byte_end":13642202,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5662},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":13642190,"byte_end":13642202,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5651},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":13642204,"byte_end":13642212,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5649},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73097,"byte_end":73106,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":6323},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":13664792,"byte_end":13664800,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":5668}},{"kind":"Use","ref_id":{"krate":0,"index":6330},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":13664802,"byte_end":13664810,"line_start":7,"line_end":7,"column_start":27,"column_end":35},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":5668}},{"kind":"Use","ref_id":{"krate":0,"index":6342},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":13664835,"byte_end":13664848,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedRecvHalf","value":"","parent":{"krate":0,"index":5668}},{"kind":"Use","ref_id":{"krate":0,"index":6337},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":13664850,"byte_end":13664863,"line_start":8,"line_end":8,"column_start":38,"column_end":51},"alias_span":null,"name":"OwnedSendHalf","value":"","parent":{"krate":0,"index":5668}},{"kind":"Use","ref_id":{"krate":0,"index":6346},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":13664865,"byte_end":13664877,"line_start":8,"line_end":8,"column_start":53,"column_end":65},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":5668}},{"kind":"Use","ref_id":{"krate":0,"index":6347},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":13664865,"byte_end":13664877,"line_start":8,"line_end":8,"column_start":53,"column_end":65},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":5668}},{"kind":"Use","ref_id":{"krate":0,"index":6352},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664371,"byte_end":13664379,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":5667}},{"kind":"Use","ref_id":{"krate":0,"index":6360},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664474,"byte_end":13664482,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":5667}},{"kind":"Use","ref_id":{"krate":0,"index":6367},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664484,"byte_end":13664493,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":5667}},{"kind":"Use","ref_id":{"krate":0,"index":6374},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664536,"byte_end":13664549,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":5667}},{"kind":"Use","ref_id":{"krate":0,"index":6378},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664551,"byte_end":13664565,"line_start":15,"line_end":15,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":5667}},{"kind":"Use","ref_id":{"krate":0,"index":6383},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664567,"byte_end":13664579,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":5667}},{"kind":"Use","ref_id":{"krate":0,"index":6384},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664567,"byte_end":13664579,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":5667}},{"kind":"Use","ref_id":{"krate":0,"index":6391},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664668,"byte_end":13664673,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":5667}},{"kind":"Use","ref_id":{"krate":0,"index":6321},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73176,"byte_end":73188,"line_start":46,"line_end":46,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":6358},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73218,"byte_end":73230,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":6389},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73258,"byte_end":73268,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106381,"byte_end":106383,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106392,"byte_end":106404,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106406,"byte_end":106415,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106417,"byte_end":106427,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":4217},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106492,"byte_end":106507,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":4225},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106514,"byte_end":106526,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":3040},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106533,"byte_end":106545,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":4277},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106552,"byte_end":106565,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":822}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114096,"byte_end":114103,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":836}},{"kind":"Use","ref_id":{"krate":0,"index":8183},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114188,"byte_end":114194,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":836}},{"kind":"Use","ref_id":{"krate":0,"index":998},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114196,"byte_end":114211,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":836}},{"kind":"Use","ref_id":{"krate":0,"index":8824},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135331,"byte_end":14135337,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":8815}},{"kind":"Use","ref_id":{"krate":0,"index":9212},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172241,"byte_end":14172251,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":9320},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172281,"byte_end":14172286,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":9990},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172288,"byte_end":14172293,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":9487},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172459,"byte_end":14172463,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":9997},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172465,"byte_end":14172469,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":9635},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172579,"byte_end":14172583,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":10011},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172585,"byte_end":14172589,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":9672},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172624,"byte_end":14172631,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":10017},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172633,"byte_end":14172640,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":10024},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172680,"byte_end":14172689,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":23,"index":96},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172981,"byte_end":14172987,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":9072}},{"kind":"Use","ref_id":{"krate":0,"index":11920},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290636,"byte_end":14290643,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":11932},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290645,"byte_end":14290662,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":10489},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14339070,"byte_end":14339077,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":10344}},{"kind":"Use","ref_id":{"krate":0,"index":10483},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14339079,"byte_end":14339087,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":10344}},{"kind":"Use","ref_id":{"krate":0,"index":10474},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14339089,"byte_end":14339095,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":10344}},{"kind":"Use","ref_id":{"krate":0,"index":10855},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14339173,"byte_end":14339190,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":10344}},{"kind":"Use","ref_id":{"krate":0,"index":10849},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14339192,"byte_end":14339209,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":10344}},{"kind":"Use","ref_id":{"krate":0,"index":10840},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14339211,"byte_end":14339226,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":10344}},{"kind":"Use","ref_id":{"krate":0,"index":10944},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290887,"byte_end":14290892,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":10948},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290894,"byte_end":14290904,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":12063},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290906,"byte_end":14290918,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":10952},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290920,"byte_end":14290935,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":12068},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290975,"byte_end":14290981,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":12201},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14291118,"byte_end":14291127,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":12205},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14291129,"byte_end":14291144,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":12212},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14291146,"byte_end":14291166,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":12222},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14291207,"byte_end":14291213,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":11627},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14291215,"byte_end":14291230,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":11654},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14291232,"byte_end":14291248,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":10095}},{"kind":"Use","ref_id":{"krate":0,"index":12291},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572824,"byte_end":14572838,"line_start":219,"line_end":219,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":12277}},{"kind":"Use","ref_id":{"krate":0,"index":12288},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572890,"byte_end":14572904,"line_start":222,"line_end":222,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":12277}},{"kind":"Use","ref_id":{"krate":0,"index":7780},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572965,"byte_end":14572974,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":12277}},{"kind":"Use","ref_id":{"krate":0,"index":7782},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572976,"byte_end":14572986,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":12277}},{"kind":"Use","ref_id":{"krate":0,"index":12334},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14573024,"byte_end":14573029,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":12277}},{"kind":"Use","ref_id":{"krate":0,"index":12336},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14573074,"byte_end":14573083,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":12277}},{"kind":"Use","ref_id":{"krate":0,"index":12554},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14573138,"byte_end":14573149,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":12277}},{"kind":"Use","ref_id":{"krate":0,"index":12545},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14573151,"byte_end":14573159,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":12277}},{"kind":"Use","ref_id":{"krate":0,"index":12495},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14573207,"byte_end":14573215,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":12277}},{"kind":"Use","ref_id":{"krate":0,"index":12334},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14601,"byte_end":14606,"line_start":390,"line_end":390,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":13340},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612486,"byte_end":14612496,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":12715},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612526,"byte_end":14612535,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":12714},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612537,"byte_end":14612548,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13382},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612550,"byte_end":14612555,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13441},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612609,"byte_end":14612614,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13461},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612653,"byte_end":14612660,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13143},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612696,"byte_end":14612704,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13144},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612706,"byte_end":14612717,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13480},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612719,"byte_end":14612727,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13197},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612777,"byte_end":14612784,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13199},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612786,"byte_end":14612796,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13485},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612798,"byte_end":14612805,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":14051},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612807,"byte_end":14612814,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":13527},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612873,"byte_end":14612881,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":14003},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612883,"byte_end":14612891,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":2,"index":45895},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14613000,"byte_end":14613008,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":12569}},{"kind":"Use","ref_id":{"krate":0,"index":1204},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/mod.rs","byte_start":180804,"byte_end":180816,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":1147}},{"kind":"Use","ref_id":{"krate":34,"index":67},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14880,"byte_end":14911,"line_start":404,"line_end":404,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":61},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":15247,"byte_end":15260,"line_start":413,"line_end":413,"column_start":35,"column_end":48},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":64},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":15367,"byte_end":15380,"line_start":416,"line_end":416,"column_start":35,"column_end":48},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":1320},{"krate":0,"index":95},{"krate":0,"index":243},{"krate":0,"index":445},{"krate":0,"index":534},{"krate":0,"index":750},{"krate":0,"index":822},{"krate":0,"index":6551},{"krate":0,"index":836},{"krate":0,"index":1126},{"krate":0,"index":8815},{"krate":0,"index":9072},{"krate":0,"index":10095},{"krate":0,"index":12277},{"krate":0,"index":12278},{"krate":0,"index":12569},{"krate":0,"index":1147},{"krate":0,"index":13985},{"krate":0,"index":13988},{"krate":0,"index":13991}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main, clippy :: match_like_matches_macro, clippy\n        :: stable_sort_primitive)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":56,"byte_end":241,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":242,"byte_end":348,"line_start":9,"line_end":14,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":557,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":630,"byte_end":633,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":634,"byte_end":714,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":715,"byte_end":787,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":788,"byte_end":824,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":825,"byte_end":828,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":829,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":897,"byte_end":977,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":978,"byte_end":1001,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1002,"byte_end":1089,"line_start":31,"line_end":31,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1090,"byte_end":1163,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1164,"byte_end":1242,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1243,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1324,"byte_end":1374,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1375,"byte_end":1378,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1379,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1436,"byte_end":1439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1440,"byte_end":1472,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1473,"byte_end":1496,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1497,"byte_end":1520,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1521,"byte_end":1547,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1548,"byte_end":1569,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1570,"byte_end":1589,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1590,"byte_end":1619,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1620,"byte_end":1647,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1648,"byte_end":1667,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1668,"byte_end":1697,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1698,"byte_end":1744,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1745,"byte_end":1748,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1749,"byte_end":1770,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1771,"byte_end":1774,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1775,"byte_end":1854,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1855,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1929,"byte_end":2008,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2009,"byte_end":2024,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2025,"byte_end":2028,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2029,"byte_end":2101,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2102,"byte_end":2139,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2140,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2144,"byte_end":2155,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2156,"byte_end":2208,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2209,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2221,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2246,"byte_end":2327,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2328,"byte_end":2406,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2407,"byte_end":2487,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2488,"byte_end":2565,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2566,"byte_end":2649,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2650,"byte_end":2727,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2728,"byte_end":2815,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2816,"byte_end":2897,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2898,"byte_end":2907,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2908,"byte_end":2911,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2912,"byte_end":2977,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2978,"byte_end":3060,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3061,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3144,"byte_end":3193,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3194,"byte_end":3247,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3248,"byte_end":3299,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3300,"byte_end":3360,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3361,"byte_end":3451,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3452,"byte_end":3501,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3502,"byte_end":3551,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3552,"byte_end":3602,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3603,"byte_end":3680,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3681,"byte_end":3704,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3705,"byte_end":3753,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3754,"byte_end":3823,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3824,"byte_end":3870,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3871,"byte_end":3952,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3953,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4004,"byte_end":4042,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4043,"byte_end":4098,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4099,"byte_end":4177,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4178,"byte_end":4242,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4243,"byte_end":4246,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4247,"byte_end":4329,"line_start":100,"line_end":100,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4330,"byte_end":4352,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4353,"byte_end":4356,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4357,"byte_end":4382,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4383,"byte_end":4386,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4387,"byte_end":4455,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4456,"byte_end":4519,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4520,"byte_end":4570,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4571,"byte_end":4574,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4575,"byte_end":4654,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4655,"byte_end":4732,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4733,"byte_end":4766,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4767,"byte_end":4770,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4771,"byte_end":4868,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4869,"byte_end":4872,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4873,"byte_end":4903,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4904,"byte_end":4907,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4908,"byte_end":4989,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4990,"byte_end":5075,"line_start":118,"line_end":118,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5076,"byte_end":5160,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5161,"byte_end":5191,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5192,"byte_end":5195,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5196,"byte_end":5212,"line_start":122,"line_end":122,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5213,"byte_end":5216,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5217,"byte_end":5283,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5284,"byte_end":5287,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5288,"byte_end":5299,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5300,"byte_end":5352,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5353,"byte_end":5360,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5361,"byte_end":5364,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5365,"byte_end":5392,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5393,"byte_end":5396,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5397,"byte_end":5476,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5477,"byte_end":5559,"line_start":133,"line_end":133,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5560,"byte_end":5641,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5642,"byte_end":5677,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5678,"byte_end":5681,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5682,"byte_end":5698,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5699,"byte_end":5702,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5703,"byte_end":5785,"line_start":139,"line_end":139,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5786,"byte_end":5836,"line_start":140,"line_end":140,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5837,"byte_end":5840,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5841,"byte_end":5852,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5853,"byte_end":5915,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5916,"byte_end":5923,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5924,"byte_end":5927,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5928,"byte_end":5953,"line_start":146,"line_end":146,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5954,"byte_end":5957,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5958,"byte_end":6034,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6035,"byte_end":6118,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6119,"byte_end":6162,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6163,"byte_end":6166,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6167,"byte_end":6246,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6247,"byte_end":6330,"line_start":153,"line_end":153,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6331,"byte_end":6409,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6410,"byte_end":6429,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6430,"byte_end":6433,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6434,"byte_end":6512,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6513,"byte_end":6528,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6529,"byte_end":6532,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6533,"byte_end":6576,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6577,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6610,"byte_end":6645,"line_start":162,"line_end":162,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6646,"byte_end":6689,"line_start":163,"line_end":163,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6690,"byte_end":6743,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6744,"byte_end":6747,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6748,"byte_end":6826,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6827,"byte_end":6883,"line_start":167,"line_end":167,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6884,"byte_end":6887,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6888,"byte_end":6961,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6962,"byte_end":6982,"line_start":170,"line_end":170,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6983,"byte_end":7058,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7059,"byte_end":7071,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7072,"byte_end":7152,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7153,"byte_end":7183,"line_start":174,"line_end":174,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7184,"byte_end":7187,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7188,"byte_end":7264,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7265,"byte_end":7277,"line_start":177,"line_end":177,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7278,"byte_end":7281,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7282,"byte_end":7314,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7315,"byte_end":7348,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7349,"byte_end":7386,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7387,"byte_end":7424,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7425,"byte_end":7456,"line_start":183,"line_end":183,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7457,"byte_end":7490,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7491,"byte_end":7494,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7495,"byte_end":7566,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7567,"byte_end":7647,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7648,"byte_end":7736,"line_start":188,"line_end":188,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7737,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7766,"byte_end":7841,"line_start":191,"line_end":191,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7842,"byte_end":7845,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7846,"byte_end":7878,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7879,"byte_end":7916,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7917,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7957,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7995,"byte_end":7998,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7999,"byte_end":8077,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8078,"byte_end":8162,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8163,"byte_end":8235,"line_start":200,"line_end":200,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8236,"byte_end":8313,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8314,"byte_end":8336,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8337,"byte_end":8340,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8341,"byte_end":8420,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8421,"byte_end":8499,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8500,"byte_end":8568,"line_start":206,"line_end":206,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8569,"byte_end":8647,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8648,"byte_end":8718,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8719,"byte_end":8722,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8723,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8750,"byte_end":8788,"line_start":211,"line_end":211,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8789,"byte_end":8829,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8830,"byte_end":8870,"line_start":213,"line_end":213,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8871,"byte_end":8920,"line_start":214,"line_end":214,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8921,"byte_end":8977,"line_start":215,"line_end":215,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8978,"byte_end":9033,"line_start":216,"line_end":216,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9034,"byte_end":9037,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9038,"byte_end":9078,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9079,"byte_end":9082,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9083,"byte_end":9162,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9163,"byte_end":9240,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9241,"byte_end":9321,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9322,"byte_end":9396,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9397,"byte_end":9476,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9477,"byte_end":9554,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9555,"byte_end":9628,"line_start":226,"line_end":226,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9629,"byte_end":9709,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9710,"byte_end":9788,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9789,"byte_end":9867,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9868,"byte_end":9940,"line_start":230,"line_end":230,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9941,"byte_end":9975,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9976,"byte_end":9979,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9980,"byte_end":10057,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10058,"byte_end":10061,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10062,"byte_end":10102,"line_start":235,"line_end":235,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10103,"byte_end":10156,"line_start":236,"line_end":236,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10157,"byte_end":10160,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10161,"byte_end":10168,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10169,"byte_end":10187,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10188,"byte_end":10209,"line_start":240,"line_end":240,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10210,"byte_end":10254,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10255,"byte_end":10258,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10259,"byte_end":10319,"line_start":243,"line_end":243,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10320,"byte_end":10372,"line_start":244,"line_end":244,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10373,"byte_end":10408,"line_start":245,"line_end":245,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10409,"byte_end":10420,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10421,"byte_end":10424,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10425,"byte_end":10480,"line_start":248,"line_end":248,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10481,"byte_end":10556,"line_start":249,"line_end":249,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10557,"byte_end":10574,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10575,"byte_end":10612,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10613,"byte_end":10618,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10619,"byte_end":10626,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10627,"byte_end":10630,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10631,"byte_end":10709,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10710,"byte_end":10786,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10787,"byte_end":10863,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10864,"byte_end":10888,"line_start":258,"line_end":258,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10889,"byte_end":10892,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10893,"byte_end":10927,"line_start":260,"line_end":260,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10928,"byte_end":10965,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10966,"byte_end":10969,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10970,"byte_end":10992,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10993,"byte_end":10996,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10997,"byte_end":11076,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11077,"byte_end":11124,"line_start":266,"line_end":266,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11125,"byte_end":11128,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11129,"byte_end":11208,"line_start":268,"line_end":268,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11209,"byte_end":11289,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11290,"byte_end":11370,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11371,"byte_end":11442,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11443,"byte_end":11523,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11524,"byte_end":11599,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11600,"byte_end":11603,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11604,"byte_end":11684,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11685,"byte_end":11745,"line_start":276,"line_end":276,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11746,"byte_end":11749,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11750,"byte_end":11829,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11830,"byte_end":11899,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11900,"byte_end":11977,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11978,"byte_end":12034,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12035,"byte_end":12115,"line_start":282,"line_end":282,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12116,"byte_end":12161,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12162,"byte_end":12241,"line_start":284,"line_end":284,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12242,"byte_end":12276,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12277,"byte_end":12280,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12281,"byte_end":12309,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12310,"byte_end":12349,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12350,"byte_end":12391,"line_start":289,"line_end":289,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12392,"byte_end":12437,"line_start":290,"line_end":290,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12438,"byte_end":12462,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12463,"byte_end":12493,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12494,"byte_end":12520,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12521,"byte_end":12547,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12548,"byte_end":12575,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12576,"byte_end":12604,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12605,"byte_end":12629,"line_start":297,"line_end":297,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12630,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12667,"byte_end":12705,"line_start":299,"line_end":299,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12706,"byte_end":12709,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12710,"byte_end":12724,"line_start":301,"line_end":301,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12725,"byte_end":12728,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12729,"byte_end":12758,"line_start":303,"line_end":303,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12759,"byte_end":12762,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12763,"byte_end":12776,"line_start":305,"line_end":305,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12777,"byte_end":12809,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12810,"byte_end":12836,"line_start":307,"line_end":307,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12837,"byte_end":12840,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12841,"byte_end":12859,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12860,"byte_end":12923,"line_start":310,"line_end":310,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12924,"byte_end":12994,"line_start":311,"line_end":311,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12995,"byte_end":12998,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12999,"byte_end":13013,"line_start":313,"line_end":313,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13014,"byte_end":13073,"line_start":314,"line_end":314,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13074,"byte_end":13077,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13078,"byte_end":13115,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13116,"byte_end":13156,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13157,"byte_end":13160,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13161,"byte_end":13241,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13242,"byte_end":13264,"line_start":320,"line_end":320,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13265,"byte_end":13328,"line_start":321,"line_end":321,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13329,"byte_end":13369,"line_start":322,"line_end":322,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13370,"byte_end":13420,"line_start":323,"line_end":323,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13421,"byte_end":13456,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13457,"byte_end":13492,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13493,"byte_end":13576,"line_start":326,"line_end":326,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13577,"byte_end":13612,"line_start":327,"line_end":327,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13613,"byte_end":13638,"line_start":328,"line_end":328,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13639,"byte_end":13661,"line_start":329,"line_end":329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13662,"byte_end":13665,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13666,"byte_end":13708,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13709,"byte_end":13781,"line_start":332,"line_end":332,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13782,"byte_end":13860,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13861,"byte_end":13892,"line_start":334,"line_end":334,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13893,"byte_end":13914,"line_start":335,"line_end":335,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13915,"byte_end":13932,"line_start":336,"line_end":336,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13933,"byte_end":13948,"line_start":337,"line_end":337,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13949,"byte_end":13958,"line_start":338,"line_end":338,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13959,"byte_end":13964,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13965,"byte_end":13972,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":1302},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":85}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14161,"byte_end":14173,"line_start":346,"line_end":346,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1320},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1665},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1790},{"krate":0,"index":1793},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1863},{"krate":0,"index":1866},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1971}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":18977,"byte_end":18999,"line_start":115,"line_end":115,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265318,"byte_end":13265336,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ Asynchronous file and standard stream adaptation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265338,"byte_end":13265391,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265392,"byte_end":13265395,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains utility methods and adapter types for input/output to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265396,"byte_end":13265474,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265475,"byte_end":13265539,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265540,"byte_end":13265618,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265619,"byte_end":13265622,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265623,"byte_end":13265694,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265695,"byte_end":13265769,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265770,"byte_end":13265844,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ to inform the runtime that a blocking operation is required. When","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265845,"byte_end":13265914,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265915,"byte_end":13265990,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13265991,"byte_end":13266055,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266056,"byte_end":13266059,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266060,"byte_end":13266072,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266073,"byte_end":13266076,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266077,"byte_end":13266151,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266152,"byte_end":13266227,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266228,"byte_end":13266304,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266305,"byte_end":13266382,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266383,"byte_end":13266461,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to a *backup* thread immediately.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266462,"byte_end":13266499,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266500,"byte_end":13266503,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: https://docs.rs/tokio-io/0.1/tokio_io/trait.AsyncRead.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13266504,"byte_end":13266581,"line_start":25,"line_end":25,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1335},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269861,"byte_end":13269873,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268355,"byte_end":13268427,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268428,"byte_end":13268482,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268483,"byte_end":13268486,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268487,"byte_end":13268549,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268550,"byte_end":13268553,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268554,"byte_end":13268586,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268587,"byte_end":13268590,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268591,"byte_end":13268623,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268624,"byte_end":13268627,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268628,"byte_end":13268702,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268703,"byte_end":13268780,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268781,"byte_end":13268837,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268838,"byte_end":13268841,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268842,"byte_end":13268916,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268917,"byte_end":13268994,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13268995,"byte_end":13269072,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269073,"byte_end":13269151,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269152,"byte_end":13269207,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269208,"byte_end":13269211,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269212,"byte_end":13269297,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269298,"byte_end":13269397,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269398,"byte_end":13269401,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269402,"byte_end":13269414,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269415,"byte_end":13269418,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269419,"byte_end":13269497,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269498,"byte_end":13269530,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269531,"byte_end":13269534,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269535,"byte_end":13269563,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269564,"byte_end":13269619,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269620,"byte_end":13269623,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269624,"byte_end":13269638,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269639,"byte_end":13269642,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269643,"byte_end":13269656,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269657,"byte_end":13269675,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269676,"byte_end":13269692,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269693,"byte_end":13269696,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269697,"byte_end":13269715,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269716,"byte_end":13269755,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269756,"byte_end":13269818,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269819,"byte_end":13269833,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269834,"byte_end":13269839,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/canonicalize.rs","byte_start":13269840,"byte_end":13269847,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1353},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271430,"byte_end":13271440,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270084,"byte_end":13270139,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270140,"byte_end":13270143,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270144,"byte_end":13270204,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270205,"byte_end":13270208,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270209,"byte_end":13270239,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270240,"byte_end":13270243,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270244,"byte_end":13270276,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270277,"byte_end":13270280,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270281,"byte_end":13270352,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270353,"byte_end":13270403,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270404,"byte_end":13270460,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270461,"byte_end":13270464,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270465,"byte_end":13270550,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270551,"byte_end":13270554,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270555,"byte_end":13270632,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270633,"byte_end":13270710,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270711,"byte_end":13270762,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270763,"byte_end":13270766,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270767,"byte_end":13270779,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270780,"byte_end":13270783,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270784,"byte_end":13270862,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270863,"byte_end":13270895,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270896,"byte_end":13270899,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270900,"byte_end":13270959,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13270960,"byte_end":13271038,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271039,"byte_end":13271109,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271110,"byte_end":13271126,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271127,"byte_end":13271155,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271156,"byte_end":13271159,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271160,"byte_end":13271207,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271208,"byte_end":13271211,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271212,"byte_end":13271226,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271227,"byte_end":13271230,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271231,"byte_end":13271244,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271245,"byte_end":13271263,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271264,"byte_end":13271280,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271281,"byte_end":13271284,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271285,"byte_end":13271303,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271304,"byte_end":13271343,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271344,"byte_end":13271387,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271388,"byte_end":13271402,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271403,"byte_end":13271408,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir.rs","byte_start":13271409,"byte_end":13271416,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1371},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273193,"byte_end":13273207,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271644,"byte_end":13271720,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271721,"byte_end":13271737,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271738,"byte_end":13271741,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271742,"byte_end":13271806,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271807,"byte_end":13271810,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271811,"byte_end":13271845,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271846,"byte_end":13271849,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271850,"byte_end":13271882,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271883,"byte_end":13271886,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271887,"byte_end":13271958,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13271959,"byte_end":13272009,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272010,"byte_end":13272066,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272067,"byte_end":13272070,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272071,"byte_end":13272156,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272157,"byte_end":13272160,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272161,"byte_end":13272173,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272174,"byte_end":13272177,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272178,"byte_end":13272256,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272257,"byte_end":13272289,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272290,"byte_end":13272293,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272294,"byte_end":13272371,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272372,"byte_end":13272448,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272449,"byte_end":13272528,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272529,"byte_end":13272564,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272565,"byte_end":13272568,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272569,"byte_end":13272642,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272643,"byte_end":13272729,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272730,"byte_end":13272811,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272812,"byte_end":13272889,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272890,"byte_end":13272930,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272931,"byte_end":13272934,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272935,"byte_end":13272978,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272979,"byte_end":13272982,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272983,"byte_end":13272997,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13272998,"byte_end":13273001,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273002,"byte_end":13273015,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273016,"byte_end":13273034,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273035,"byte_end":13273038,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273039,"byte_end":13273057,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273058,"byte_end":13273102,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273103,"byte_end":13273150,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273151,"byte_end":13273165,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273166,"byte_end":13273171,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/create_dir_all.rs","byte_start":13273172,"byte_end":13273179,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1981},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273823,"byte_end":13273833,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1983}],"decl_id":null,"docs":" A builder for creating directories in various manners.","sig":null,"attributes":[{"value":"/ A builder for creating directories in various manners.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273415,"byte_end":13273473,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273474,"byte_end":13273477,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Additional Unix-specific options are available via importing the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273478,"byte_end":13273546,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`DirBuilderExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273547,"byte_end":13273575,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273576,"byte_end":13273579,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirBuilder`] for usage on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273580,"byte_end":13273653,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273654,"byte_end":13273676,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273677,"byte_end":13273680,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::fs::DirBuilder]: std::fs::DirBuilder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273681,"byte_end":13273727,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`DirBuilderExt`]: crate::fs::os::unix::DirBuilderExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13273728,"byte_end":13273785,"line_start":15,"line_end":15,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274472,"byte_end":13274475,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274067,"byte_end":13274143,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274148,"byte_end":13274185,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274190,"byte_end":13274193,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::new`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274198,"byte_end":13274263,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274268,"byte_end":13274271,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::new","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274276,"byte_end":13274311,"line_start":32,"line_end":32,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274316,"byte_end":13274319,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274324,"byte_end":13274338,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274343,"byte_end":13274346,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274351,"byte_end":13274364,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274369,"byte_end":13274399,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274404,"byte_end":13274407,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274412,"byte_end":13274448,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274453,"byte_end":13274460,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275097,"byte_end":13275106,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether to create directories recursively (including all parent directories).\n Parents that do not exist are created with the same security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates whether to create directories recursively (including all parent directories).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274526,"byte_end":13274617,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ Parents that do not exist are created with the same security and permissions settings.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274622,"byte_end":13274712,"line_start":46,"line_end":46,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274717,"byte_end":13274720,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274725,"byte_end":13274761,"line_start":48,"line_end":48,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274766,"byte_end":13274769,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::recursive`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274774,"byte_end":13274845,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274850,"byte_end":13274853,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::recursive","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274858,"byte_end":13274899,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274904,"byte_end":13274907,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274912,"byte_end":13274926,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274931,"byte_end":13274934,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274939,"byte_end":13274952,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274957,"byte_end":13274987,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274992,"byte_end":13274995,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275000,"byte_end":13275040,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275045,"byte_end":13275073,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275078,"byte_end":13275085,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276311,"byte_end":13276317,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"create","qualname":"<DirBuilder>::create","value":"pub async fn create<P: AsRef<Path>, '_>(&'_ Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the configured options.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275210,"byte_end":13275274,"line_start":67,"line_end":67,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275279,"byte_end":13275282,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275287,"byte_end":13275355,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275360,"byte_end":13275390,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275395,"byte_end":13275398,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::create`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275403,"byte_end":13275471,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275476,"byte_end":13275479,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::create","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275484,"byte_end":13275522,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275527,"byte_end":13275530,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275535,"byte_end":13275547,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275552,"byte_end":13275555,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned under the following circumstances:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275560,"byte_end":13275624,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275629,"byte_end":13275632,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * Path already points to an existing file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275637,"byte_end":13275683,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/ * Path already points to an existing directory and the mode is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275688,"byte_end":13275754,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/   non-recursive.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275759,"byte_end":13275779,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/ * The calling process doesn't have permissions to create the directory","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275784,"byte_end":13275858,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/   or its missing parents.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275863,"byte_end":13275892,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/ * Other I/O error occurred.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275897,"byte_end":13275928,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275933,"byte_end":13275936,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275941,"byte_end":13275955,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275960,"byte_end":13275963,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275968,"byte_end":13275981,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13275986,"byte_end":13276016,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276021,"byte_end":13276037,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276042,"byte_end":13276045,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276050,"byte_end":13276068,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276073,"byte_end":13276112,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/     DirBuilder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276117,"byte_end":13276142,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/         .recursive(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276147,"byte_end":13276175,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/         .create(\"/tmp/foo/bar/baz\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276180,"byte_end":13276219,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/         .await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276224,"byte_end":13276244,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276249,"byte_end":13276252,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276257,"byte_end":13276271,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276276,"byte_end":13276281,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13276286,"byte_end":13276293,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279323,"byte_end":13279327,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277190,"byte_end":13277240,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277241,"byte_end":13277244,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277245,"byte_end":13277323,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277324,"byte_end":13277342,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277343,"byte_end":13277346,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277347,"byte_end":13277427,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277428,"byte_end":13277507,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277508,"byte_end":13277553,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277554,"byte_end":13277557,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277558,"byte_end":13277634,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277635,"byte_end":13277714,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277715,"byte_end":13277790,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277791,"byte_end":13277867,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277868,"byte_end":13277945,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13277946,"byte_end":13278023,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278024,"byte_end":13278045,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278046,"byte_end":13278049,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278050,"byte_end":13278123,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits. Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278124,"byte_end":13278204,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ import these traits through [the prelude].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278205,"byte_end":13278251,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278252,"byte_end":13278255,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278256,"byte_end":13278287,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278288,"byte_end":13278333,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278334,"byte_end":13278383,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278384,"byte_end":13278430,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278431,"byte_end":13278482,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278483,"byte_end":13278536,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278537,"byte_end":13278570,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278571,"byte_end":13278574,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278575,"byte_end":13278589,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278590,"byte_end":13278593,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278594,"byte_end":13278653,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278654,"byte_end":13278657,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278658,"byte_end":13278671,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278672,"byte_end":13278696,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for write_all()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278697,"byte_end":13278742,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278743,"byte_end":13278746,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278747,"byte_end":13278792,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278793,"byte_end":13278843,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278844,"byte_end":13278888,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278889,"byte_end":13278901,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278902,"byte_end":13278909,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278910,"byte_end":13278917,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278918,"byte_end":13278921,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278922,"byte_end":13278967,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278968,"byte_end":13278971,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278972,"byte_end":13278985,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13278986,"byte_end":13279010,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for read_to_end()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279011,"byte_end":13279058,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279059,"byte_end":13279062,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279063,"byte_end":13279108,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279109,"byte_end":13279157,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279158,"byte_end":13279161,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279162,"byte_end":13279192,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279193,"byte_end":13279236,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279237,"byte_end":13279240,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279241,"byte_end":13279282,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279283,"byte_end":13279295,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279296,"byte_end":13279303,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279304,"byte_end":13279311,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280873,"byte_end":13280877,"line_start":138,"line_end":138,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279842,"byte_end":13279888,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279893,"byte_end":13279896,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279901,"byte_end":13279942,"line_start":107,"line_end":107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279947,"byte_end":13279950,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279955,"byte_end":13279994,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279999,"byte_end":13280002,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280007,"byte_end":13280019,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280024,"byte_end":13280027,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280032,"byte_end":13280106,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280111,"byte_end":13280182,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280187,"byte_end":13280231,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280236,"byte_end":13280239,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280244,"byte_end":13280258,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280263,"byte_end":13280266,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280271,"byte_end":13280284,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280289,"byte_end":13280313,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280318,"byte_end":13280344,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280349,"byte_end":13280352,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280357,"byte_end":13280402,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280407,"byte_end":13280455,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280460,"byte_end":13280463,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280468,"byte_end":13280498,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280503,"byte_end":13280546,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280551,"byte_end":13280554,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280559,"byte_end":13280600,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280605,"byte_end":13280617,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280622,"byte_end":13280629,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280634,"byte_end":13280641,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280646,"byte_end":13280649,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280654,"byte_end":13280726,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280731,"byte_end":13280734,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280739,"byte_end":13280799,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13280804,"byte_end":13280855,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282095,"byte_end":13282101,"line_start":178,"line_end":178,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281074,"byte_end":13281110,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281115,"byte_end":13281118,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281123,"byte_end":13281199,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281204,"byte_end":13281222,"line_start":148,"line_end":148,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281227,"byte_end":13281230,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281235,"byte_end":13281276,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281281,"byte_end":13281284,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281289,"byte_end":13281328,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281333,"byte_end":13281336,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281341,"byte_end":13281353,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281358,"byte_end":13281361,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281366,"byte_end":13281439,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281444,"byte_end":13281499,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281504,"byte_end":13281507,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281512,"byte_end":13281549,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281554,"byte_end":13281557,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281562,"byte_end":13281576,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281581,"byte_end":13281584,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281589,"byte_end":13281602,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281607,"byte_end":13281631,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281636,"byte_end":13281662,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281667,"byte_end":13281670,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281675,"byte_end":13281720,"line_start":167,"line_end":167,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281725,"byte_end":13281775,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281780,"byte_end":13281824,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281829,"byte_end":13281841,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281846,"byte_end":13281853,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281858,"byte_end":13281865,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281870,"byte_end":13281873,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281878,"byte_end":13281949,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281954,"byte_end":13281957,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13281962,"byte_end":13282019,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282024,"byte_end":13282077,"line_start":177,"line_end":177,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282738,"byte_end":13282746,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"pub fn from_std(sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282314,"byte_end":13282383,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282388,"byte_end":13282391,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282396,"byte_end":13282420,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282425,"byte_end":13282441,"line_start":187,"line_end":187,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282446,"byte_end":13282449,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282454,"byte_end":13282468,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282473,"byte_end":13282476,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282481,"byte_end":13282494,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282499,"byte_end":13282574,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282579,"byte_end":13282594,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282599,"byte_end":13282658,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282663,"byte_end":13282714,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282719,"byte_end":13282726,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283658,"byte_end":13283662,"line_start":229,"line_end":229,"column_start":18,"column_end":22},"name":"seek","qualname":"<File>::seek","value":"pub async fn seek<'_>(&'_ mut Self, SeekFrom) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Seeks to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Seeks to an offset, in bytes, in a stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282936,"byte_end":13282982,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282987,"byte_end":13282990,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13282995,"byte_end":13283009,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283014,"byte_end":13283017,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283022,"byte_end":13283035,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283040,"byte_end":13283064,"line_start":210,"line_end":210,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283069,"byte_end":13283095,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283100,"byte_end":13283103,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283108,"byte_end":13283134,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283139,"byte_end":13283142,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283147,"byte_end":13283192,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283197,"byte_end":13283245,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283250,"byte_end":13283291,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283296,"byte_end":13283299,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283304,"byte_end":13283341,"line_start":219,"line_end":219,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283346,"byte_end":13283388,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283393,"byte_end":13283405,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283410,"byte_end":13283417,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283422,"byte_end":13283429,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283434,"byte_end":13283437,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The [`read_exact`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283442,"byte_end":13283513,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283518,"byte_end":13283521,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`read_exact`]: fn@crate::io::AsyncReadExt::read_exact","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283526,"byte_end":13283584,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13283589,"byte_end":13283640,"line_start":228,"line_end":228,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285403,"byte_end":13285411,"line_start":290,"line_end":290,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284647,"byte_end":13284701,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284706,"byte_end":13284709,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284714,"byte_end":13284788,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284793,"byte_end":13284825,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284830,"byte_end":13284833,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284838,"byte_end":13284852,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284857,"byte_end":13284860,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284865,"byte_end":13284878,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284883,"byte_end":13284907,"line_start":275,"line_end":275,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284912,"byte_end":13284938,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284943,"byte_end":13284946,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13284951,"byte_end":13284996,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285001,"byte_end":13285051,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285056,"byte_end":13285100,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285105,"byte_end":13285132,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285137,"byte_end":13285149,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285154,"byte_end":13285161,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285166,"byte_end":13285173,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285178,"byte_end":13285181,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285186,"byte_end":13285257,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285262,"byte_end":13285265,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285270,"byte_end":13285327,"line_start":288,"line_end":288,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285332,"byte_end":13285385,"line_start":289,"line_end":289,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286552,"byte_end":13286561,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285578,"byte_end":13285644,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285649,"byte_end":13285697,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285702,"byte_end":13285705,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285710,"byte_end":13285785,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285790,"byte_end":13285862,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285867,"byte_end":13285882,"line_start":302,"line_end":302,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285887,"byte_end":13285890,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285895,"byte_end":13285973,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285978,"byte_end":13285981,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13285986,"byte_end":13286000,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286005,"byte_end":13286008,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286013,"byte_end":13286026,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286031,"byte_end":13286055,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286060,"byte_end":13286086,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286091,"byte_end":13286094,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286099,"byte_end":13286144,"line_start":312,"line_end":312,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286149,"byte_end":13286199,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286204,"byte_end":13286248,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286253,"byte_end":13286281,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286286,"byte_end":13286298,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286303,"byte_end":13286310,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286315,"byte_end":13286322,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286327,"byte_end":13286330,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286335,"byte_end":13286406,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286411,"byte_end":13286414,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286419,"byte_end":13286476,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286481,"byte_end":13286534,"line_start":323,"line_end":323,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287786,"byte_end":13287793,"line_start":361,"line_end":361,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ mut Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286729,"byte_end":13286821,"line_start":331,"line_end":331,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286826,"byte_end":13286829,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286834,"byte_end":13286909,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286914,"byte_end":13286986,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13286991,"byte_end":13287067,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287072,"byte_end":13287084,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287089,"byte_end":13287092,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287097,"byte_end":13287109,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287114,"byte_end":13287117,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287122,"byte_end":13287190,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287195,"byte_end":13287207,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287212,"byte_end":13287215,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287220,"byte_end":13287234,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287239,"byte_end":13287242,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287247,"byte_end":13287260,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287265,"byte_end":13287289,"line_start":346,"line_end":346,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287294,"byte_end":13287320,"line_start":347,"line_end":347,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287325,"byte_end":13287328,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287333,"byte_end":13287378,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287383,"byte_end":13287433,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287438,"byte_end":13287482,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287487,"byte_end":13287515,"line_start":352,"line_end":352,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287520,"byte_end":13287532,"line_start":353,"line_end":353,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287537,"byte_end":13287544,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287549,"byte_end":13287556,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287561,"byte_end":13287564,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287569,"byte_end":13287640,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287645,"byte_end":13287648,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287653,"byte_end":13287710,"line_start":359,"line_end":359,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13287715,"byte_end":13287768,"line_start":360,"line_end":360,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289279,"byte_end":13289287,"line_start":417,"line_end":417,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13288893,"byte_end":13288940,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13288945,"byte_end":13288948,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13288953,"byte_end":13288967,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13288972,"byte_end":13288975,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13288980,"byte_end":13288993,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13288998,"byte_end":13289022,"line_start":407,"line_end":407,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289027,"byte_end":13289030,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289035,"byte_end":13289080,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289085,"byte_end":13289129,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289134,"byte_end":13289176,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289181,"byte_end":13289184,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289189,"byte_end":13289220,"line_start":413,"line_end":413,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289225,"byte_end":13289237,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289242,"byte_end":13289249,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289254,"byte_end":13289261,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289911,"byte_end":13289920,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"pub async fn try_clone<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289415,"byte_end":13289491,"line_start":422,"line_end":422,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289496,"byte_end":13289574,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289579,"byte_end":13289613,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289618,"byte_end":13289621,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289626,"byte_end":13289640,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289645,"byte_end":13289648,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289653,"byte_end":13289666,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289671,"byte_end":13289695,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289700,"byte_end":13289703,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289708,"byte_end":13289753,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289758,"byte_end":13289802,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289807,"byte_end":13289852,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289857,"byte_end":13289869,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289874,"byte_end":13289881,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13289886,"byte_end":13289893,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290650,"byte_end":13290658,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"pub async fn into_std(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290099,"byte_end":13290170,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290175,"byte_end":13290231,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290236,"byte_end":13290239,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290244,"byte_end":13290307,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290312,"byte_end":13290315,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290320,"byte_end":13290344,"line_start":448,"line_end":448,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290349,"byte_end":13290352,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290357,"byte_end":13290371,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290376,"byte_end":13290379,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290384,"byte_end":13290397,"line_start":452,"line_end":452,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290402,"byte_end":13290426,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290431,"byte_end":13290434,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290439,"byte_end":13290484,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290489,"byte_end":13290539,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290544,"byte_end":13290591,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290596,"byte_end":13290608,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290613,"byte_end":13290620,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290625,"byte_end":13290632,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291356,"byte_end":13291368,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"pub fn try_into_std(Self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290802,"byte_end":13290876,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290881,"byte_end":13290884,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290889,"byte_end":13290913,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290918,"byte_end":13290921,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290926,"byte_end":13290938,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290943,"byte_end":13290946,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13290951,"byte_end":13291017,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291022,"byte_end":13291049,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291054,"byte_end":13291057,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291062,"byte_end":13291076,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291081,"byte_end":13291084,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291089,"byte_end":13291102,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291107,"byte_end":13291131,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291136,"byte_end":13291139,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291144,"byte_end":13291189,"line_start":480,"line_end":480,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291194,"byte_end":13291244,"line_start":481,"line_end":481,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291249,"byte_end":13291303,"line_start":482,"line_end":482,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291308,"byte_end":13291320,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291325,"byte_end":13291332,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291337,"byte_end":13291344,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292646,"byte_end":13292661,"line_start":525,"line_end":525,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291621,"byte_end":13291672,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291677,"byte_end":13291680,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291685,"byte_end":13291717,"line_start":498,"line_end":498,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291722,"byte_end":13291725,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291730,"byte_end":13291806,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291811,"byte_end":13291884,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291889,"byte_end":13291929,"line_start":502,"line_end":502,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291934,"byte_end":13291937,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13291942,"byte_end":13292027,"line_start":504,"line_end":504,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292032,"byte_end":13292035,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292040,"byte_end":13292052,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292057,"byte_end":13292060,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292065,"byte_end":13292139,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292144,"byte_end":13292219,"line_start":509,"line_end":509,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292224,"byte_end":13292258,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292263,"byte_end":13292266,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292271,"byte_end":13292285,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292290,"byte_end":13292293,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292298,"byte_end":13292311,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292316,"byte_end":13292340,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292345,"byte_end":13292348,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292353,"byte_end":13292398,"line_start":517,"line_end":517,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292403,"byte_end":13292447,"line_start":518,"line_end":518,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292452,"byte_end":13292509,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292514,"byte_end":13292543,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292548,"byte_end":13292587,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292592,"byte_end":13292604,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292609,"byte_end":13292616,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13292621,"byte_end":13292628,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1552},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302667,"byte_end":13302676,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<impl AsRef<Path>: AsRef<Path>,\n                       impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                      impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301620,"byte_end":13301666,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301667,"byte_end":13301670,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301671,"byte_end":13301730,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301731,"byte_end":13301734,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301735,"byte_end":13301764,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301765,"byte_end":13301768,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301769,"byte_end":13301848,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301849,"byte_end":13301925,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301926,"byte_end":13301929,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301930,"byte_end":13301962,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301963,"byte_end":13301966,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13301967,"byte_end":13302037,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302038,"byte_end":13302087,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302088,"byte_end":13302144,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302145,"byte_end":13302148,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302149,"byte_end":13302234,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302235,"byte_end":13302238,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302239,"byte_end":13302251,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302252,"byte_end":13302255,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302256,"byte_end":13302334,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302335,"byte_end":13302367,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302368,"byte_end":13302371,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302372,"byte_end":13302424,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302425,"byte_end":13302428,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302429,"byte_end":13302443,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302444,"byte_end":13302447,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302448,"byte_end":13302461,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302462,"byte_end":13302480,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302481,"byte_end":13302484,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302485,"byte_end":13302503,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302504,"byte_end":13302548,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302549,"byte_end":13302624,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302625,"byte_end":13302639,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302640,"byte_end":13302645,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/hard_link.rs","byte_start":13302646,"byte_end":13302653,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1574},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13304071,"byte_end":13304079,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13302966,"byte_end":13303040,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303041,"byte_end":13303060,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303061,"byte_end":13303064,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303065,"byte_end":13303123,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303124,"byte_end":13303127,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303128,"byte_end":13303205,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303206,"byte_end":13303227,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303228,"byte_end":13303231,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303232,"byte_end":13303264,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303265,"byte_end":13303268,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303269,"byte_end":13303347,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303348,"byte_end":13303426,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303427,"byte_end":13303452,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303453,"byte_end":13303456,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303457,"byte_end":13303485,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303486,"byte_end":13303571,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303572,"byte_end":13303575,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303576,"byte_end":13303588,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303589,"byte_end":13303592,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303593,"byte_end":13303671,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303672,"byte_end":13303704,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303705,"byte_end":13303708,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303709,"byte_end":13303779,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303780,"byte_end":13303808,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303809,"byte_end":13303812,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303813,"byte_end":13303827,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303828,"byte_end":13303831,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303832,"byte_end":13303850,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303851,"byte_end":13303869,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303870,"byte_end":13303873,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303874,"byte_end":13303892,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303893,"byte_end":13303937,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13303938,"byte_end":13304000,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13304001,"byte_end":13304028,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13304029,"byte_end":13304043,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13304044,"byte_end":13304049,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/metadata.rs","byte_start":13304050,"byte_end":13304057,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2009},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306175,"byte_end":13306186,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304290,"byte_end":13304364,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304365,"byte_end":13304368,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304369,"byte_end":13304447,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304448,"byte_end":13304522,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304523,"byte_end":13304600,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304601,"byte_end":13304613,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304614,"byte_end":13304617,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304618,"byte_end":13304694,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304695,"byte_end":13304774,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304775,"byte_end":13304843,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304844,"byte_end":13304922,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304923,"byte_end":13304930,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304931,"byte_end":13304934,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13304935,"byte_end":13305011,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305012,"byte_end":13305034,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305035,"byte_end":13305038,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305039,"byte_end":13305118,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305119,"byte_end":13305154,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305155,"byte_end":13305158,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305159,"byte_end":13305188,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305189,"byte_end":13305220,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305221,"byte_end":13305250,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305251,"byte_end":13305269,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305270,"byte_end":13305300,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305301,"byte_end":13305335,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305336,"byte_end":13305386,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305387,"byte_end":13305390,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305391,"byte_end":13305405,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305406,"byte_end":13305409,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305410,"byte_end":13305437,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305438,"byte_end":13305441,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305442,"byte_end":13305455,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305456,"byte_end":13305487,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305488,"byte_end":13305504,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305505,"byte_end":13305508,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305509,"byte_end":13305527,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305528,"byte_end":13305567,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305568,"byte_end":13305605,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305606,"byte_end":13305629,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305630,"byte_end":13305658,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305659,"byte_end":13305679,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305680,"byte_end":13305683,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305684,"byte_end":13305698,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305699,"byte_end":13305704,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305705,"byte_end":13305712,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305713,"byte_end":13305716,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305717,"byte_end":13305794,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305795,"byte_end":13305813,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305814,"byte_end":13305817,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305818,"byte_end":13305831,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305832,"byte_end":13305863,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305864,"byte_end":13305880,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305881,"byte_end":13305884,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305885,"byte_end":13305903,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305904,"byte_end":13305943,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305944,"byte_end":13305981,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13305982,"byte_end":13306005,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306006,"byte_end":13306030,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306031,"byte_end":13306056,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306057,"byte_end":13306085,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306086,"byte_end":13306106,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306107,"byte_end":13306110,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306111,"byte_end":13306125,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306126,"byte_end":13306131,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306132,"byte_end":13306139,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306707,"byte_end":13306710,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306234,"byte_end":13306297,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306302,"byte_end":13306305,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306310,"byte_end":13306355,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306360,"byte_end":13306363,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306368,"byte_end":13306434,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306439,"byte_end":13306442,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306447,"byte_end":13306483,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306488,"byte_end":13306491,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306496,"byte_end":13306510,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306515,"byte_end":13306518,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306523,"byte_end":13306536,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306541,"byte_end":13306572,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306577,"byte_end":13306580,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306585,"byte_end":13306626,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306631,"byte_end":13306683,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306688,"byte_end":13306695,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307439,"byte_end":13307443,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306790,"byte_end":13306826,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306831,"byte_end":13306834,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306839,"byte_end":13306904,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306909,"byte_end":13306935,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306940,"byte_end":13306943,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306948,"byte_end":13307015,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307020,"byte_end":13307023,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307028,"byte_end":13307065,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307070,"byte_end":13307073,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307078,"byte_end":13307092,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307097,"byte_end":13307100,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307105,"byte_end":13307118,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307123,"byte_end":13307154,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307159,"byte_end":13307175,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307180,"byte_end":13307183,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307188,"byte_end":13307206,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307211,"byte_end":13307250,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307255,"byte_end":13307292,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307297,"byte_end":13307320,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307325,"byte_end":13307353,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307358,"byte_end":13307378,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307383,"byte_end":13307386,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307391,"byte_end":13307405,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307410,"byte_end":13307415,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307420,"byte_end":13307427,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308194,"byte_end":13308199,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307540,"byte_end":13307577,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307582,"byte_end":13307585,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307590,"byte_end":13307655,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307660,"byte_end":13307687,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307692,"byte_end":13307695,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307700,"byte_end":13307768,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307773,"byte_end":13307776,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307781,"byte_end":13307819,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307824,"byte_end":13307827,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307832,"byte_end":13307846,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307851,"byte_end":13307854,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307859,"byte_end":13307872,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307877,"byte_end":13307908,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307913,"byte_end":13307929,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307934,"byte_end":13307937,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307942,"byte_end":13307960,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13307965,"byte_end":13308004,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308009,"byte_end":13308046,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308051,"byte_end":13308075,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308080,"byte_end":13308108,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308113,"byte_end":13308133,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308138,"byte_end":13308141,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308146,"byte_end":13308160,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308165,"byte_end":13308170,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308175,"byte_end":13308182,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310429,"byte_end":13310435,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308299,"byte_end":13308339,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308344,"byte_end":13308347,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308352,"byte_end":13308427,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308432,"byte_end":13308488,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308493,"byte_end":13308560,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308565,"byte_end":13308585,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308590,"byte_end":13308593,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308598,"byte_end":13308675,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308680,"byte_end":13308756,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308761,"byte_end":13308770,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308775,"byte_end":13308778,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308783,"byte_end":13308857,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308862,"byte_end":13308933,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13308938,"byte_end":13309014,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309019,"byte_end":13309083,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309088,"byte_end":13309145,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309150,"byte_end":13309153,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309158,"byte_end":13309233,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309238,"byte_end":13309316,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309321,"byte_end":13309394,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309399,"byte_end":13309486,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309491,"byte_end":13309494,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309499,"byte_end":13309568,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309573,"byte_end":13309576,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309581,"byte_end":13309620,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309625,"byte_end":13309628,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309633,"byte_end":13309644,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309649,"byte_end":13309652,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309657,"byte_end":13309738,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309743,"byte_end":13309763,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309768,"byte_end":13309771,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309776,"byte_end":13309824,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309829,"byte_end":13309877,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309882,"byte_end":13309925,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309930,"byte_end":13309965,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13309970,"byte_end":13310013,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310018,"byte_end":13310053,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310058,"byte_end":13310061,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310066,"byte_end":13310080,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310085,"byte_end":13310088,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310093,"byte_end":13310106,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310111,"byte_end":13310142,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310147,"byte_end":13310163,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310168,"byte_end":13310171,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310176,"byte_end":13310194,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310199,"byte_end":13310238,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310243,"byte_end":13310280,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310285,"byte_end":13310310,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310315,"byte_end":13310343,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310348,"byte_end":13310368,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310373,"byte_end":13310376,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310381,"byte_end":13310395,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310400,"byte_end":13310405,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310410,"byte_end":13310417,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311352,"byte_end":13311360,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310538,"byte_end":13310589,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310594,"byte_end":13310597,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310602,"byte_end":13310676,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310681,"byte_end":13310727,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310732,"byte_end":13310735,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310740,"byte_end":13310807,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310812,"byte_end":13310815,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310820,"byte_end":13310891,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310896,"byte_end":13310899,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310904,"byte_end":13310945,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310950,"byte_end":13310953,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310958,"byte_end":13310972,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310977,"byte_end":13310980,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13310985,"byte_end":13310998,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311003,"byte_end":13311034,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311039,"byte_end":13311055,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311060,"byte_end":13311063,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311068,"byte_end":13311086,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311091,"byte_end":13311130,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311135,"byte_end":13311172,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311177,"byte_end":13311201,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311206,"byte_end":13311233,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311238,"byte_end":13311266,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311271,"byte_end":13311291,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311296,"byte_end":13311299,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311304,"byte_end":13311318,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311323,"byte_end":13311328,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311333,"byte_end":13311340,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312357,"byte_end":13312363,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311469,"byte_end":13311513,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311518,"byte_end":13311521,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311526,"byte_end":13311598,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311603,"byte_end":13311634,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311639,"byte_end":13311642,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311647,"byte_end":13311723,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311728,"byte_end":13311740,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311745,"byte_end":13311748,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311753,"byte_end":13311822,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311827,"byte_end":13311830,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311835,"byte_end":13311874,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311879,"byte_end":13311912,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311917,"byte_end":13311952,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311957,"byte_end":13311960,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311965,"byte_end":13311979,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311984,"byte_end":13311987,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13311992,"byte_end":13312005,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312010,"byte_end":13312041,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312046,"byte_end":13312062,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312067,"byte_end":13312070,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312075,"byte_end":13312093,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312098,"byte_end":13312137,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312142,"byte_end":13312179,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312184,"byte_end":13312208,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312213,"byte_end":13312238,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312243,"byte_end":13312271,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312276,"byte_end":13312296,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312301,"byte_end":13312304,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312309,"byte_end":13312323,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312328,"byte_end":13312333,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312338,"byte_end":13312345,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313762,"byte_end":13313772,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312466,"byte_end":13312514,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312519,"byte_end":13312522,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312527,"byte_end":13312600,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312605,"byte_end":13312677,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312682,"byte_end":13312685,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312690,"byte_end":13312764,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312769,"byte_end":13312841,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312846,"byte_end":13312912,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312917,"byte_end":13312920,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13312925,"byte_end":13312997,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313002,"byte_end":13313014,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313019,"byte_end":13313022,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313027,"byte_end":13313103,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313108,"byte_end":13313121,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313126,"byte_end":13313129,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313134,"byte_end":13313207,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313212,"byte_end":13313215,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313220,"byte_end":13313263,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313268,"byte_end":13313306,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313311,"byte_end":13313353,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313358,"byte_end":13313361,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313366,"byte_end":13313380,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313385,"byte_end":13313388,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313393,"byte_end":13313406,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313411,"byte_end":13313442,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313447,"byte_end":13313463,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313468,"byte_end":13313471,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313476,"byte_end":13313494,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313499,"byte_end":13313538,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313543,"byte_end":13313580,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313585,"byte_end":13313609,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313614,"byte_end":13313643,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313648,"byte_end":13313676,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313681,"byte_end":13313701,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313706,"byte_end":13313709,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313714,"byte_end":13313728,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313733,"byte_end":13313738,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313743,"byte_end":13313750,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13316224,"byte_end":13316228,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"pub async fn open<'_,\n                  impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313887,"byte_end":13313951,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313956,"byte_end":13313959,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13313964,"byte_end":13314031,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314036,"byte_end":13314039,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314044,"byte_end":13314081,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314086,"byte_end":13314089,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314094,"byte_end":13314106,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314111,"byte_end":13314114,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314119,"byte_end":13314185,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314190,"byte_end":13314265,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314270,"byte_end":13314344,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314349,"byte_end":13314424,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314429,"byte_end":13314483,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314488,"byte_end":13314491,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314496,"byte_end":13314570,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314575,"byte_end":13314604,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314609,"byte_end":13314682,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314687,"byte_end":13314703,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314708,"byte_end":13314782,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314787,"byte_end":13314820,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314825,"byte_end":13314897,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314902,"byte_end":13314951,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13314956,"byte_end":13315028,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315033,"byte_end":13315046,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315051,"byte_end":13315121,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315126,"byte_end":13315180,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315185,"byte_end":13315260,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315265,"byte_end":13315301,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315306,"byte_end":13315375,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315380,"byte_end":13315453,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315458,"byte_end":13315525,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315530,"byte_end":13315581,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315586,"byte_end":13315589,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315594,"byte_end":13315608,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315613,"byte_end":13315616,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315621,"byte_end":13315634,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315639,"byte_end":13315670,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315675,"byte_end":13315691,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315696,"byte_end":13315699,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315704,"byte_end":13315722,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315727,"byte_end":13315766,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315771,"byte_end":13315832,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315837,"byte_end":13315851,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315856,"byte_end":13315861,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315866,"byte_end":13315873,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315878,"byte_end":13315881,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315886,"byte_end":13315923,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315928,"byte_end":13315984,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13315989,"byte_end":13316043,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13316048,"byte_end":13316094,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13316099,"byte_end":13316139,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13316144,"byte_end":13316206,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1617},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::fs::os","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/mod.rs","parent":null,"children":[{"krate":0,"index":1618}],"decl_id":null,"docs":" OS-specific functionality.\n","sig":null,"attributes":[{"value":"/ OS-specific functionality.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/mod.rs","byte_start":13316895,"byte_end":13316925,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1618},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::fs::os::unix","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1635},{"krate":0,"index":1638},{"krate":0,"index":1651},{"krate":0,"index":1654},{"krate":0,"index":1662}],"decl_id":null,"docs":" Unix-specific extensions to primitives in the `tokio_fs` module.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/mod.rs","byte_start":13316927,"byte_end":13316939,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/ Unix-specific extensions to primitives in the `tokio_fs` module.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/mod.rs","byte_start":13316989,"byte_end":13317057,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1629},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/symlink.rs","byte_start":13317558,"byte_end":13317565,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"symlink","qualname":"::fs::os::unix::symlink::symlink","value":"pub async fn symlink<impl AsRef<Path>: AsRef<Path>,\n                     impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                    impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/symlink.rs","byte_start":13317305,"byte_end":13317355,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/symlink.rs","byte_start":13317356,"byte_end":13317359,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/symlink.rs","byte_start":13317360,"byte_end":13317430,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/symlink.rs","byte_start":13317431,"byte_end":13317434,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::unix::fs::symlink`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/symlink.rs","byte_start":13317435,"byte_end":13317502,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/symlink.rs","byte_start":13317503,"byte_end":13317506,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::unix::fs::symlink","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/symlink.rs","byte_start":13317507,"byte_end":13317544,"line_start":12,"line_end":12,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1645},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318156,"byte_end":13318170,"line_start":11,"line_end":11,"column_start":11,"column_end":25},"name":"OpenOptionsExt","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt","value":"OpenOptionsExt","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1647}],"decl_id":null,"docs":" Unix-specific extensions to [`fs::OpenOptions`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`fs::OpenOptions`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13317882,"byte_end":13317934,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13317935,"byte_end":13317938,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This mirrors the definition of [`std::os::unix::fs::OpenOptionsExt`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13317939,"byte_end":13318012,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318013,"byte_end":13318016,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318017,"byte_end":13318020,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`fs::OpenOptions`]: crate::fs::OpenOptions","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318021,"byte_end":13318068,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ [`std::os::unix::fs::OpenOptionsExt`]: std::os::unix::fs::OpenOptionsExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318069,"byte_end":13318145,"line_start":10,"line_end":10,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319064,"byte_end":13319068,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":" Sets the mode bits that a new file will be created with.","sig":null,"attributes":[{"value":"/ Sets the mode bits that a new file will be created with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318177,"byte_end":13318237,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318242,"byte_end":13318245,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ If a new file is created as part of an `OpenOptions::open` call then this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318250,"byte_end":13318327,"line_start":14,"line_end":14,"column_start":5,"column_end":82}},{"value":"/ specified `mode` will be used as the permission bits for the new file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318332,"byte_end":13318406,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ If no `mode` is set, the default of `0o666` will be used.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318411,"byte_end":13318472,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/ The operating system masks out bits with the system's `umask`, to produce","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318477,"byte_end":13318554,"line_start":17,"line_end":17,"column_start":5,"column_end":82}},{"value":"/ the final permissions.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318559,"byte_end":13318585,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318590,"byte_end":13318593,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318598,"byte_end":13318612,"line_start":20,"line_end":20,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318617,"byte_end":13318620,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318625,"byte_end":13318638,"line_start":22,"line_end":22,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318643,"byte_end":13318674,"line_start":23,"line_end":23,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318679,"byte_end":13318723,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318728,"byte_end":13318744,"line_start":25,"line_end":25,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318749,"byte_end":13318752,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318757,"byte_end":13318775,"line_start":27,"line_end":27,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318780,"byte_end":13318819,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318824,"byte_end":13318869,"line_start":29,"line_end":29,"column_start":5,"column_end":50}},{"value":"/     options.mode(0o644); // Give read/write for owner and read for others.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318874,"byte_end":13318952,"line_start":30,"line_end":30,"column_start":5,"column_end":83}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13318957,"byte_end":13319007,"line_start":31,"line_end":31,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319012,"byte_end":13319015,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319020,"byte_end":13319034,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319039,"byte_end":13319044,"line_start":34,"line_end":34,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319049,"byte_end":13319056,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13320033,"byte_end":13320045,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"custom_flags","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::custom_flags","value":"pub fn custom_flags(&mut Self, i32) -> &mut Self","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":" Pass custom flags to the `flags` argument of `open`.","sig":null,"attributes":[{"value":"/ Pass custom flags to the `flags` argument of `open`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319110,"byte_end":13319166,"line_start":38,"line_end":38,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319171,"byte_end":13319174,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The bits that define the access mode are masked out with `O_ACCMODE`, to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319179,"byte_end":13319255,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ ensure they do not interfere with the access mode set by Rusts options.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319260,"byte_end":13319335,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319340,"byte_end":13319343,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Custom flags can only set flags, not remove flags set by Rusts options.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319348,"byte_end":13319423,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ This options overwrites any previously set custom flags.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319428,"byte_end":13319488,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319493,"byte_end":13319496,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319501,"byte_end":13319515,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319520,"byte_end":13319523,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319528,"byte_end":13319541,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/ use libc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319546,"byte_end":13319559,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319564,"byte_end":13319595,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319600,"byte_end":13319644,"line_start":51,"line_end":51,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319649,"byte_end":13319665,"line_start":52,"line_end":52,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319670,"byte_end":13319673,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319678,"byte_end":13319696,"line_start":54,"line_end":54,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319701,"byte_end":13319740,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319745,"byte_end":13319790,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/     options.write(true);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319795,"byte_end":13319823,"line_start":57,"line_end":57,"column_start":5,"column_end":33}},{"value":"/     if cfg!(unix) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319828,"byte_end":13319851,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"/         options.custom_flags(libc::O_NOFOLLOW);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319856,"byte_end":13319907,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319912,"byte_end":13319921,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319926,"byte_end":13319976,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319981,"byte_end":13319984,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13319989,"byte_end":13320003,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13320008,"byte_end":13320013,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13320018,"byte_end":13320025,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1658},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320521,"byte_end":13320534,"line_start":6,"line_end":6,"column_start":11,"column_end":24},"name":"DirBuilderExt","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt","value":"DirBuilderExt","parent":null,"children":[{"krate":0,"index":1659}],"decl_id":null,"docs":" Unix-specific extensions to [`DirBuilder`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`DirBuilder`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320417,"byte_end":13320464,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320465,"byte_end":13320468,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DirBuilder`]: crate::fs::DirBuilder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320469,"byte_end":13320510,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320883,"byte_end":13320887,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":" Sets the mode to create new directories with.","sig":null,"attributes":[{"value":"/ Sets the mode to create new directories with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320541,"byte_end":13320590,"line_start":7,"line_end":7,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320595,"byte_end":13320598,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ This option defaults to 0o777.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320603,"byte_end":13320637,"line_start":9,"line_end":9,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320642,"byte_end":13320645,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320650,"byte_end":13320664,"line_start":11,"line_end":11,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320669,"byte_end":13320672,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320677,"byte_end":13320680,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320685,"byte_end":13320698,"line_start":14,"line_end":14,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320703,"byte_end":13320733,"line_start":15,"line_end":15,"column_start":5,"column_end":35}},{"value":"/ use tokio::fs::os::unix::DirBuilderExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320738,"byte_end":13320781,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320786,"byte_end":13320789,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320794,"byte_end":13320834,"line_start":18,"line_end":18,"column_start":5,"column_end":45}},{"value":"/ builder.mode(0o775);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320839,"byte_end":13320863,"line_start":19,"line_end":19,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320868,"byte_end":13320875,"line_start":20,"line_end":20,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1676},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322444,"byte_end":13322448,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321120,"byte_end":13321180,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321181,"byte_end":13321184,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321185,"byte_end":13321239,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321240,"byte_end":13321243,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321244,"byte_end":13321268,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321269,"byte_end":13321272,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321273,"byte_end":13321352,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321353,"byte_end":13321432,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321433,"byte_end":13321513,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321514,"byte_end":13321566,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321567,"byte_end":13321570,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321571,"byte_end":13321608,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321609,"byte_end":13321666,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321667,"byte_end":13321670,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321671,"byte_end":13321683,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321684,"byte_end":13321687,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321688,"byte_end":13321760,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321761,"byte_end":13321834,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321835,"byte_end":13321838,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321839,"byte_end":13321890,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321891,"byte_end":13321894,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321895,"byte_end":13321967,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13321968,"byte_end":13322020,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322021,"byte_end":13322024,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322025,"byte_end":13322088,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322089,"byte_end":13322092,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322093,"byte_end":13322107,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322108,"byte_end":13322111,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322112,"byte_end":13322125,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322126,"byte_end":13322144,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322145,"byte_end":13322174,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322175,"byte_end":13322178,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322179,"byte_end":13322197,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322198,"byte_end":13322271,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322272,"byte_end":13322326,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322327,"byte_end":13322401,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322402,"byte_end":13322416,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322417,"byte_end":13322422,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read.rs","byte_start":13322423,"byte_end":13322430,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1730},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323034,"byte_end":13323042,"line_start":18,"line_end":18,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13322886,"byte_end":13322943,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13322944,"byte_end":13322947,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13322948,"byte_end":13323020,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2016},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323854,"byte_end":13323861,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of the entries in a directory.","sig":null,"attributes":[{"value":"/ Stream of the entries in a directory.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323236,"byte_end":13323277,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323278,"byte_end":13323281,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This stream is returned from the [`read_dir`] function of this module and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323282,"byte_end":13323359,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323360,"byte_end":13323424,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323425,"byte_end":13323497,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323498,"byte_end":13323510,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323511,"byte_end":13323514,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323515,"byte_end":13323527,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323528,"byte_end":13323531,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This [`Stream`] will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323532,"byte_end":13323611,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ IO error during iteration.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323612,"byte_end":13323642,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323643,"byte_end":13323646,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323647,"byte_end":13323673,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323674,"byte_end":13323700,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323701,"byte_end":13323738,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323739,"byte_end":13323776,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13323794,"byte_end":13323842,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13324115,"byte_end":13324125,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"pub async fn next_entry<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13324046,"byte_end":13324097,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13324297,"byte_end":13324312,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"pub fn poll_next_entry(&mut Self, &mut Context)\n-> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2030},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326068,"byte_end":13326076,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325617,"byte_end":13325664,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325665,"byte_end":13325668,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325669,"byte_end":13325700,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325701,"byte_end":13325704,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325705,"byte_end":13325782,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325783,"byte_end":13325801,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325802,"byte_end":13325805,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325806,"byte_end":13325884,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325885,"byte_end":13325964,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325965,"byte_end":13326039,"line_start":109,"line_end":109,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326908,"byte_end":13326912,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326123,"byte_end":13326188,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326193,"byte_end":13326196,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326201,"byte_end":13326272,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326277,"byte_end":13326313,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326318,"byte_end":13326321,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326326,"byte_end":13326340,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326345,"byte_end":13326348,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326353,"byte_end":13326366,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326371,"byte_end":13326389,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326394,"byte_end":13326397,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326402,"byte_end":13326447,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326452,"byte_end":13326499,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326504,"byte_end":13326507,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326512,"byte_end":13326569,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326574,"byte_end":13326613,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326618,"byte_end":13326623,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326628,"byte_end":13326640,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326645,"byte_end":13326652,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326657,"byte_end":13326664,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326669,"byte_end":13326672,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326677,"byte_end":13326705,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326710,"byte_end":13326713,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326718,"byte_end":13326729,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326734,"byte_end":13326754,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326759,"byte_end":13326775,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326780,"byte_end":13326802,"line_start":139,"line_end":139,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326807,"byte_end":13326814,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326819,"byte_end":13326822,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326827,"byte_end":13326896,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327432,"byte_end":13327441,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326966,"byte_end":13327038,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327043,"byte_end":13327070,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327075,"byte_end":13327078,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327083,"byte_end":13327097,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327102,"byte_end":13327105,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327110,"byte_end":13327117,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327122,"byte_end":13327140,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327145,"byte_end":13327148,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327153,"byte_end":13327198,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327203,"byte_end":13327250,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327255,"byte_end":13327258,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327263,"byte_end":13327320,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327325,"byte_end":13327369,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327374,"byte_end":13327379,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327384,"byte_end":13327396,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327401,"byte_end":13327408,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327413,"byte_end":13327420,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328538,"byte_end":13328546,"line_start":198,"line_end":198,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327501,"byte_end":13327565,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327570,"byte_end":13327573,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327578,"byte_end":13327648,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327653,"byte_end":13327665,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327670,"byte_end":13327673,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327678,"byte_end":13327710,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327715,"byte_end":13327718,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327723,"byte_end":13327791,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327796,"byte_end":13327865,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327870,"byte_end":13327913,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327918,"byte_end":13327921,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327926,"byte_end":13327940,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327945,"byte_end":13327948,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327953,"byte_end":13327960,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327965,"byte_end":13327983,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327988,"byte_end":13327991,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13327996,"byte_end":13328041,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328046,"byte_end":13328093,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328098,"byte_end":13328101,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328106,"byte_end":13328163,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328168,"byte_end":13328222,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328227,"byte_end":13328281,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328286,"byte_end":13328359,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328364,"byte_end":13328380,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328385,"byte_end":13328455,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328460,"byte_end":13328469,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328474,"byte_end":13328479,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328484,"byte_end":13328496,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328501,"byte_end":13328508,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328513,"byte_end":13328520,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329730,"byte_end":13329739,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328672,"byte_end":13328737,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328742,"byte_end":13328745,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328750,"byte_end":13328820,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328825,"byte_end":13328837,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328842,"byte_end":13328845,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328850,"byte_end":13328882,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328887,"byte_end":13328890,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328895,"byte_end":13328965,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13328970,"byte_end":13329046,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329051,"byte_end":13329118,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329123,"byte_end":13329126,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329131,"byte_end":13329145,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329150,"byte_end":13329153,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329158,"byte_end":13329165,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329170,"byte_end":13329188,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329193,"byte_end":13329196,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329201,"byte_end":13329246,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329251,"byte_end":13329298,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329303,"byte_end":13329306,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329311,"byte_end":13329368,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329373,"byte_end":13329429,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329434,"byte_end":13329486,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329491,"byte_end":13329551,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329556,"byte_end":13329572,"line_start":226,"line_end":226,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329577,"byte_end":13329647,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329652,"byte_end":13329661,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329666,"byte_end":13329671,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329676,"byte_end":13329688,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329693,"byte_end":13329700,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329705,"byte_end":13329712,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1785},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_link.rs","byte_start":13330220,"byte_end":13330229,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_link.rs","byte_start":13330038,"byte_end":13330108,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_link.rs","byte_start":13330109,"byte_end":13330112,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_link.rs","byte_start":13330113,"byte_end":13330172,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_link.rs","byte_start":13330173,"byte_end":13330176,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_link.rs","byte_start":13330177,"byte_end":13330206,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1804},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330888,"byte_end":13330902,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330430,"byte_end":13330505,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330506,"byte_end":13330556,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330557,"byte_end":13330560,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::read_to_string`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330561,"byte_end":13330623,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330624,"byte_end":13330627,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330628,"byte_end":13330642,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330643,"byte_end":13330646,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330647,"byte_end":13330660,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330661,"byte_end":13330679,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330680,"byte_end":13330683,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330684,"byte_end":13330729,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330730,"byte_end":13330786,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330787,"byte_end":13330845,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330846,"byte_end":13330858,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330859,"byte_end":13330866,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_to_string.rs","byte_start":13330867,"byte_end":13330874,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1822},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir.rs","byte_start":13331250,"byte_end":13331260,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir.rs","byte_start":13331114,"byte_end":13331155,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir.rs","byte_start":13331156,"byte_end":13331159,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir.rs","byte_start":13331160,"byte_end":13331236,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1840},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir_all.rs","byte_start":13331674,"byte_end":13331688,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir_all.rs","byte_start":13331464,"byte_end":13331549,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir_all.rs","byte_start":13331550,"byte_end":13331553,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir_all.rs","byte_start":13331554,"byte_end":13331618,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir_all.rs","byte_start":13331619,"byte_end":13331622,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::remove_dir_all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_dir_all.rs","byte_start":13331623,"byte_end":13331660,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1858},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13332225,"byte_end":13332236,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13331896,"byte_end":13331935,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13331936,"byte_end":13331939,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13331940,"byte_end":13332018,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13332019,"byte_end":13332095,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13332096,"byte_end":13332109,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13332110,"byte_end":13332113,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13332114,"byte_end":13332175,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13332176,"byte_end":13332179,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/remove_file.rs","byte_start":13332180,"byte_end":13332211,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1876},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/rename.rs","byte_start":13332704,"byte_end":13332710,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<impl AsRef<Path>: AsRef<Path>,\n                    impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                   impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/rename.rs","byte_start":13332441,"byte_end":13332518,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/rename.rs","byte_start":13332519,"byte_end":13332543,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/rename.rs","byte_start":13332544,"byte_end":13332547,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/rename.rs","byte_start":13332548,"byte_end":13332617,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/rename.rs","byte_start":13332618,"byte_end":13332621,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/rename.rs","byte_start":13332622,"byte_end":13332690,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1898},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/set_permissions.rs","byte_start":13333186,"byte_end":13333201,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                            Permissions)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/set_permissions.rs","byte_start":13333000,"byte_end":13333059,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/set_permissions.rs","byte_start":13333060,"byte_end":13333063,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/set_permissions.rs","byte_start":13333064,"byte_end":13333129,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/set_permissions.rs","byte_start":13333130,"byte_end":13333133,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::set_permissions","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/set_permissions.rs","byte_start":13333134,"byte_end":13333172,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1919},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/symlink_metadata.rs","byte_start":13333630,"byte_end":13333646,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/symlink_metadata.rs","byte_start":13333453,"byte_end":13333501,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/symlink_metadata.rs","byte_start":13333502,"byte_end":13333505,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/symlink_metadata.rs","byte_start":13333506,"byte_end":13333572,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/symlink_metadata.rs","byte_start":13333573,"byte_end":13333576,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::symlink_metadata","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/symlink_metadata.rs","byte_start":13333577,"byte_end":13333616,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1938},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334216,"byte_end":13334221,"line_start":20,"line_end":20,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<C: AsRef<[u8]> + Unpin,\n                   impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>, C)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13333850,"byte_end":13333925,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13333926,"byte_end":13333959,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13333960,"byte_end":13333963,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::write`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13333964,"byte_end":13334017,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334018,"byte_end":13334021,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334022,"byte_end":13334036,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334037,"byte_end":13334040,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334041,"byte_end":13334054,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334055,"byte_end":13334073,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334074,"byte_end":13334077,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334078,"byte_end":13334123,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334124,"byte_end":13334173,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334174,"byte_end":13334186,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334187,"byte_end":13334194,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/write.rs","byte_start":13334195,"byte_end":13334202,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1954},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334948,"byte_end":13334952,"line_start":20,"line_end":20,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334503,"byte_end":13334645,"line_start":4,"line_end":4,"column_start":1,"column_end":143}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334646,"byte_end":13334698,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334699,"byte_end":13334702,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::copy`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334703,"byte_end":13334755,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334756,"byte_end":13334759,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334760,"byte_end":13334774,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334775,"byte_end":13334778,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334779,"byte_end":13334792,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334793,"byte_end":13334811,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334812,"byte_end":13334815,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334816,"byte_end":13334861,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334862,"byte_end":13334904,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334905,"byte_end":13334917,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334918,"byte_end":13334925,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/copy.rs","byte_start":13334926,"byte_end":13334933,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":240}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31049,"byte_end":31085,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31087,"byte_end":31111,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2037},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31576,"byte_end":31582,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":2035},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31541,"byte_end":31571,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2040},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31636,"byte_end":31640,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":2035},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31593,"byte_end":31631,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2043},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31802,"byte_end":31806,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":2035},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31659,"byte_end":31725,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31730,"byte_end":31797,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":2035},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31512,"byte_end":31521,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2043}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31448,"byte_end":31485,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31969,"byte_end":31979,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31924,"byte_end":31961,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32382,"byte_end":32392,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32098,"byte_end":32183,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32188,"byte_end":32259,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32264,"byte_end":32337,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32342,"byte_end":32370,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32770,"byte_end":32781,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32649,"byte_end":32716,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32721,"byte_end":32744,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32749,"byte_end":32758,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":33993,"byte_end":33999,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":33941,"byte_end":33981,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34129,"byte_end":34136,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34050,"byte_end":34121,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2048},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34901,"byte_end":34906,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34672,"byte_end":34713,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34714,"byte_end":34717,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34718,"byte_end":34795,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34864,"byte_end":34889,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":244},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":2219},{"krate":0,"index":2368},{"krate":0,"index":2449},{"krate":0,"index":2452},{"krate":0,"index":2505},{"krate":0,"index":2543},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2572},{"krate":0,"index":2575},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2653},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2790},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2801},{"krate":0,"index":2804},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2819},{"krate":0,"index":2822},{"krate":0,"index":2825},{"krate":0,"index":2828},{"krate":0,"index":2831},{"krate":0,"index":2834},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2849},{"krate":0,"index":2852},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4883},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4890},{"krate":0,"index":4893}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37661,"byte_end":37738,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37739,"byte_end":37742,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37743,"byte_end":37814,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37815,"byte_end":37895,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37896,"byte_end":37970,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37971,"byte_end":37974,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37975,"byte_end":38005,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38006,"byte_end":38009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38010,"byte_end":38090,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38091,"byte_end":38168,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38169,"byte_end":38246,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38247,"byte_end":38327,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38328,"byte_end":38406,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38407,"byte_end":38472,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38473,"byte_end":38476,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38477,"byte_end":38549,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38550,"byte_end":38617,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38618,"byte_end":38697,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38698,"byte_end":38772,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38773,"byte_end":38847,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38848,"byte_end":38865,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38866,"byte_end":38869,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38870,"byte_end":38934,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38935,"byte_end":39010,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39011,"byte_end":39086,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39087,"byte_end":39164,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39165,"byte_end":39168,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39169,"byte_end":39245,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39246,"byte_end":39321,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39322,"byte_end":39402,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39403,"byte_end":39474,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39475,"byte_end":39544,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39545,"byte_end":39548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39549,"byte_end":39621,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39622,"byte_end":39702,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39703,"byte_end":39756,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39757,"byte_end":39760,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39761,"byte_end":39774,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39775,"byte_end":39815,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39816,"byte_end":39840,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39841,"byte_end":39844,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39845,"byte_end":39863,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39864,"byte_end":39903,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39904,"byte_end":39953,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39954,"byte_end":39987,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39988,"byte_end":39991,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39992,"byte_end":40022,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40023,"byte_end":40066,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40067,"byte_end":40070,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40071,"byte_end":40121,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40122,"byte_end":40136,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40137,"byte_end":40142,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40143,"byte_end":40150,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40151,"byte_end":40154,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40155,"byte_end":40184,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40185,"byte_end":40225,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40226,"byte_end":40262,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40263,"byte_end":40304,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40305,"byte_end":40308,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40309,"byte_end":40344,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40345,"byte_end":40348,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40349,"byte_end":40430,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40431,"byte_end":40505,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40506,"byte_end":40584,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40585,"byte_end":40629,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40630,"byte_end":40633,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40634,"byte_end":40704,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40705,"byte_end":40783,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40784,"byte_end":40862,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40863,"byte_end":40940,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40941,"byte_end":40944,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40945,"byte_end":41020,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41021,"byte_end":41059,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41060,"byte_end":41063,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41064,"byte_end":41077,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41078,"byte_end":41132,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41133,"byte_end":41157,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41158,"byte_end":41161,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41162,"byte_end":41180,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41181,"byte_end":41220,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41221,"byte_end":41266,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41267,"byte_end":41310,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41311,"byte_end":41350,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41351,"byte_end":41354,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41355,"byte_end":41389,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41390,"byte_end":41435,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41436,"byte_end":41439,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41440,"byte_end":41471,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41472,"byte_end":41486,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41487,"byte_end":41492,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41493,"byte_end":41500,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41501,"byte_end":41504,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41505,"byte_end":41586,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41587,"byte_end":41665,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41666,"byte_end":41728,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41729,"byte_end":41732,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41733,"byte_end":41746,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41747,"byte_end":41799,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41800,"byte_end":41824,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41825,"byte_end":41828,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41829,"byte_end":41847,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41848,"byte_end":41887,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41888,"byte_end":41935,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41936,"byte_end":41945,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41946,"byte_end":41993,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41994,"byte_end":41997,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41998,"byte_end":42040,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42041,"byte_end":42082,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42083,"byte_end":42086,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42087,"byte_end":42147,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42148,"byte_end":42182,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42183,"byte_end":42186,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42187,"byte_end":42277,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42278,"byte_end":42281,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42282,"byte_end":42296,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42297,"byte_end":42302,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42303,"byte_end":42310,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42311,"byte_end":42314,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42315,"byte_end":42360,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42361,"byte_end":42403,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42404,"byte_end":42449,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42450,"byte_end":42489,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42490,"byte_end":42529,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42530,"byte_end":42533,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42534,"byte_end":42578,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42579,"byte_end":42582,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42583,"byte_end":42665,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42666,"byte_end":42745,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42746,"byte_end":42820,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42821,"byte_end":42894,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42895,"byte_end":42955,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42956,"byte_end":42959,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42960,"byte_end":43001,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43002,"byte_end":43005,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43006,"byte_end":43074,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43075,"byte_end":43144,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43145,"byte_end":43211,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43212,"byte_end":43275,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43276,"byte_end":43343,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43344,"byte_end":43413,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43414,"byte_end":43484,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43485,"byte_end":43563,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43564,"byte_end":43589,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43590,"byte_end":43593,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43594,"byte_end":43670,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43671,"byte_end":43674,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43675,"byte_end":43706,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43707,"byte_end":43710,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43711,"byte_end":43791,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43792,"byte_end":43868,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43869,"byte_end":43916,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43917,"byte_end":43920,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43921,"byte_end":43994,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43995,"byte_end":44071,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44072,"byte_end":44148,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44149,"byte_end":44152,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44153,"byte_end":44174,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44175,"byte_end":44198,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44199,"byte_end":44221,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44222,"byte_end":44225,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44226,"byte_end":44248,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44249,"byte_end":44252,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44253,"byte_end":44329,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44330,"byte_end":44377,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44378,"byte_end":44381,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44382,"byte_end":44416,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44417,"byte_end":44453,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44454,"byte_end":44494,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44495,"byte_end":44537,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44538,"byte_end":44611,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44612,"byte_end":44695,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44696,"byte_end":44779,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44780,"byte_end":44807,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44808,"byte_end":44841,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44842,"byte_end":44869,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44870,"byte_end":44897,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44898,"byte_end":44929,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44930,"byte_end":45000,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45001,"byte_end":45038,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45039,"byte_end":45068,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":264},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47533,"byte_end":47545,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46856,"byte_end":46887,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46888,"byte_end":46891,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46892,"byte_end":46964,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46965,"byte_end":47043,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47044,"byte_end":47130,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47131,"byte_end":47208,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47209,"byte_end":47220,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47221,"byte_end":47224,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47225,"byte_end":47293,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47294,"byte_end":47318,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47319,"byte_end":47322,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47323,"byte_end":47365,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47366,"byte_end":47416,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47417,"byte_end":47470,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47471,"byte_end":47522,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48643,"byte_end":48656,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47563,"byte_end":47648,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47653,"byte_end":47694,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47699,"byte_end":47702,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47707,"byte_end":47754,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47759,"byte_end":47762,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47767,"byte_end":47826,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47831,"byte_end":47889,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47894,"byte_end":47975,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47980,"byte_end":48006,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48011,"byte_end":48014,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48019,"byte_end":48090,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48095,"byte_end":48157,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48162,"byte_end":48233,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48238,"byte_end":48319,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48324,"byte_end":48400,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48405,"byte_end":48456,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48461,"byte_end":48464,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48469,"byte_end":48540,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48545,"byte_end":48548,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48553,"byte_end":48592,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48597,"byte_end":48635,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49559,"byte_end":49566,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48734,"byte_end":48808,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48813,"byte_end":48880,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48885,"byte_end":48888,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48893,"byte_end":48964,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48969,"byte_end":49038,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49043,"byte_end":49117,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49122,"byte_end":49199,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49204,"byte_end":49274,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49279,"byte_end":49332,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49337,"byte_end":49340,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49345,"byte_end":49417,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49422,"byte_end":49444,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49449,"byte_end":49452,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49457,"byte_end":49496,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49501,"byte_end":49551,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":309},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52800,"byte_end":52809,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51219,"byte_end":51249,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51250,"byte_end":51253,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51254,"byte_end":51333,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51334,"byte_end":51408,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51409,"byte_end":51488,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51489,"byte_end":51566,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51567,"byte_end":51578,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51579,"byte_end":51582,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51583,"byte_end":51660,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51661,"byte_end":51679,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51680,"byte_end":51683,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51684,"byte_end":51760,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51761,"byte_end":51837,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51838,"byte_end":51857,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51858,"byte_end":51861,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51862,"byte_end":51927,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51928,"byte_end":52008,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52009,"byte_end":52088,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52089,"byte_end":52162,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52163,"byte_end":52236,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52237,"byte_end":52258,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52259,"byte_end":52262,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52263,"byte_end":52347,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52348,"byte_end":52372,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52373,"byte_end":52376,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52377,"byte_end":52450,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52451,"byte_end":52530,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52531,"byte_end":52534,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52535,"byte_end":52600,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52601,"byte_end":52622,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52623,"byte_end":52626,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52627,"byte_end":52666,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52667,"byte_end":52703,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52704,"byte_end":52743,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52744,"byte_end":52789,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54453,"byte_end":54481,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52816,"byte_end":52890,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52895,"byte_end":52944,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52949,"byte_end":52952,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52957,"byte_end":53030,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53035,"byte_end":53106,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53111,"byte_end":53185,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53190,"byte_end":53266,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53271,"byte_end":53309,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53314,"byte_end":53317,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53322,"byte_end":53398,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53403,"byte_end":53477,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53482,"byte_end":53559,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53564,"byte_end":53596,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53601,"byte_end":53604,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53609,"byte_end":53682,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53687,"byte_end":53755,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53760,"byte_end":53816,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53821,"byte_end":53856,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53861,"byte_end":53864,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53869,"byte_end":53945,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53950,"byte_end":54025,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54030,"byte_end":54107,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54112,"byte_end":54130,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54135,"byte_end":54138,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54143,"byte_end":54194,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54199,"byte_end":54202,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54207,"byte_end":54219,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54224,"byte_end":54227,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54232,"byte_end":54304,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54309,"byte_end":54340,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54345,"byte_end":54348,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54353,"byte_end":54384,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54389,"byte_end":54438,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54994,"byte_end":55003,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54624,"byte_end":54677,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54682,"byte_end":54685,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54690,"byte_end":54748,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54753,"byte_end":54756,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54761,"byte_end":54820,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54825,"byte_end":54883,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54888,"byte_end":54955,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54960,"byte_end":54986,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55464,"byte_end":55477,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55128,"byte_end":55204,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55209,"byte_end":55238,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55243,"byte_end":55246,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55251,"byte_end":55326,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55331,"byte_end":55407,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55412,"byte_end":55456,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":354},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58632,"byte_end":58641,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58150,"byte_end":58180,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58181,"byte_end":58184,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58185,"byte_end":58259,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58260,"byte_end":58330,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58331,"byte_end":58400,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58401,"byte_end":58404,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58405,"byte_end":58470,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58471,"byte_end":58492,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58493,"byte_end":58496,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58497,"byte_end":58533,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58534,"byte_end":58575,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58576,"byte_end":58621,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58979,"byte_end":58989,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58648,"byte_end":58705,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58710,"byte_end":58713,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58718,"byte_end":58791,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58796,"byte_end":58822,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58827,"byte_end":58830,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58835,"byte_end":58910,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58915,"byte_end":58971,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59572,"byte_end":59585,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59115,"byte_end":59158,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59163,"byte_end":59166,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59171,"byte_end":59220,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59225,"byte_end":59295,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59300,"byte_end":59361,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59366,"byte_end":59369,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59374,"byte_end":59386,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59391,"byte_end":59394,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59399,"byte_end":59455,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59460,"byte_end":59463,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59468,"byte_end":59480,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59485,"byte_end":59488,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59493,"byte_end":59564,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63088,"byte_end":63098,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61225,"byte_end":61257,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61258,"byte_end":61261,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61262,"byte_end":61344,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61345,"byte_end":61420,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61421,"byte_end":61488,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61489,"byte_end":61492,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61493,"byte_end":61573,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61574,"byte_end":61592,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61593,"byte_end":61596,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61597,"byte_end":61668,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61669,"byte_end":61683,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61684,"byte_end":61687,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61688,"byte_end":61756,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61757,"byte_end":61837,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61838,"byte_end":61917,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61918,"byte_end":61991,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61992,"byte_end":62065,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62066,"byte_end":62087,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62088,"byte_end":62091,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62092,"byte_end":62176,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62177,"byte_end":62201,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62202,"byte_end":62205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62206,"byte_end":62288,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62289,"byte_end":62372,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62373,"byte_end":62376,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62377,"byte_end":62461,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62462,"byte_end":62546,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62547,"byte_end":62625,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62626,"byte_end":62705,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62706,"byte_end":62767,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62768,"byte_end":62771,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62772,"byte_end":62838,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62839,"byte_end":62861,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62862,"byte_end":62865,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62866,"byte_end":62904,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62905,"byte_end":62949,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62950,"byte_end":62989,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62990,"byte_end":63029,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63030,"byte_end":63077,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63482,"byte_end":63492,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63105,"byte_end":63159,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63164,"byte_end":63167,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63172,"byte_end":63233,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63238,"byte_end":63241,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63246,"byte_end":63308,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63313,"byte_end":63371,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63376,"byte_end":63443,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63448,"byte_end":63474,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64033,"byte_end":64043,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63620,"byte_end":63691,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63696,"byte_end":63718,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63723,"byte_end":63726,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63731,"byte_end":63777,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63782,"byte_end":63785,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63790,"byte_end":63854,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63859,"byte_end":63917,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63922,"byte_end":63990,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63995,"byte_end":64025,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67329,"byte_end":67342,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64125,"byte_end":64199,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64204,"byte_end":64252,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64257,"byte_end":64260,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64265,"byte_end":64336,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64341,"byte_end":64417,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64422,"byte_end":64498,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64503,"byte_end":64578,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64583,"byte_end":64654,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64659,"byte_end":64735,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64740,"byte_end":64768,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64773,"byte_end":64776,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64781,"byte_end":64842,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64847,"byte_end":64918,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64923,"byte_end":64995,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65000,"byte_end":65075,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65080,"byte_end":65153,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65158,"byte_end":65233,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65238,"byte_end":65310,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65315,"byte_end":65326,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65331,"byte_end":65334,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65339,"byte_end":65413,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65418,"byte_end":65490,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65495,"byte_end":65564,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65569,"byte_end":65637,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65642,"byte_end":65703,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65708,"byte_end":65711,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65716,"byte_end":65734,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65739,"byte_end":65742,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65747,"byte_end":65817,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65822,"byte_end":65825,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65830,"byte_end":65893,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65898,"byte_end":65967,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65972,"byte_end":66047,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66052,"byte_end":66125,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66130,"byte_end":66181,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66186,"byte_end":66189,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66194,"byte_end":66264,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66269,"byte_end":66344,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66349,"byte_end":66421,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66426,"byte_end":66496,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66501,"byte_end":66576,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66581,"byte_end":66584,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66589,"byte_end":66670,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66675,"byte_end":66750,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66755,"byte_end":66822,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66827,"byte_end":66830,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66835,"byte_end":66847,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66852,"byte_end":66855,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66860,"byte_end":66931,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66936,"byte_end":67002,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67007,"byte_end":67081,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67086,"byte_end":67150,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67155,"byte_end":67194,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67199,"byte_end":67202,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67207,"byte_end":67219,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67224,"byte_end":67227,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67232,"byte_end":67307,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67312,"byte_end":67321,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67630,"byte_end":67644,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67424,"byte_end":67498,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67503,"byte_end":67506,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67511,"byte_end":67585,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67590,"byte_end":67622,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2534},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13363049,"byte_end":13363060,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365306,"byte_end":13365309,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13364884,"byte_end":13364952,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13364957,"byte_end":13364960,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13364965,"byte_end":13364977,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13364982,"byte_end":13364985,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13364990,"byte_end":13365050,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365055,"byte_end":13365058,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365063,"byte_end":13365133,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365138,"byte_end":13365211,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365216,"byte_end":13365294,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366513,"byte_end":13366527,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365409,"byte_end":13365503,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365508,"byte_end":13365602,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365607,"byte_end":13365702,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365707,"byte_end":13365801,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365806,"byte_end":13365834,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365839,"byte_end":13365842,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365847,"byte_end":13365884,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365889,"byte_end":13365892,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365897,"byte_end":13365908,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365913,"byte_end":13365930,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365935,"byte_end":13365966,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13365971,"byte_end":13366016,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366021,"byte_end":13366075,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366080,"byte_end":13366132,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366137,"byte_end":13366147,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366152,"byte_end":13366159,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366164,"byte_end":13366167,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366172,"byte_end":13366184,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366189,"byte_end":13366192,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366197,"byte_end":13366257,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366262,"byte_end":13366265,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366270,"byte_end":13366340,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366345,"byte_end":13366418,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366423,"byte_end":13366501,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367005,"byte_end":13367012,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366891,"byte_end":13366965,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13366970,"byte_end":13366993,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367188,"byte_end":13367195,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367073,"byte_end":13367148,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367153,"byte_end":13367176,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367731,"byte_end":13367741,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367264,"byte_end":13367313,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367318,"byte_end":13367321,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367326,"byte_end":13367400,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367405,"byte_end":13367480,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367485,"byte_end":13367488,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367493,"byte_end":13367568,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367573,"byte_end":13367649,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367654,"byte_end":13367719,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368898,"byte_end":13368913,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367889,"byte_end":13367940,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367945,"byte_end":13367948,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13367953,"byte_end":13368026,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368031,"byte_end":13368102,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368107,"byte_end":13368182,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368187,"byte_end":13368194,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368199,"byte_end":13368202,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368207,"byte_end":13368283,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368288,"byte_end":13368354,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368359,"byte_end":13368362,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368367,"byte_end":13368440,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368445,"byte_end":13368489,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368494,"byte_end":13368497,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368502,"byte_end":13368557,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368562,"byte_end":13368565,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368570,"byte_end":13368582,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368587,"byte_end":13368590,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368595,"byte_end":13368623,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368628,"byte_end":13368631,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368636,"byte_end":13368668,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368673,"byte_end":13368717,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368722,"byte_end":13368725,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368730,"byte_end":13368743,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368748,"byte_end":13368751,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368756,"byte_end":13368829,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13368834,"byte_end":13368886,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369889,"byte_end":13369905,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369290,"byte_end":13369366,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369371,"byte_end":13369435,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369440,"byte_end":13369443,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369448,"byte_end":13369510,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369515,"byte_end":13369586,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369591,"byte_end":13369594,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369599,"byte_end":13369674,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369679,"byte_end":13369711,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369716,"byte_end":13369719,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369724,"byte_end":13369736,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369741,"byte_end":13369744,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369749,"byte_end":13369777,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369782,"byte_end":13369785,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369790,"byte_end":13369828,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13369833,"byte_end":13369877,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371345,"byte_end":13371361,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370430,"byte_end":13370482,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370487,"byte_end":13370490,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370495,"byte_end":13370564,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370569,"byte_end":13370612,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370617,"byte_end":13370620,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370625,"byte_end":13370693,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370698,"byte_end":13370773,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370778,"byte_end":13370781,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370786,"byte_end":13370860,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370865,"byte_end":13370910,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370915,"byte_end":13370918,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370923,"byte_end":13370980,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370985,"byte_end":13370988,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13370993,"byte_end":13371005,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371010,"byte_end":13371013,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371018,"byte_end":13371046,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371051,"byte_end":13371054,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371059,"byte_end":13371116,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371121,"byte_end":13371165,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371170,"byte_end":13371173,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371178,"byte_end":13371191,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371196,"byte_end":13371199,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371204,"byte_end":13371277,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371282,"byte_end":13371333,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13372210,"byte_end":13372227,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371637,"byte_end":13371714,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371719,"byte_end":13371784,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371789,"byte_end":13371792,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371797,"byte_end":13371873,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371878,"byte_end":13371923,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371928,"byte_end":13371931,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13371936,"byte_end":13372011,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13372016,"byte_end":13372090,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13372095,"byte_end":13372098,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13372103,"byte_end":13372115,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13372120,"byte_end":13372123,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13372128,"byte_end":13372198,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2538},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376469,"byte_end":13376481,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":2539},{"krate":0,"index":2540}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377173,"byte_end":13377176,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376601,"byte_end":13376657,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376662,"byte_end":13376665,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376670,"byte_end":13376682,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376687,"byte_end":13376690,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376695,"byte_end":13376747,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376752,"byte_end":13376811,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376816,"byte_end":13376819,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376824,"byte_end":13376827,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376832,"byte_end":13376844,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376849,"byte_end":13376852,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376857,"byte_end":13376917,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376922,"byte_end":13376925,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376930,"byte_end":13377000,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377005,"byte_end":13377078,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377083,"byte_end":13377161,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378579,"byte_end":13378593,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377323,"byte_end":13377414,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377419,"byte_end":13377513,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377518,"byte_end":13377612,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377617,"byte_end":13377712,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377717,"byte_end":13377738,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377743,"byte_end":13377746,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377751,"byte_end":13377788,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377793,"byte_end":13377796,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377801,"byte_end":13377812,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377817,"byte_end":13377834,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377839,"byte_end":13377870,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377875,"byte_end":13377920,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377925,"byte_end":13377979,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13377984,"byte_end":13378036,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378041,"byte_end":13378051,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378056,"byte_end":13378063,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378068,"byte_end":13378071,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378076,"byte_end":13378088,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378093,"byte_end":13378096,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378101,"byte_end":13378153,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378158,"byte_end":13378217,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378222,"byte_end":13378225,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378230,"byte_end":13378233,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378238,"byte_end":13378250,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378255,"byte_end":13378258,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378263,"byte_end":13378323,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378328,"byte_end":13378331,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378336,"byte_end":13378406,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378411,"byte_end":13378484,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13378489,"byte_end":13378567,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379828,"byte_end":13379838,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379052,"byte_end":13379124,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379129,"byte_end":13379132,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379137,"byte_end":13379213,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379218,"byte_end":13379246,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379251,"byte_end":13379254,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379259,"byte_end":13379334,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379339,"byte_end":13379415,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379420,"byte_end":13379485,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379490,"byte_end":13379493,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379498,"byte_end":13379510,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379515,"byte_end":13379518,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379523,"byte_end":13379595,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379600,"byte_end":13379676,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379681,"byte_end":13379754,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379759,"byte_end":13379762,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13379767,"byte_end":13379816,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381389,"byte_end":13381404,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380141,"byte_end":13380206,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380211,"byte_end":13380214,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380219,"byte_end":13380293,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380298,"byte_end":13380371,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380376,"byte_end":13380426,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380431,"byte_end":13380434,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380439,"byte_end":13380512,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380517,"byte_end":13380592,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380597,"byte_end":13380633,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380638,"byte_end":13380641,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380646,"byte_end":13380664,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380669,"byte_end":13380672,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380677,"byte_end":13380722,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380727,"byte_end":13380730,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380735,"byte_end":13380810,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380815,"byte_end":13380876,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380881,"byte_end":13380884,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380889,"byte_end":13380964,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13380969,"byte_end":13381016,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381021,"byte_end":13381024,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381029,"byte_end":13381105,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381110,"byte_end":13381183,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381188,"byte_end":13381191,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381196,"byte_end":13381269,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381274,"byte_end":13381277,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381282,"byte_end":13381294,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381299,"byte_end":13381302,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381307,"byte_end":13381377,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382245,"byte_end":13382260,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381884,"byte_end":13381929,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381934,"byte_end":13381937,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13381942,"byte_end":13382014,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382019,"byte_end":13382094,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382099,"byte_end":13382167,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382172,"byte_end":13382175,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382180,"byte_end":13382233,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383614,"byte_end":13383630,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382362,"byte_end":13382428,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382433,"byte_end":13382436,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382441,"byte_end":13382516,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382521,"byte_end":13382595,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382600,"byte_end":13382650,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382655,"byte_end":13382658,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382663,"byte_end":13382736,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382741,"byte_end":13382816,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382821,"byte_end":13382857,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382862,"byte_end":13382865,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382870,"byte_end":13382888,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382893,"byte_end":13382896,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382901,"byte_end":13382946,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382951,"byte_end":13382954,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13382959,"byte_end":13383034,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383039,"byte_end":13383100,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383105,"byte_end":13383108,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383113,"byte_end":13383188,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383193,"byte_end":13383241,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383246,"byte_end":13383249,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383254,"byte_end":13383330,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383335,"byte_end":13383408,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383413,"byte_end":13383416,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383421,"byte_end":13383494,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383499,"byte_end":13383502,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383507,"byte_end":13383519,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383524,"byte_end":13383527,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13383532,"byte_end":13383602,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13384477,"byte_end":13384493,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13384111,"byte_end":13384158,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13384163,"byte_end":13384166,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13384171,"byte_end":13384244,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13384249,"byte_end":13384324,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13384329,"byte_end":13384397,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13384402,"byte_end":13384405,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13384410,"byte_end":13384465,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2639},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stderr.rs","byte_start":13388873,"byte_end":13388879,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":2640}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2638},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stderr.rs","byte_start":13389928,"byte_end":13389934,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2644},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdin.rs","byte_start":13391998,"byte_end":13392003,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":2645}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2643},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdin.rs","byte_start":13392660,"byte_end":13392665,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2649},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdout.rs","byte_start":13394709,"byte_end":13394715,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":2650}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2648},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdout.rs","byte_start":13395753,"byte_end":13395759,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2855},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13397398,"byte_end":13397406,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":2857}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2858},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13397535,"byte_end":13397544,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":2860}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2861},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13397858,"byte_end":13397863,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398489,"byte_end":13398499,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398386,"byte_end":13398461,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398466,"byte_end":13398477,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398906,"byte_end":13398913,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398582,"byte_end":13398631,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398636,"byte_end":13398639,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398644,"byte_end":13398656,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398661,"byte_end":13398664,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398669,"byte_end":13398743,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398748,"byte_end":13398798,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398803,"byte_end":13398867,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398872,"byte_end":13398894,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13399414,"byte_end":13399424,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13399312,"byte_end":13399386,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13399391,"byte_end":13399402,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2863},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":13402661,"byte_end":13402665,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2867}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":13402498,"byte_end":13402564,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":13402582,"byte_end":13402649,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":4217},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":13405969,"byte_end":13405984,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":4218},{"krate":0,"index":4220},{"krate":0,"index":4222},{"krate":0,"index":4223}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4218},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":13408684,"byte_end":13408694,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":4217},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4220},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":13411585,"byte_end":13411594,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":4217},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4222},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":13412994,"byte_end":13412999,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":4217},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4223},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":13414849,"byte_end":13414854,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":4217},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4225},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13417033,"byte_end":13417045,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4228},{"krate":0,"index":4230},{"krate":0,"index":4233},{"krate":0,"index":4240},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":4246},{"krate":0,"index":4248},{"krate":0,"index":4250},{"krate":0,"index":4252},{"krate":0,"index":4254},{"krate":0,"index":4256},{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4262},{"krate":0,"index":4264},{"krate":0,"index":4266},{"krate":0,"index":4268},{"krate":0,"index":4270},{"krate":0,"index":4272},{"krate":0,"index":4274},{"krate":0,"index":4235},{"krate":0,"index":4237},{"krate":0,"index":4239}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4226},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13418165,"byte_end":13418170,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4228},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13420999,"byte_end":13421003,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4230},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13423305,"byte_end":13423313,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4233},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13425210,"byte_end":13425220,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13426657,"byte_end":13426664,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13427953,"byte_end":13427960,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13429291,"byte_end":13429299,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13430639,"byte_end":13430647,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4248},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13431928,"byte_end":13431936,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13433231,"byte_end":13433239,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13434602,"byte_end":13434610,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4254},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13435903,"byte_end":13435911,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4256},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13437371,"byte_end":13437380,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4258},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13438774,"byte_end":13438783,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4260},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13440130,"byte_end":13440141,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4262},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13441502,"byte_end":13441513,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4264},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13442814,"byte_end":13442825,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4266},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13444137,"byte_end":13444148,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4268},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13445529,"byte_end":13445540,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13446834,"byte_end":13446845,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4272},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13448323,"byte_end":13448335,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4274},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13449729,"byte_end":13449741,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4235},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13451400,"byte_end":13451411,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13452966,"byte_end":13452980,"line_start":1071,"line_end":1071,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4239},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13454272,"byte_end":13454276,"line_start":1109,"line_end":1109,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4225},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3040},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455318,"byte_end":13455330,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":3041}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454543,"byte_end":13454616,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454617,"byte_end":13454620,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454621,"byte_end":13454692,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454693,"byte_end":13454696,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454697,"byte_end":13454711,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454712,"byte_end":13454715,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454716,"byte_end":13454723,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454724,"byte_end":13454760,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454761,"byte_end":13454787,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454788,"byte_end":13454791,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454792,"byte_end":13454810,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454811,"byte_end":13454850,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454851,"byte_end":13454900,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454901,"byte_end":13454904,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454905,"byte_end":13454958,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13454959,"byte_end":13455006,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455007,"byte_end":13455010,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455011,"byte_end":13455040,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455041,"byte_end":13455086,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455087,"byte_end":13455112,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455113,"byte_end":13455145,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455146,"byte_end":13455149,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455150,"byte_end":13455164,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455165,"byte_end":13455170,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455171,"byte_end":13455178,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455179,"byte_end":13455182,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455183,"byte_end":13455242,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455243,"byte_end":13455246,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455247,"byte_end":13455275,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455276,"byte_end":13455307,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13456047,"byte_end":13456051,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455348,"byte_end":13455417,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455422,"byte_end":13455475,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455480,"byte_end":13455483,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455488,"byte_end":13455565,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455570,"byte_end":13455592,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455597,"byte_end":13455600,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455605,"byte_end":13455619,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455624,"byte_end":13455627,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455632,"byte_end":13455645,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455650,"byte_end":13455674,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455679,"byte_end":13455705,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455710,"byte_end":13455713,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455718,"byte_end":13455744,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455749,"byte_end":13455752,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455757,"byte_end":13455802,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455807,"byte_end":13455855,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455860,"byte_end":13455901,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455906,"byte_end":13455909,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455914,"byte_end":13455951,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455956,"byte_end":13455998,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13456003,"byte_end":13456015,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13456020,"byte_end":13456027,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13456032,"byte_end":13456039,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4277},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13458254,"byte_end":13458267,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":4278},{"krate":0,"index":4280},{"krate":0,"index":4283},{"krate":0,"index":4287},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":4293},{"krate":0,"index":4295},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":4303},{"krate":0,"index":4305},{"krate":0,"index":4307},{"krate":0,"index":4309},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4315},{"krate":0,"index":4317},{"krate":0,"index":4319},{"krate":0,"index":4321},{"krate":0,"index":4285},{"krate":0,"index":4286}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4278},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13460109,"byte_end":13460114,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4280},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13462916,"byte_end":13462925,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13464267,"byte_end":13464276,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4287},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13465676,"byte_end":13465684,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4289},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13466945,"byte_end":13466953,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13468268,"byte_end":13468277,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4293},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13469590,"byte_end":13469599,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13470939,"byte_end":13470948,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4297},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13472283,"byte_end":13472292,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13473669,"byte_end":13473678,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4301},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13475065,"byte_end":13475074,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4303},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13476529,"byte_end":13476539,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4305},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13477929,"byte_end":13477939,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4307},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13479271,"byte_end":13479283,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4309},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13480610,"byte_end":13480622,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13481976,"byte_end":13481988,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13483337,"byte_end":13483349,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4315},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13484740,"byte_end":13484752,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4317},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13486153,"byte_end":13486165,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13487632,"byte_end":13487645,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13489047,"byte_end":13489060,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13490080,"byte_end":13490085,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4286},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13491375,"byte_end":13491383,"line_start":997,"line_end":997,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":4277},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16714},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13492792,"byte_end":13492801,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":16716},{"krate":0,"index":16717},{"krate":0,"index":16718},{"krate":0,"index":16719}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13493137,"byte_end":13493140,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13492995,"byte_end":13493087,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13493092,"byte_end":13493125,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13493302,"byte_end":13493315,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13493225,"byte_end":13493290,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13493991,"byte_end":13493998,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13493854,"byte_end":13493900,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13493905,"byte_end":13493908,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13493913,"byte_end":13493979,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494190,"byte_end":13494197,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494045,"byte_end":13494099,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494104,"byte_end":13494107,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494112,"byte_end":13494178,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494408,"byte_end":13494419,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494256,"byte_end":13494317,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494322,"byte_end":13494325,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494330,"byte_end":13494396,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494650,"byte_end":13494660,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494499,"byte_end":13494562,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494567,"byte_end":13494570,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494575,"byte_end":13494638,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494864,"byte_end":13494870,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494704,"byte_end":13494760,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494765,"byte_end":13494768,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13494773,"byte_end":13494852,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":16687},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499116,"byte_end":13499125,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":16689}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499404,"byte_end":13499407,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499250,"byte_end":13499307,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499312,"byte_end":13499315,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499320,"byte_end":13499392,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499739,"byte_end":13499752,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499539,"byte_end":13499624,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499629,"byte_end":13499642,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499647,"byte_end":13499650,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499655,"byte_end":13499727,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500209,"byte_end":13500216,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500064,"byte_end":13500114,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500119,"byte_end":13500122,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500127,"byte_end":13500197,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500436,"byte_end":13500443,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500283,"byte_end":13500341,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500346,"byte_end":13500349,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500354,"byte_end":13500424,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500678,"byte_end":13500689,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500518,"byte_end":13500583,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500588,"byte_end":13500591,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500596,"byte_end":13500666,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500953,"byte_end":13500963,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500798,"byte_end":13500865,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500870,"byte_end":13500873,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13500878,"byte_end":13500941,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16637},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13504782,"byte_end":13504791,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":16639},{"krate":0,"index":16640},{"krate":0,"index":16641}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13505099,"byte_end":13505102,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13504957,"byte_end":13505049,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13505054,"byte_end":13505087,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13505264,"byte_end":13505277,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13505187,"byte_end":13505252,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506359,"byte_end":13506366,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506301,"byte_end":13506347,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506557,"byte_end":13506564,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506413,"byte_end":13506467,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506472,"byte_end":13506475,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506480,"byte_end":13506545,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506774,"byte_end":13506785,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506623,"byte_end":13506684,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506689,"byte_end":13506692,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506697,"byte_end":13506762,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13507016,"byte_end":13507026,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506865,"byte_end":13506928,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506933,"byte_end":13506936,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13506941,"byte_end":13507004,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13507138,"byte_end":13507144,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13507070,"byte_end":13507126,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":16588},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13509777,"byte_end":13509782,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":16591},{"krate":0,"index":16592},{"krate":0,"index":16593}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510223,"byte_end":13510230,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510149,"byte_end":13510211,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510562,"byte_end":13510569,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510299,"byte_end":13510369,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510374,"byte_end":13510377,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510382,"byte_end":13510455,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510460,"byte_end":13510533,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510538,"byte_end":13510550,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510928,"byte_end":13510939,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510658,"byte_end":13510735,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510740,"byte_end":13510743,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510748,"byte_end":13510821,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510826,"byte_end":13510899,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510904,"byte_end":13510916,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13511136,"byte_end":13511146,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13511068,"byte_end":13511124,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":4327},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":13513722,"byte_end":13513726,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4337}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":13513639,"byte_end":13513706,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":4323},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":13514991,"byte_end":13514995,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R, W>(&'a mut R, &'a mut W) -> Copy where R: AsyncRead +\nUnpin + ?Sized, W: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4343},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":13517752,"byte_end":13517757,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":4344}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":4345},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":13518436,"byte_end":13518441,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4346},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/flush.rs","byte_start":13519658,"byte_end":13519663,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":4349}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":16549},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13520779,"byte_end":13520784,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":16551},{"krate":0,"index":16552},{"krate":0,"index":16553},{"krate":0,"index":16554}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3546},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521631,"byte_end":13521640,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521141,"byte_end":13521181,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521186,"byte_end":13521189,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521194,"byte_end":13521208,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521213,"byte_end":13521216,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521221,"byte_end":13521228,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521233,"byte_end":13521267,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521272,"byte_end":13521307,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521312,"byte_end":13521315,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521320,"byte_end":13521403,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521408,"byte_end":13521448,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521453,"byte_end":13521456,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521461,"byte_end":13521514,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521519,"byte_end":13521562,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521567,"byte_end":13521572,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521577,"byte_end":13521589,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521594,"byte_end":13521601,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521606,"byte_end":13521613,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3553},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521867,"byte_end":13521874,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521800,"byte_end":13521855,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521993,"byte_end":13522000,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521934,"byte_end":13521981,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3555},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13522287,"byte_end":13522297,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13522052,"byte_end":13522113,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13522118,"byte_end":13522121,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13522126,"byte_end":13522189,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13522194,"byte_end":13522275,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3558},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13522416,"byte_end":13522430,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4354},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524559,"byte_end":13524571,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4356}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13523771,"byte_end":13523830,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13523831,"byte_end":13523834,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13523835,"byte_end":13523914,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13523915,"byte_end":13523991,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13523992,"byte_end":13524054,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524055,"byte_end":13524058,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524059,"byte_end":13524072,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524073,"byte_end":13524076,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524077,"byte_end":13524084,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524085,"byte_end":13524129,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524130,"byte_end":13524181,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524182,"byte_end":13524239,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524240,"byte_end":13524243,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524244,"byte_end":13524281,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524282,"byte_end":13524285,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524286,"byte_end":13524313,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524314,"byte_end":13524353,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524354,"byte_end":13524384,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524385,"byte_end":13524388,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524389,"byte_end":13524426,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524427,"byte_end":13524430,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524431,"byte_end":13524470,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524471,"byte_end":13524501,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524502,"byte_end":13524514,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524515,"byte_end":13524522,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13524523,"byte_end":13524530,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3601},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13525868,"byte_end":13525874,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13525634,"byte_end":13525717,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13525718,"byte_end":13525721,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13525722,"byte_end":13525796,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13525797,"byte_end":13525860,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4367},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":13530803,"byte_end":13530807,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":4370},{"krate":0,"index":4371}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":13530720,"byte_end":13530787,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4376},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":13531870,"byte_end":13531877,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":4380},{"krate":0,"index":4381}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":13531787,"byte_end":13531854,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4387},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":13533126,"byte_end":13533135,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4392}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":13533043,"byte_end":13533110,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":16507},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537459,"byte_end":13537465,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":16509}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16474},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537481,"byte_end":13537487,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":16476}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16429},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537503,"byte_end":13537510,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":16431},{"krate":0,"index":16432},{"krate":0,"index":16434}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16384},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537535,"byte_end":13537542,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":16386},{"krate":0,"index":16387},{"krate":0,"index":16389}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16339},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537567,"byte_end":13537574,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":16341},{"krate":0,"index":16342},{"krate":0,"index":16344}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16294},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537599,"byte_end":13537607,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":16296},{"krate":0,"index":16297},{"krate":0,"index":16299}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16249},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537635,"byte_end":13537642,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":16251},{"krate":0,"index":16252},{"krate":0,"index":16254}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16204},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537667,"byte_end":13537674,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":16206},{"krate":0,"index":16207},{"krate":0,"index":16209}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16159},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537699,"byte_end":13537706,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":16161},{"krate":0,"index":16162},{"krate":0,"index":16164}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16114},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537731,"byte_end":13537739,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":16116},{"krate":0,"index":16117},{"krate":0,"index":16119}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16069},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537767,"byte_end":13537776,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":16071},{"krate":0,"index":16072},{"krate":0,"index":16074}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16024},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537804,"byte_end":13537813,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":16026},{"krate":0,"index":16027},{"krate":0,"index":16029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15979},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537841,"byte_end":13537850,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":15981},{"krate":0,"index":15982},{"krate":0,"index":15984}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15934},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537878,"byte_end":13537888,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":15936},{"krate":0,"index":15937},{"krate":0,"index":15939}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15889},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537919,"byte_end":13537928,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":15891},{"krate":0,"index":15892},{"krate":0,"index":15894}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15844},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537956,"byte_end":13537965,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":15846},{"krate":0,"index":15847},{"krate":0,"index":15849}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15799},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13537993,"byte_end":13538002,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":15801},{"krate":0,"index":15802},{"krate":0,"index":15804}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15754},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":13538030,"byte_end":13538040,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":15756},{"krate":0,"index":15757},{"krate":0,"index":15759}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4541},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":13538490,"byte_end":13538498,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":13538407,"byte_end":13538474,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4552},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":13542453,"byte_end":13542462,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4557}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":13542323,"byte_end":13542390,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4565},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":13548597,"byte_end":13548609,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":4568},{"krate":0,"index":4569},{"krate":0,"index":4570},{"krate":0,"index":4571}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":13548514,"byte_end":13548581,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4576},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":13551374,"byte_end":13551383,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":4579},{"krate":0,"index":4580},{"krate":0,"index":4581},{"krate":0,"index":4582}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":13551291,"byte_end":13551358,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4588},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":13553829,"byte_end":13553835,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":4589}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":4587},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":13554521,"byte_end":13554527,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4592},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/shutdown.rs","byte_start":13555476,"byte_end":13555484,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":4595}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4600},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":13556656,"byte_end":13556660,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":4601}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":4602},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":13557501,"byte_end":13557505,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":15715},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13558750,"byte_end":13558755,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":15717},{"krate":0,"index":15718},{"krate":0,"index":15719},{"krate":0,"index":15720}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559616,"byte_end":13559628,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559104,"byte_end":13559147,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559152,"byte_end":13559155,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559160,"byte_end":13559174,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559179,"byte_end":13559182,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559187,"byte_end":13559194,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559199,"byte_end":13559233,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559238,"byte_end":13559273,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559278,"byte_end":13559281,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559286,"byte_end":13559369,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559374,"byte_end":13559421,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559426,"byte_end":13559429,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559434,"byte_end":13559496,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559501,"byte_end":13559547,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559552,"byte_end":13559557,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559562,"byte_end":13559574,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559579,"byte_end":13559586,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559591,"byte_end":13559598,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4036},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559866,"byte_end":13559883,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15668},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572677,"byte_end":13572689,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":15671},{"krate":0,"index":15672}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4640},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573965,"byte_end":13573978,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572766,"byte_end":13572846,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572847,"byte_end":13572850,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572851,"byte_end":13572864,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572865,"byte_end":13572868,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572869,"byte_end":13572876,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572877,"byte_end":13572898,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572899,"byte_end":13572948,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572949,"byte_end":13572969,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13572970,"byte_end":13573016,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573017,"byte_end":13573020,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573021,"byte_end":13573061,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573062,"byte_end":13573104,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573105,"byte_end":13573151,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573152,"byte_end":13573198,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573199,"byte_end":13573247,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573248,"byte_end":13573255,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573256,"byte_end":13573259,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573260,"byte_end":13573294,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573295,"byte_end":13573336,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573337,"byte_end":13573340,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573341,"byte_end":13573380,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573381,"byte_end":13573406,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573407,"byte_end":13573444,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573445,"byte_end":13573482,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573483,"byte_end":13573486,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573487,"byte_end":13573529,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573530,"byte_end":13573576,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573577,"byte_end":13573614,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573615,"byte_end":13573618,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573619,"byte_end":13573646,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573647,"byte_end":13573693,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573694,"byte_end":13573736,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573737,"byte_end":13573740,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573741,"byte_end":13573776,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573777,"byte_end":13573823,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573824,"byte_end":13573827,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573828,"byte_end":13573840,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573841,"byte_end":13573848,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13573849,"byte_end":13573856,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15626},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13578367,"byte_end":13578379,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::util::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":15628},{"krate":0,"index":15629}],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.\n After first error it will stop.\n Additionally, this stream is fused: after it returns None at some\n moment, it is guaranteed that further `next()`, `poll_next()` and\n similar functions will instantly return None.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4694},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579524,"byte_end":13579537,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"reader_stream","qualname":"::io::util::reader_stream::reader_stream","value":"pub fn reader_stream<R>(R) -> ReaderStream<R> where R: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] implementor into a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13578852,"byte_end":13578899,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`Stream`] of Result<[`Bytes`], std::io::Error>.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13578900,"byte_end":13578952,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13578953,"byte_end":13578956,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13578957,"byte_end":13578970,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13578971,"byte_end":13578974,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13578975,"byte_end":13578982,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13578983,"byte_end":13579003,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579004,"byte_end":13579050,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579051,"byte_end":13579084,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579085,"byte_end":13579088,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let data: &[u8] = b\"hello, world!\";","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579089,"byte_end":13579128,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ let mut stream = tokio::io::reader_stream(data);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579129,"byte_end":13579181,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/ let mut stream_contents = Vec::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579182,"byte_end":13579223,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/ while let Some(chunk) = stream.next().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579224,"byte_end":13579273,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/    stream_contents.extend_from_slice(chunk?.as_ref());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579274,"byte_end":13579332,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579333,"byte_end":13579338,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(stream_contents, data);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579339,"byte_end":13579377,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579378,"byte_end":13579390,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579391,"byte_end":13579398,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579399,"byte_end":13579406,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579407,"byte_end":13579410,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579411,"byte_end":13579450,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579451,"byte_end":13579488,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/ [`Bytes`]: bytes::Bytes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579489,"byte_end":13579516,"line_start":62,"line_end":62,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":15586},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561478,"byte_end":13561482,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":15588},{"krate":0,"index":15589}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4079},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562072,"byte_end":13562077,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561769,"byte_end":13561822,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561827,"byte_end":13561873,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561878,"byte_end":13561881,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561886,"byte_end":13561896,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561901,"byte_end":13561904,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561909,"byte_end":13561986,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561991,"byte_end":13562060,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562396,"byte_end":13562405,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562125,"byte_end":13562196,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562201,"byte_end":13562275,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562280,"byte_end":13562355,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562360,"byte_end":13562384,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4081},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562528,"byte_end":13562535,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562470,"byte_end":13562516,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4082},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562827,"byte_end":13562834,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562582,"byte_end":13562636,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562641,"byte_end":13562644,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562649,"byte_end":13562722,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562727,"byte_end":13562799,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562804,"byte_end":13562815,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13563145,"byte_end":13563156,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562893,"byte_end":13562954,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562959,"byte_end":13562962,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13562967,"byte_end":13563040,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13563045,"byte_end":13563117,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13563122,"byte_end":13563133,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4084},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13563302,"byte_end":13563312,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13563236,"byte_end":13563290,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4708},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":13565242,"byte_end":13565247,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":4712}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":13565159,"byte_end":13565226,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4717},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":13566143,"byte_end":13566151,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":4720},{"krate":0,"index":4721}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":13566060,"byte_end":13566127,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4726},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":13567534,"byte_end":13567542,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":4730},{"krate":0,"index":4731}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":13567451,"byte_end":13567518,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":15540},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571423,"byte_end":13571430,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":15542},{"krate":0,"index":15543}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15503},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571446,"byte_end":13571453,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":15505},{"krate":0,"index":15506}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15458},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571469,"byte_end":13571477,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":15460},{"krate":0,"index":15461},{"krate":0,"index":15463}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15413},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571502,"byte_end":13571510,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":15415},{"krate":0,"index":15416},{"krate":0,"index":15418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15368},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571535,"byte_end":13571543,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":15370},{"krate":0,"index":15371},{"krate":0,"index":15373}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15323},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571568,"byte_end":13571577,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":15325},{"krate":0,"index":15326},{"krate":0,"index":15328}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15278},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571605,"byte_end":13571613,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":15280},{"krate":0,"index":15281},{"krate":0,"index":15283}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15233},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571638,"byte_end":13571646,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":15235},{"krate":0,"index":15236},{"krate":0,"index":15238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15188},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571671,"byte_end":13571679,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":15190},{"krate":0,"index":15191},{"krate":0,"index":15193}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15143},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571704,"byte_end":13571713,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":15145},{"krate":0,"index":15146},{"krate":0,"index":15148}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15098},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571741,"byte_end":13571751,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":15100},{"krate":0,"index":15101},{"krate":0,"index":15103}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15053},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571779,"byte_end":13571789,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":15055},{"krate":0,"index":15056},{"krate":0,"index":15058}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15008},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571817,"byte_end":13571827,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":15010},{"krate":0,"index":15011},{"krate":0,"index":15013}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14963},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571855,"byte_end":13571866,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":14965},{"krate":0,"index":14966},{"krate":0,"index":14968}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14918},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571897,"byte_end":13571907,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":14920},{"krate":0,"index":14921},{"krate":0,"index":14923}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14873},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571935,"byte_end":13571945,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":14875},{"krate":0,"index":14876},{"krate":0,"index":14878}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14828},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13571973,"byte_end":13571983,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":14830},{"krate":0,"index":14831},{"krate":0,"index":14833}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14783},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":13572011,"byte_end":13572022,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":14785},{"krate":0,"index":14786},{"krate":0,"index":14788}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":445},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":531},{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4996},{"krate":0,"index":5419},{"krate":0,"index":5422},{"krate":0,"index":5464},{"krate":0,"index":5646},{"krate":0,"index":5667},{"krate":0,"index":6312},{"krate":0,"index":6315},{"krate":0,"index":6318}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":71949,"byte_end":71967,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":71969,"byte_end":72007,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72008,"byte_end":72011,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72012,"byte_end":72095,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72096,"byte_end":72161,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72162,"byte_end":72165,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72166,"byte_end":72184,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72185,"byte_end":72188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72189,"byte_end":72277,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72278,"byte_end":72347,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72348,"byte_end":72436,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72437,"byte_end":72495,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72496,"byte_end":72559,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72560,"byte_end":72625,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72627,"byte_end":72630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72631,"byte_end":72663,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72664,"byte_end":72692,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72693,"byte_end":72721,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72722,"byte_end":72756,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72757,"byte_end":72787,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72788,"byte_end":72822,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74079,"byte_end":74092,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73391,"byte_end":73468,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73469,"byte_end":73472,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73473,"byte_end":73482,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73483,"byte_end":73486,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73487,"byte_end":73564,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73565,"byte_end":73636,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73637,"byte_end":73664,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73665,"byte_end":73668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73669,"byte_end":73682,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73683,"byte_end":73686,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73687,"byte_end":73764,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73765,"byte_end":73837,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73838,"byte_end":73907,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73908,"byte_end":73911,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73912,"byte_end":73991,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73992,"byte_end":74068,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":527},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80099,"byte_end":80116,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":528},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80132,"byte_end":80136,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":529},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80197,"byte_end":80203,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80275,"byte_end":80290,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4961},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80427,"byte_end":80432,"line_start":261,"line_end":261,"column_start":13,"column_end":18},"name":"Ready","qualname":"::net::addr::sealed::MaybeReady::Ready","value":"MaybeReady::Ready(Option<SocketAddr>)","parent":{"krate":0,"index":4960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4964},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80466,"byte_end":80474,"line_start":262,"line_end":262,"column_start":13,"column_end":21},"name":"Blocking","qualname":"::net::addr::sealed::MaybeReady::Blocking","value":"MaybeReady::Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>)","parent":{"krate":0,"index":4960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4960},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80402,"byte_end":80412,"line_start":260,"line_end":260,"column_start":18,"column_end":28},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"pub enum MaybeReady {\n    Ready(Option<SocketAddr>),\n    Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>),\n}","parent":null,"children":[{"krate":0,"index":4961},{"krate":0,"index":4964}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":18785,"byte_end":18808,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4970},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80627,"byte_end":80630,"line_start":268,"line_end":268,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4973},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80674,"byte_end":80678,"line_start":269,"line_end":269,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4969},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80603,"byte_end":80612,"line_start":267,"line_end":267,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":4970},{"krate":0,"index":4973}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":18785,"byte_end":18808,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":4991},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/lookup_host.rs","byte_start":13581575,"byte_end":13581586,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":18785,"byte_end":18808,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":4996},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":4997},{"krate":0,"index":5074},{"krate":0,"index":5077},{"krate":0,"index":5104},{"krate":0,"index":5107},{"krate":0,"index":5163},{"krate":0,"index":5164},{"krate":0,"index":5167},{"krate":0,"index":5170},{"krate":0,"index":5246},{"krate":0,"index":5247},{"krate":0,"index":5250},{"krate":0,"index":5253},{"krate":0,"index":5254},{"krate":0,"index":5256},{"krate":0,"index":5416}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":13581734,"byte_end":13581755,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5425},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584355,"byte_end":13584366,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":5426}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5038},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586335,"byte_end":13586339,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584449,"byte_end":13584525,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584530,"byte_end":13584533,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584538,"byte_end":13584599,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584604,"byte_end":13584607,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584612,"byte_end":13584687,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584692,"byte_end":13584768,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584773,"byte_end":13584784,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584789,"byte_end":13584792,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584797,"byte_end":13584872,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584877,"byte_end":13584951,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584956,"byte_end":13585033,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585038,"byte_end":13585041,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585046,"byte_end":13585122,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585127,"byte_end":13585200,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585205,"byte_end":13585278,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585283,"byte_end":13585335,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585340,"byte_end":13585343,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585348,"byte_end":13585411,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585416,"byte_end":13585419,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585424,"byte_end":13585478,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585483,"byte_end":13585486,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585491,"byte_end":13585505,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585510,"byte_end":13585513,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585518,"byte_end":13585531,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585536,"byte_end":13585568,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585573,"byte_end":13585576,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585581,"byte_end":13585597,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585602,"byte_end":13585605,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585610,"byte_end":13585628,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585633,"byte_end":13585672,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585677,"byte_end":13585743,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585748,"byte_end":13585751,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585756,"byte_end":13585783,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585788,"byte_end":13585791,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585796,"byte_end":13585823,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585828,"byte_end":13585842,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585847,"byte_end":13585852,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585857,"byte_end":13585864,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585869,"byte_end":13585872,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585877,"byte_end":13585907,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585912,"byte_end":13585915,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585920,"byte_end":13585933,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585938,"byte_end":13585970,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13585975,"byte_end":13586002,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586007,"byte_end":13586010,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586015,"byte_end":13586031,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586036,"byte_end":13586039,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586044,"byte_end":13586062,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586067,"byte_end":13586106,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586111,"byte_end":13586196,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586201,"byte_end":13586204,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586209,"byte_end":13586236,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586241,"byte_end":13586244,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586249,"byte_end":13586276,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586281,"byte_end":13586295,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586300,"byte_end":13586305,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13586310,"byte_end":13586317,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5044},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587911,"byte_end":13587917,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587052,"byte_end":13587109,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587114,"byte_end":13587117,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587122,"byte_end":13587197,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587202,"byte_end":13587272,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587277,"byte_end":13587306,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587311,"byte_end":13587314,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587319,"byte_end":13587366,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587371,"byte_end":13587374,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587379,"byte_end":13587393,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587398,"byte_end":13587401,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587406,"byte_end":13587419,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587424,"byte_end":13587456,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587461,"byte_end":13587464,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587469,"byte_end":13587485,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587490,"byte_end":13587493,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587498,"byte_end":13587516,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587521,"byte_end":13587560,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587565,"byte_end":13587635,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587640,"byte_end":13587643,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587648,"byte_end":13587687,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587692,"byte_end":13587762,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587767,"byte_end":13587830,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587835,"byte_end":13587844,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587849,"byte_end":13587852,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587857,"byte_end":13587871,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587876,"byte_end":13587881,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13587886,"byte_end":13587893,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5048},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13588244,"byte_end":13588255,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13588030,"byte_end":13588093,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13588098,"byte_end":13588101,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13588106,"byte_end":13588178,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13588183,"byte_end":13588232,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5050},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591117,"byte_end":13591125,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589102,"byte_end":13589174,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589179,"byte_end":13589182,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589187,"byte_end":13589257,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589262,"byte_end":13589338,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589343,"byte_end":13589387,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589392,"byte_end":13589395,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589400,"byte_end":13589475,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589480,"byte_end":13589556,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589561,"byte_end":13589626,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589631,"byte_end":13589686,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589691,"byte_end":13589694,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589699,"byte_end":13589770,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589775,"byte_end":13589850,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589855,"byte_end":13589894,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589899,"byte_end":13589902,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589907,"byte_end":13589970,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589975,"byte_end":13589978,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13589983,"byte_end":13590056,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590061,"byte_end":13590092,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590097,"byte_end":13590100,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590105,"byte_end":13590178,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590183,"byte_end":13590258,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590263,"byte_end":13590336,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590341,"byte_end":13590368,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590373,"byte_end":13590376,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590381,"byte_end":13590395,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590400,"byte_end":13590403,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590408,"byte_end":13590426,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590431,"byte_end":13590457,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590462,"byte_end":13590494,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590499,"byte_end":13590502,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590507,"byte_end":13590525,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590530,"byte_end":13590581,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590586,"byte_end":13590657,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590662,"byte_end":13590722,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590727,"byte_end":13590741,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590746,"byte_end":13590751,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590756,"byte_end":13590763,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590768,"byte_end":13590771,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590776,"byte_end":13590788,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590793,"byte_end":13590796,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590801,"byte_end":13590861,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590866,"byte_end":13590869,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590874,"byte_end":13590944,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13590949,"byte_end":13591022,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591027,"byte_end":13591105,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5052},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592209,"byte_end":13592219,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591483,"byte_end":13591544,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591549,"byte_end":13591552,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591557,"byte_end":13591630,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591635,"byte_end":13591669,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591674,"byte_end":13591677,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591682,"byte_end":13591696,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591701,"byte_end":13591704,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591709,"byte_end":13591727,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591732,"byte_end":13591764,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591769,"byte_end":13591772,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591777,"byte_end":13591793,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591798,"byte_end":13591853,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591858,"byte_end":13591861,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591866,"byte_end":13591884,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591889,"byte_end":13591928,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13591933,"byte_end":13591999,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592004,"byte_end":13592007,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592012,"byte_end":13592054,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592059,"byte_end":13592148,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592153,"byte_end":13592156,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592161,"byte_end":13592175,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592180,"byte_end":13592185,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592190,"byte_end":13592197,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5053},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593650,"byte_end":13593658,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592305,"byte_end":13592379,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592384,"byte_end":13592387,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592392,"byte_end":13592454,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592459,"byte_end":13592462,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592467,"byte_end":13592543,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592548,"byte_end":13592617,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592622,"byte_end":13592651,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592656,"byte_end":13592659,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592664,"byte_end":13592676,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592681,"byte_end":13592684,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592689,"byte_end":13592764,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592769,"byte_end":13592844,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592849,"byte_end":13592923,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13592928,"byte_end":13593003,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593008,"byte_end":13593016,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593021,"byte_end":13593024,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593029,"byte_end":13593043,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593048,"byte_end":13593051,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593056,"byte_end":13593069,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593074,"byte_end":13593127,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593132,"byte_end":13593135,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593140,"byte_end":13593158,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593163,"byte_end":13593184,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593189,"byte_end":13593267,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593272,"byte_end":13593319,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593324,"byte_end":13593327,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593332,"byte_end":13593388,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593393,"byte_end":13593419,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593424,"byte_end":13593455,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593460,"byte_end":13593504,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593509,"byte_end":13593526,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593531,"byte_end":13593584,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593589,"byte_end":13593602,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593607,"byte_end":13593616,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593621,"byte_end":13593626,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593631,"byte_end":13593638,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5054},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594344,"byte_end":13594347,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593727,"byte_end":13593785,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593790,"byte_end":13593793,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593798,"byte_end":13593858,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593863,"byte_end":13593866,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593871,"byte_end":13593908,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593913,"byte_end":13593916,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593921,"byte_end":13593935,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593940,"byte_end":13593943,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593948,"byte_end":13593961,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13593966,"byte_end":13593998,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594003,"byte_end":13594006,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594011,"byte_end":13594027,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594032,"byte_end":13594035,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594040,"byte_end":13594058,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594063,"byte_end":13594102,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594107,"byte_end":13594169,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594174,"byte_end":13594177,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594182,"byte_end":13594239,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594244,"byte_end":13594284,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594289,"byte_end":13594292,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594297,"byte_end":13594310,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594315,"byte_end":13594320,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594325,"byte_end":13594332,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5055},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594986,"byte_end":13594993,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594419,"byte_end":13594477,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594482,"byte_end":13594485,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594490,"byte_end":13594566,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594571,"byte_end":13594592,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594597,"byte_end":13594600,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594605,"byte_end":13594619,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594624,"byte_end":13594627,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594632,"byte_end":13594645,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594650,"byte_end":13594682,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594687,"byte_end":13594690,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594695,"byte_end":13594711,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594716,"byte_end":13594719,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594724,"byte_end":13594742,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594747,"byte_end":13594786,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594791,"byte_end":13594854,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594859,"byte_end":13594862,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594867,"byte_end":13594925,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594930,"byte_end":13594933,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594938,"byte_end":13594952,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594957,"byte_end":13594962,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13594967,"byte_end":13594974,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5427},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597266,"byte_end":13597274,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":5429}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597064,"byte_end":13597140,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597141,"byte_end":13597188,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597189,"byte_end":13597237,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5100},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597689,"byte_end":13597700,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597452,"byte_end":13597525,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597530,"byte_end":13597545,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597550,"byte_end":13597553,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597558,"byte_end":13597627,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597632,"byte_end":13597677,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5433},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599268,"byte_end":13599276,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13598851,"byte_end":13598915,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13598916,"byte_end":13598919,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13598920,"byte_end":13599008,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599009,"byte_end":13599086,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599087,"byte_end":13599090,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599091,"byte_end":13599119,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599120,"byte_end":13599153,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599154,"byte_end":13599205,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599206,"byte_end":13599239,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5440},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599974,"byte_end":13599983,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599298,"byte_end":13599363,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599364,"byte_end":13599367,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599368,"byte_end":13599454,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599455,"byte_end":13599507,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599508,"byte_end":13599511,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599512,"byte_end":13599593,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599594,"byte_end":13599679,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599680,"byte_end":13599683,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599684,"byte_end":13599712,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599713,"byte_end":13599746,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599747,"byte_end":13599794,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599795,"byte_end":13599857,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599858,"byte_end":13599911,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13599912,"byte_end":13599945,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5145},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601040,"byte_end":13601049,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600157,"byte_end":13600231,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600236,"byte_end":13600309,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600314,"byte_end":13600328,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600333,"byte_end":13600336,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600341,"byte_end":13600414,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600419,"byte_end":13600422,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600427,"byte_end":13600441,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600446,"byte_end":13600449,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600454,"byte_end":13600467,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600472,"byte_end":13600490,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600495,"byte_end":13600525,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600530,"byte_end":13600533,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600538,"byte_end":13600571,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600576,"byte_end":13600579,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600584,"byte_end":13600602,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600607,"byte_end":13600646,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600651,"byte_end":13600720,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600725,"byte_end":13600773,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600778,"byte_end":13600808,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600813,"byte_end":13600816,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600821,"byte_end":13600843,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600848,"byte_end":13600893,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600898,"byte_end":13600916,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600921,"byte_end":13600924,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600929,"byte_end":13600943,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600948,"byte_end":13600953,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600958,"byte_end":13600965,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600970,"byte_end":13600973,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600978,"byte_end":13601028,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5146},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602466,"byte_end":13602470,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601174,"byte_end":13601244,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601249,"byte_end":13601318,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601323,"byte_end":13601362,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601367,"byte_end":13601370,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601375,"byte_end":13601443,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601448,"byte_end":13601451,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601456,"byte_end":13601496,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601501,"byte_end":13601504,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601509,"byte_end":13601523,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601528,"byte_end":13601531,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601536,"byte_end":13601549,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601554,"byte_end":13601584,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601589,"byte_end":13601615,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601620,"byte_end":13601646,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601651,"byte_end":13601654,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601659,"byte_end":13601677,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601682,"byte_end":13601733,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601738,"byte_end":13601766,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601771,"byte_end":13601840,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601845,"byte_end":13601893,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601898,"byte_end":13601901,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601906,"byte_end":13601935,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601940,"byte_end":13601969,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601974,"byte_end":13601977,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13601982,"byte_end":13602009,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602014,"byte_end":13602061,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602066,"byte_end":13602069,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602074,"byte_end":13602098,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602103,"byte_end":13602162,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602167,"byte_end":13602206,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602211,"byte_end":13602214,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602219,"byte_end":13602233,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602238,"byte_end":13602243,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602248,"byte_end":13602255,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602260,"byte_end":13602263,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602268,"byte_end":13602333,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602338,"byte_end":13602341,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602346,"byte_end":13602392,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602397,"byte_end":13602448,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":5447},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605072,"byte_end":13605085,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":5448}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13604637,"byte_end":13604703,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13604704,"byte_end":13604707,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13604708,"byte_end":13604795,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13604796,"byte_end":13604880,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13604881,"byte_end":13604884,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13604885,"byte_end":13604913,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13604914,"byte_end":13604957,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13604958,"byte_end":13605009,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605010,"byte_end":13605043,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5451},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605895,"byte_end":13605909,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":5452},{"krate":0,"index":5453}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605118,"byte_end":13605185,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605186,"byte_end":13605189,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605190,"byte_end":13605277,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605278,"byte_end":13605355,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605356,"byte_end":13605413,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605414,"byte_end":13605417,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605418,"byte_end":13605504,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605505,"byte_end":13605590,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605591,"byte_end":13605594,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605595,"byte_end":13605623,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605624,"byte_end":13605667,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605668,"byte_end":13605715,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605716,"byte_end":13605778,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605779,"byte_end":13605832,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13605833,"byte_end":13605866,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5456},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13606874,"byte_end":13606886,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13606742,"byte_end":13606824,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13606825,"byte_end":13606845,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5458},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13606887,"byte_end":13606904,"line_start":88,"line_end":88,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5459},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13606906,"byte_end":13606924,"line_start":88,"line_end":88,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607470,"byte_end":13607477,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607207,"byte_end":13607276,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607281,"byte_end":13607345,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607350,"byte_end":13607402,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607407,"byte_end":13607410,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607415,"byte_end":13607458,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608468,"byte_end":13608477,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607584,"byte_end":13607658,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607663,"byte_end":13607736,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607741,"byte_end":13607755,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607760,"byte_end":13607763,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607768,"byte_end":13607841,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607846,"byte_end":13607849,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607854,"byte_end":13607868,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607873,"byte_end":13607876,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607881,"byte_end":13607894,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607899,"byte_end":13607917,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607922,"byte_end":13607952,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607957,"byte_end":13607960,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607965,"byte_end":13607998,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608003,"byte_end":13608006,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608011,"byte_end":13608029,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608034,"byte_end":13608073,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608078,"byte_end":13608143,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608148,"byte_end":13608201,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608206,"byte_end":13608236,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608241,"byte_end":13608244,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608249,"byte_end":13608271,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608276,"byte_end":13608321,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608326,"byte_end":13608344,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608349,"byte_end":13608352,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608357,"byte_end":13608371,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608376,"byte_end":13608381,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608386,"byte_end":13608393,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608398,"byte_end":13608401,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608406,"byte_end":13608456,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5224},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609899,"byte_end":13609903,"line_start":183,"line_end":183,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608606,"byte_end":13608676,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608681,"byte_end":13608750,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608755,"byte_end":13608794,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608799,"byte_end":13608802,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608807,"byte_end":13608875,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608880,"byte_end":13608883,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608888,"byte_end":13608928,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608933,"byte_end":13608936,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608941,"byte_end":13608955,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608960,"byte_end":13608963,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608968,"byte_end":13608981,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13608986,"byte_end":13609016,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609021,"byte_end":13609047,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609052,"byte_end":13609078,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609083,"byte_end":13609086,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609091,"byte_end":13609109,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609114,"byte_end":13609165,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609170,"byte_end":13609198,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609203,"byte_end":13609268,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609273,"byte_end":13609326,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609331,"byte_end":13609334,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609339,"byte_end":13609368,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609373,"byte_end":13609402,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609407,"byte_end":13609410,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609415,"byte_end":13609442,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609447,"byte_end":13609494,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609499,"byte_end":13609502,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609507,"byte_end":13609531,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609536,"byte_end":13609595,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609600,"byte_end":13609639,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609644,"byte_end":13609647,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609652,"byte_end":13609666,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609671,"byte_end":13609676,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609681,"byte_end":13609688,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609693,"byte_end":13609696,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609701,"byte_end":13609766,"line_start":179,"line_end":179,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609771,"byte_end":13609774,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609779,"byte_end":13609825,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13609830,"byte_end":13609881,"line_start":182,"line_end":182,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5232},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610636,"byte_end":13610643,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610373,"byte_end":13610442,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610447,"byte_end":13610511,"line_start":204,"line_end":204,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610516,"byte_end":13610568,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610573,"byte_end":13610576,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610581,"byte_end":13610624,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610948,"byte_end":13610954,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610749,"byte_end":13610821,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610826,"byte_end":13610895,"line_start":213,"line_end":213,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610900,"byte_end":13610936,"line_start":214,"line_end":214,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5462},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614362,"byte_end":13614371,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":5463}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5342},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616452,"byte_end":13616459,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614450,"byte_end":13614494,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614499,"byte_end":13614502,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614507,"byte_end":13614581,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614586,"byte_end":13614655,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614660,"byte_end":13614736,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614741,"byte_end":13614806,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614811,"byte_end":13614814,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614819,"byte_end":13614895,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614900,"byte_end":13614969,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614974,"byte_end":13615050,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615055,"byte_end":13615114,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615119,"byte_end":13615122,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615127,"byte_end":13615181,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615186,"byte_end":13615189,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615194,"byte_end":13615208,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615213,"byte_end":13615216,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615221,"byte_end":13615234,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615239,"byte_end":13615269,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615274,"byte_end":13615300,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615305,"byte_end":13615331,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615336,"byte_end":13615339,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615344,"byte_end":13615362,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615367,"byte_end":13615418,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615423,"byte_end":13615451,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615456,"byte_end":13615525,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615530,"byte_end":13615533,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615538,"byte_end":13615565,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615570,"byte_end":13615619,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615624,"byte_end":13615627,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615632,"byte_end":13615646,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615651,"byte_end":13615656,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615661,"byte_end":13615668,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615673,"byte_end":13615676,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615681,"byte_end":13615711,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615716,"byte_end":13615719,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615724,"byte_end":13615737,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615742,"byte_end":13615772,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615777,"byte_end":13615803,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615808,"byte_end":13615834,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615839,"byte_end":13615866,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615871,"byte_end":13615874,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615879,"byte_end":13615897,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615902,"byte_end":13615953,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615958,"byte_end":13615986,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13615991,"byte_end":13616079,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616084,"byte_end":13616087,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616092,"byte_end":13616119,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616124,"byte_end":13616173,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616178,"byte_end":13616181,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616186,"byte_end":13616200,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616205,"byte_end":13616210,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616215,"byte_end":13616222,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616227,"byte_end":13616230,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616235,"byte_end":13616306,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616311,"byte_end":13616314,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616319,"byte_end":13616376,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13616381,"byte_end":13616434,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5352},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618892,"byte_end":13618900,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13617925,"byte_end":13617982,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13617987,"byte_end":13617990,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13617995,"byte_end":13618070,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618075,"byte_end":13618148,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618153,"byte_end":13618156,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618161,"byte_end":13618175,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618180,"byte_end":13618183,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618188,"byte_end":13618206,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618211,"byte_end":13618237,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618242,"byte_end":13618272,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618277,"byte_end":13618280,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618285,"byte_end":13618303,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618308,"byte_end":13618359,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618364,"byte_end":13618438,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618443,"byte_end":13618497,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618502,"byte_end":13618516,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618521,"byte_end":13618526,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618531,"byte_end":13618538,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618543,"byte_end":13618546,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618551,"byte_end":13618563,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618568,"byte_end":13618571,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618576,"byte_end":13618636,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618641,"byte_end":13618644,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618649,"byte_end":13618719,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618724,"byte_end":13618797,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13618802,"byte_end":13618880,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5353},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13619297,"byte_end":13619308,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5357},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620456,"byte_end":13620466,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620057,"byte_end":13620116,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620121,"byte_end":13620124,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620129,"byte_end":13620143,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620148,"byte_end":13620151,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620156,"byte_end":13620169,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620174,"byte_end":13620204,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620209,"byte_end":13620212,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620217,"byte_end":13620281,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620286,"byte_end":13620347,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620352,"byte_end":13620355,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620360,"byte_end":13620403,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620408,"byte_end":13620420,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620425,"byte_end":13620432,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620437,"byte_end":13620444,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5358},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620955,"byte_end":13620964,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620552,"byte_end":13620616,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620621,"byte_end":13620624,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620629,"byte_end":13620643,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620648,"byte_end":13620651,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620656,"byte_end":13620669,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620674,"byte_end":13620704,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620709,"byte_end":13620712,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620717,"byte_end":13620781,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620786,"byte_end":13620847,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620852,"byte_end":13620855,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620860,"byte_end":13620902,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620907,"byte_end":13620919,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620924,"byte_end":13620931,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13620936,"byte_end":13620943,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5359},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622122,"byte_end":13622131,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621049,"byte_end":13621124,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621129,"byte_end":13621202,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621207,"byte_end":13621221,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621226,"byte_end":13621229,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621234,"byte_end":13621252,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621257,"byte_end":13621260,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621265,"byte_end":13621290,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621295,"byte_end":13621298,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621303,"byte_end":13621354,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621359,"byte_end":13621442,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621447,"byte_end":13621502,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621507,"byte_end":13621510,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621515,"byte_end":13621527,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621532,"byte_end":13621535,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621540,"byte_end":13621615,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621620,"byte_end":13621623,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621628,"byte_end":13621642,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621647,"byte_end":13621650,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621655,"byte_end":13621668,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621673,"byte_end":13621691,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621696,"byte_end":13621726,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621731,"byte_end":13621734,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621739,"byte_end":13621772,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621777,"byte_end":13621780,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621785,"byte_end":13621803,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621808,"byte_end":13621847,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621852,"byte_end":13621921,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621926,"byte_end":13621956,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621961,"byte_end":13621964,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621969,"byte_end":13621991,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13621996,"byte_end":13622038,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622043,"byte_end":13622061,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622066,"byte_end":13622069,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622074,"byte_end":13622088,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622093,"byte_end":13622098,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622103,"byte_end":13622110,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5361},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624043,"byte_end":13624047,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622792,"byte_end":13622862,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622867,"byte_end":13622936,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622941,"byte_end":13622980,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622985,"byte_end":13622988,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13622993,"byte_end":13623067,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623072,"byte_end":13623132,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623137,"byte_end":13623140,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623145,"byte_end":13623159,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623164,"byte_end":13623167,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623172,"byte_end":13623185,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623190,"byte_end":13623220,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623225,"byte_end":13623251,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623256,"byte_end":13623282,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623287,"byte_end":13623290,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623295,"byte_end":13623313,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623318,"byte_end":13623369,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623374,"byte_end":13623402,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623407,"byte_end":13623476,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623481,"byte_end":13623484,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623489,"byte_end":13623518,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623523,"byte_end":13623552,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623557,"byte_end":13623560,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623565,"byte_end":13623592,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623597,"byte_end":13623641,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623646,"byte_end":13623649,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623654,"byte_end":13623678,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623683,"byte_end":13623739,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623744,"byte_end":13623783,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623788,"byte_end":13623791,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623796,"byte_end":13623810,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623815,"byte_end":13623820,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623825,"byte_end":13623832,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623837,"byte_end":13623840,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623845,"byte_end":13623910,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623915,"byte_end":13623918,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623923,"byte_end":13623969,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13623974,"byte_end":13624025,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5365},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624916,"byte_end":13624924,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624161,"byte_end":13624227,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624232,"byte_end":13624235,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624240,"byte_end":13624312,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624317,"byte_end":13624386,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624391,"byte_end":13624424,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624429,"byte_end":13624432,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624437,"byte_end":13624451,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624456,"byte_end":13624459,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624464,"byte_end":13624477,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624482,"byte_end":13624512,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624517,"byte_end":13624543,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624548,"byte_end":13624575,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624580,"byte_end":13624583,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624588,"byte_end":13624606,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624611,"byte_end":13624662,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624667,"byte_end":13624695,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624700,"byte_end":13624765,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624770,"byte_end":13624773,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624778,"byte_end":13624808,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624813,"byte_end":13624855,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624860,"byte_end":13624863,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624868,"byte_end":13624882,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624887,"byte_end":13624892,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13624897,"byte_end":13624904,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5366},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625550,"byte_end":13625557,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625018,"byte_end":13625080,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625085,"byte_end":13625088,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625093,"byte_end":13625157,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625162,"byte_end":13625165,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625170,"byte_end":13625213,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625218,"byte_end":13625221,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625226,"byte_end":13625240,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625245,"byte_end":13625248,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625253,"byte_end":13625266,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625271,"byte_end":13625301,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625306,"byte_end":13625309,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625314,"byte_end":13625378,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625383,"byte_end":13625444,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625449,"byte_end":13625452,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625457,"byte_end":13625497,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625502,"byte_end":13625514,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625519,"byte_end":13625526,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625531,"byte_end":13625538,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5367},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626364,"byte_end":13626375,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625634,"byte_end":13625696,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625701,"byte_end":13625704,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625709,"byte_end":13625778,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625783,"byte_end":13625856,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625861,"byte_end":13625934,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13625939,"byte_end":13626014,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626019,"byte_end":13626037,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626042,"byte_end":13626045,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626050,"byte_end":13626064,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626069,"byte_end":13626072,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626077,"byte_end":13626090,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626095,"byte_end":13626125,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626130,"byte_end":13626133,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626138,"byte_end":13626202,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626207,"byte_end":13626268,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626273,"byte_end":13626276,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626281,"byte_end":13626311,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626316,"byte_end":13626328,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626333,"byte_end":13626340,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626345,"byte_end":13626352,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5368},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627042,"byte_end":13627058,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626476,"byte_end":13626536,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626541,"byte_end":13626544,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626549,"byte_end":13626622,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626627,"byte_end":13626630,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626635,"byte_end":13626696,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626701,"byte_end":13626704,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626709,"byte_end":13626723,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626728,"byte_end":13626731,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626736,"byte_end":13626749,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626754,"byte_end":13626784,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626789,"byte_end":13626792,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626797,"byte_end":13626861,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626866,"byte_end":13626927,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626932,"byte_end":13626935,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626940,"byte_end":13626989,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13626994,"byte_end":13627006,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627011,"byte_end":13627018,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627023,"byte_end":13627030,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5369},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627650,"byte_end":13627670,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627145,"byte_end":13627205,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627210,"byte_end":13627213,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627218,"byte_end":13627290,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627295,"byte_end":13627315,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627320,"byte_end":13627323,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627328,"byte_end":13627342,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627347,"byte_end":13627350,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627355,"byte_end":13627368,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627373,"byte_end":13627403,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627408,"byte_end":13627411,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627416,"byte_end":13627480,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627485,"byte_end":13627546,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627551,"byte_end":13627554,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627559,"byte_end":13627597,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627602,"byte_end":13627614,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627619,"byte_end":13627626,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627631,"byte_end":13627638,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5370},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628341,"byte_end":13628357,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627775,"byte_end":13627835,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627840,"byte_end":13627843,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627848,"byte_end":13627921,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627926,"byte_end":13627929,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13627934,"byte_end":13627995,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628000,"byte_end":13628003,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628008,"byte_end":13628022,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628027,"byte_end":13628030,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628035,"byte_end":13628048,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628053,"byte_end":13628083,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628088,"byte_end":13628091,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628096,"byte_end":13628160,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628165,"byte_end":13628226,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628231,"byte_end":13628234,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628239,"byte_end":13628288,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628293,"byte_end":13628305,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628310,"byte_end":13628317,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628322,"byte_end":13628329,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5371},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628946,"byte_end":13628966,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628444,"byte_end":13628504,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628509,"byte_end":13628512,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628517,"byte_end":13628591,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628596,"byte_end":13628611,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628616,"byte_end":13628619,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628624,"byte_end":13628638,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628643,"byte_end":13628646,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628651,"byte_end":13628664,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628669,"byte_end":13628699,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628704,"byte_end":13628707,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628712,"byte_end":13628776,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628781,"byte_end":13628842,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628847,"byte_end":13628850,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628855,"byte_end":13628893,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628898,"byte_end":13628910,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628915,"byte_end":13628922,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13628927,"byte_end":13628934,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5372},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629668,"byte_end":13629677,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629071,"byte_end":13629147,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629152,"byte_end":13629190,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629195,"byte_end":13629198,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629203,"byte_end":13629269,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629274,"byte_end":13629277,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629282,"byte_end":13629329,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629334,"byte_end":13629337,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629342,"byte_end":13629356,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629361,"byte_end":13629364,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629369,"byte_end":13629382,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629387,"byte_end":13629417,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629422,"byte_end":13629425,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629430,"byte_end":13629494,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629499,"byte_end":13629560,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629565,"byte_end":13629568,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629573,"byte_end":13629615,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629620,"byte_end":13629632,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629637,"byte_end":13629644,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629649,"byte_end":13629656,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5373},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630708,"byte_end":13630721,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629768,"byte_end":13629842,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629847,"byte_end":13629850,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629855,"byte_end":13629922,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13629927,"byte_end":13630001,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630006,"byte_end":13630068,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630073,"byte_end":13630076,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630081,"byte_end":13630155,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630160,"byte_end":13630235,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630240,"byte_end":13630264,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630269,"byte_end":13630272,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630277,"byte_end":13630340,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630345,"byte_end":13630379,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630384,"byte_end":13630387,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630392,"byte_end":13630406,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630411,"byte_end":13630414,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630419,"byte_end":13630432,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630437,"byte_end":13630467,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630472,"byte_end":13630475,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630480,"byte_end":13630544,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630549,"byte_end":13630610,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630615,"byte_end":13630618,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630623,"byte_end":13630655,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630660,"byte_end":13630672,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630677,"byte_end":13630684,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630689,"byte_end":13630696,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5374},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631352,"byte_end":13631355,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630840,"byte_end":13630898,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630903,"byte_end":13630906,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630911,"byte_end":13630971,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630976,"byte_end":13630979,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13630984,"byte_end":13631019,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631024,"byte_end":13631027,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631032,"byte_end":13631046,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631051,"byte_end":13631054,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631059,"byte_end":13631072,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631077,"byte_end":13631107,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631112,"byte_end":13631115,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631120,"byte_end":13631184,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631189,"byte_end":13631250,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631255,"byte_end":13631258,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631263,"byte_end":13631299,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631304,"byte_end":13631316,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631321,"byte_end":13631328,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631333,"byte_end":13631340,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5375},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631922,"byte_end":13631929,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631427,"byte_end":13631485,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631490,"byte_end":13631493,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631498,"byte_end":13631574,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631579,"byte_end":13631600,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631605,"byte_end":13631608,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631613,"byte_end":13631627,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631632,"byte_end":13631635,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631640,"byte_end":13631653,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631658,"byte_end":13631688,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631693,"byte_end":13631696,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631701,"byte_end":13631765,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631770,"byte_end":13631831,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631836,"byte_end":13631839,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631844,"byte_end":13631869,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631874,"byte_end":13631886,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631891,"byte_end":13631898,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13631903,"byte_end":13631910,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5376},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632571,"byte_end":13632577,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632017,"byte_end":13632089,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632094,"byte_end":13632105,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632110,"byte_end":13632113,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632118,"byte_end":13632181,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632186,"byte_end":13632189,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632194,"byte_end":13632235,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632240,"byte_end":13632243,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632248,"byte_end":13632262,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632267,"byte_end":13632270,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632275,"byte_end":13632288,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632293,"byte_end":13632323,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632328,"byte_end":13632331,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632336,"byte_end":13632400,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632405,"byte_end":13632466,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632471,"byte_end":13632474,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632479,"byte_end":13632518,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632523,"byte_end":13632535,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632540,"byte_end":13632547,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632552,"byte_end":13632559,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5377},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633519,"byte_end":13633529,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632665,"byte_end":13632735,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632740,"byte_end":13632751,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632756,"byte_end":13632759,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632764,"byte_end":13632839,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632844,"byte_end":13632907,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632912,"byte_end":13632983,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13632988,"byte_end":13633005,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633010,"byte_end":13633013,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633018,"byte_end":13633091,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633096,"byte_end":13633172,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633177,"byte_end":13633193,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633198,"byte_end":13633201,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633206,"byte_end":13633220,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633225,"byte_end":13633228,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633233,"byte_end":13633246,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633251,"byte_end":13633281,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633286,"byte_end":13633289,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633294,"byte_end":13633358,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633363,"byte_end":13633424,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633429,"byte_end":13633432,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633437,"byte_end":13633466,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633471,"byte_end":13633483,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633488,"byte_end":13633495,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633500,"byte_end":13633507,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5378},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634147,"byte_end":13634152,"line_start":672,"line_end":672,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633770,"byte_end":13633806,"line_start":664,"line_end":664,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633811,"byte_end":13633888,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633893,"byte_end":13633939,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633944,"byte_end":13633947,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13633952,"byte_end":13634031,"line_start":668,"line_end":668,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634036,"byte_end":13634079,"line_start":669,"line_end":669,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634084,"byte_end":13634087,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634092,"byte_end":13634135,"line_start":671,"line_end":671,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5380},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634808,"byte_end":13634818,"line_start":687,"line_end":687,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634237,"byte_end":13634314,"line_start":676,"line_end":676,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634319,"byte_end":13634365,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634370,"byte_end":13634373,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634378,"byte_end":13634456,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634461,"byte_end":13634509,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634514,"byte_end":13634517,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634522,"byte_end":13634600,"line_start":682,"line_end":682,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `TcpStream`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634605,"byte_end":13634686,"line_start":683,"line_end":683,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634691,"byte_end":13634694,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634699,"byte_end":13634732,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/ [`shutdown(Write)`]: fn@crate::net::TcpStream::shutdown","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13634737,"byte_end":13634796,"line_start":686,"line_end":686,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":5464},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":5465},{"krate":0,"index":5582},{"krate":0,"index":5585},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5640},{"krate":0,"index":5641},{"krate":0,"index":5643}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":13642071,"byte_end":13642093,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5649},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13642549,"byte_end":13642558,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":5650}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5515},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13642756,"byte_end":13642760,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13642637,"byte_end":13642709,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13642714,"byte_end":13642738,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5522},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644463,"byte_end":13644471,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13643595,"byte_end":13643667,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13643672,"byte_end":13643675,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13643680,"byte_end":13643753,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13643758,"byte_end":13643833,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13643838,"byte_end":13643885,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13643890,"byte_end":13643893,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13643898,"byte_end":13643971,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13643976,"byte_end":13644051,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644056,"byte_end":13644109,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644114,"byte_end":13644117,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644122,"byte_end":13644134,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644139,"byte_end":13644142,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644147,"byte_end":13644207,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644212,"byte_end":13644215,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644220,"byte_end":13644290,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644295,"byte_end":13644368,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644373,"byte_end":13644451,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5523},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644855,"byte_end":13644860,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644663,"byte_end":13644740,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644745,"byte_end":13644818,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644823,"byte_end":13644843,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":5524},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644995,"byte_end":13645005,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13644924,"byte_end":13644983,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5525},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13645277,"byte_end":13645284,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13645091,"byte_end":13645165,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13645170,"byte_end":13645243,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13645248,"byte_end":13645259,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5530},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646221,"byte_end":13646225,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13645818,"byte_end":13645916,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13645921,"byte_end":13645992,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13645997,"byte_end":13646000,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646005,"byte_end":13646088,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646093,"byte_end":13646153,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646158,"byte_end":13646161,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646166,"byte_end":13646203,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5534},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646731,"byte_end":13646739,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646335,"byte_end":13646406,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646411,"byte_end":13646425,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646430,"byte_end":13646433,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646438,"byte_end":13646451,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646456,"byte_end":13646459,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If successfull, the number of bytes sent is returned. Users","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646464,"byte_end":13646527,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ should ensure that when the remote cannot receive, the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646532,"byte_end":13646590,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646595,"byte_end":13646645,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646650,"byte_end":13646653,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13646658,"byte_end":13646719,"line_start":128,"line_end":128,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5535},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13647446,"byte_end":13647455,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5536},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648473,"byte_end":13648477,"line_start":168,"line_end":168,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13647833,"byte_end":13647912,"line_start":156,"line_end":156,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13647917,"byte_end":13648001,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648006,"byte_end":13648038,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648043,"byte_end":13648046,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648051,"byte_end":13648132,"line_start":160,"line_end":160,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648137,"byte_end":13648220,"line_start":161,"line_end":161,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648225,"byte_end":13648259,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648264,"byte_end":13648267,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648272,"byte_end":13648355,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648360,"byte_end":13648405,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648410,"byte_end":13648413,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648418,"byte_end":13648455,"line_start":167,"line_end":167,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5540},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13648617,"byte_end":13648626,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5541},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649345,"byte_end":13649352,"line_start":190,"line_end":190,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649054,"byte_end":13649126,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649131,"byte_end":13649202,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649207,"byte_end":13649210,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649215,"byte_end":13649291,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649296,"byte_end":13649327,"line_start":189,"line_end":189,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5546},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13650248,"byte_end":13650259,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649770,"byte_end":13649826,"line_start":202,"line_end":202,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649831,"byte_end":13649834,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649839,"byte_end":13649852,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649857,"byte_end":13649860,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If successfull, the future resolves to the number of bytes sent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649865,"byte_end":13649933,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649938,"byte_end":13649941,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13649946,"byte_end":13650010,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13650015,"byte_end":13650089,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13650094,"byte_end":13650162,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13650167,"byte_end":13650170,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13650175,"byte_end":13650236,"line_start":212,"line_end":212,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5547},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13650435,"byte_end":13650447,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5548},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13651286,"byte_end":13651295,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13650896,"byte_end":13650975,"line_start":236,"line_end":236,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13650980,"byte_end":13651047,"line_start":237,"line_end":237,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13651052,"byte_end":13651055,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13651060,"byte_end":13651138,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13651143,"byte_end":13651221,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13651226,"byte_end":13651268,"line_start":241,"line_end":241,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5552},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13651454,"byte_end":13651468,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5553},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652170,"byte_end":13652179,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13651953,"byte_end":13652017,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652022,"byte_end":13652025,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652030,"byte_end":13652096,"line_start":265,"line_end":265,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652101,"byte_end":13652104,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652109,"byte_end":13652158,"line_start":267,"line_end":267,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5554},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652435,"byte_end":13652448,"line_start":276,"line_end":276,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652258,"byte_end":13652322,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652327,"byte_end":13652330,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652335,"byte_end":13652406,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652411,"byte_end":13652423,"line_start":275,"line_end":275,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5555},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652787,"byte_end":13652804,"line_start":285,"line_end":285,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652541,"byte_end":13652610,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652615,"byte_end":13652618,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652623,"byte_end":13652697,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652702,"byte_end":13652705,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652710,"byte_end":13652775,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5556},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653144,"byte_end":13653165,"line_start":296,"line_end":296,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652891,"byte_end":13652960,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652965,"byte_end":13652968,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13652973,"byte_end":13653047,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653052,"byte_end":13653055,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653060,"byte_end":13653070,"line_start":293,"line_end":293,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653075,"byte_end":13653078,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653083,"byte_end":13653132,"line_start":295,"line_end":295,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5557},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653508,"byte_end":13653524,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653266,"byte_end":13653334,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653339,"byte_end":13653342,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653347,"byte_end":13653420,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653425,"byte_end":13653428,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653433,"byte_end":13653496,"line_start":304,"line_end":304,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5558},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654003,"byte_end":13654023,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653609,"byte_end":13653677,"line_start":309,"line_end":309,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653682,"byte_end":13653685,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653690,"byte_end":13653760,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653765,"byte_end":13653839,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653844,"byte_end":13653906,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653911,"byte_end":13653914,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653919,"byte_end":13653929,"line_start":315,"line_end":315,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653934,"byte_end":13653937,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13653942,"byte_end":13653991,"line_start":317,"line_end":317,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5559},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654372,"byte_end":13654389,"line_start":327,"line_end":327,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654124,"byte_end":13654195,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654200,"byte_end":13654203,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654208,"byte_end":13654282,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654287,"byte_end":13654290,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654295,"byte_end":13654360,"line_start":326,"line_end":326,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5560},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654733,"byte_end":13654754,"line_start":338,"line_end":338,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654476,"byte_end":13654547,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654552,"byte_end":13654555,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654560,"byte_end":13654636,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654641,"byte_end":13654644,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654649,"byte_end":13654659,"line_start":335,"line_end":335,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654664,"byte_end":13654667,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654672,"byte_end":13654721,"line_start":337,"line_end":337,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5561},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655048,"byte_end":13655051,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654855,"byte_end":13654913,"line_start":342,"line_end":342,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654918,"byte_end":13654921,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654926,"byte_end":13654986,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654991,"byte_end":13654994,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13654999,"byte_end":13655036,"line_start":346,"line_end":346,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5562},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655308,"byte_end":13655315,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655123,"byte_end":13655181,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655186,"byte_end":13655189,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655194,"byte_end":13655270,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655275,"byte_end":13655296,"line_start":354,"line_end":354,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5563},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655833,"byte_end":13655850,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655403,"byte_end":13655461,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655466,"byte_end":13655469,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655474,"byte_end":13655548,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655553,"byte_end":13655626,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655631,"byte_end":13655703,"line_start":363,"line_end":363,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655708,"byte_end":13655778,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655783,"byte_end":13655821,"line_start":365,"line_end":365,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5564},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656315,"byte_end":13656332,"line_start":375,"line_end":375,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13655999,"byte_end":13656059,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656064,"byte_end":13656067,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656072,"byte_end":13656146,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656151,"byte_end":13656224,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656229,"byte_end":13656303,"line_start":374,"line_end":374,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5565},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656699,"byte_end":13656717,"line_start":384,"line_end":384,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656475,"byte_end":13656534,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656539,"byte_end":13656542,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656547,"byte_end":13656617,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656622,"byte_end":13656625,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656630,"byte_end":13656687,"line_start":383,"line_end":383,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5566},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13657093,"byte_end":13657111,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656867,"byte_end":13656928,"line_start":388,"line_end":388,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656933,"byte_end":13656936,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13656941,"byte_end":13657011,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13657016,"byte_end":13657019,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13657024,"byte_end":13657081,"line_start":392,"line_end":392,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5651},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659746,"byte_end":13659754,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659558,"byte_end":13659617,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659618,"byte_end":13659621,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659622,"byte_end":13659702,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659703,"byte_end":13659717,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5656},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659968,"byte_end":13659976,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659773,"byte_end":13659832,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659833,"byte_end":13659836,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659837,"byte_end":13659924,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13659925,"byte_end":13659939,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5661},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13660323,"byte_end":13660335,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13660189,"byte_end":13660271,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13660272,"byte_end":13660294,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5663},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13660336,"byte_end":13660348,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":5661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5664},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13660350,"byte_end":13660362,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":5661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5613},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661372,"byte_end":13661379,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661157,"byte_end":13661228,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661233,"byte_end":13661299,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661304,"byte_end":13661360,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5614},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661870,"byte_end":13661879,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661480,"byte_end":13661559,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661564,"byte_end":13661631,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661636,"byte_end":13661639,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661644,"byte_end":13661722,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661727,"byte_end":13661805,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661810,"byte_end":13661852,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5618},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662659,"byte_end":13662663,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662014,"byte_end":13662093,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662098,"byte_end":13662182,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662187,"byte_end":13662219,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662224,"byte_end":13662227,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662232,"byte_end":13662313,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662318,"byte_end":13662401,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662406,"byte_end":13662440,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662445,"byte_end":13662448,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662453,"byte_end":13662536,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662541,"byte_end":13662586,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662591,"byte_end":13662594,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662599,"byte_end":13662641,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5623},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663012,"byte_end":13663019,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662797,"byte_end":13662868,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662873,"byte_end":13662939,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662944,"byte_end":13663000,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5624},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663411,"byte_end":13663418,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663120,"byte_end":13663192,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663197,"byte_end":13663268,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663273,"byte_end":13663276,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663281,"byte_end":13663357,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663362,"byte_end":13663393,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5628},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663970,"byte_end":13663974,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663562,"byte_end":13663660,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663665,"byte_end":13663736,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663741,"byte_end":13663744,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663749,"byte_end":13663832,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663837,"byte_end":13663897,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663902,"byte_end":13663905,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13663910,"byte_end":13663952,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":5667},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":5668},{"krate":0,"index":5903},{"krate":0,"index":5930},{"krate":0,"index":5933},{"krate":0,"index":6009},{"krate":0,"index":6012},{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6058},{"krate":0,"index":6061},{"krate":0,"index":6124},{"krate":0,"index":6125},{"krate":0,"index":6128},{"krate":0,"index":6131},{"krate":0,"index":6132},{"krate":0,"index":6134},{"krate":0,"index":6261},{"krate":0,"index":6264},{"krate":0,"index":6309}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664282,"byte_end":13664318,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":5668},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datagram","qualname":"::net::unix::datagram","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","parent":null,"children":[{"krate":0,"index":5669},{"krate":0,"index":5784},{"krate":0,"index":5824},{"krate":0,"index":5886},{"krate":0,"index":5887},{"krate":0,"index":5890},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5897},{"krate":0,"index":5900},{"krate":0,"index":5901}],"decl_id":null,"docs":" Unix datagram types.\n","sig":null,"attributes":[{"value":"/ Unix datagram types.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":13664676,"byte_end":13664700,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":6321},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665398,"byte_end":13665410,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::socket::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":6322}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5733},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665567,"byte_end":13665571,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665494,"byte_end":13665555,"line_start":23,"line_end":23,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5735},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666034,"byte_end":13666038,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665754,"byte_end":13665803,"line_start":32,"line_end":32,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665808,"byte_end":13665811,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665816,"byte_end":13665887,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665892,"byte_end":13665962,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665967,"byte_end":13666022,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5736},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666864,"byte_end":13666872,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666249,"byte_end":13666316,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666321,"byte_end":13666368,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666373,"byte_end":13666376,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666381,"byte_end":13666451,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666456,"byte_end":13666510,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666515,"byte_end":13666518,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666523,"byte_end":13666535,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666540,"byte_end":13666543,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666548,"byte_end":13666608,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666613,"byte_end":13666616,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666621,"byte_end":13666691,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666696,"byte_end":13666769,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13666774,"byte_end":13666852,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5738},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667323,"byte_end":13667330,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667244,"byte_end":13667311,"line_start":69,"line_end":69,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5739},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667683,"byte_end":13667690,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667464,"byte_end":13667513,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667518,"byte_end":13667521,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667526,"byte_end":13667598,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667603,"byte_end":13667671,"line_start":78,"line_end":78,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5741},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667862,"byte_end":13667866,"line_start":84,"line_end":84,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667794,"byte_end":13667844,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5745},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668710,"byte_end":13668718,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UnixDatagram>::try_send","value":"pub fn try_send(&mut Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13667981,"byte_end":13668036,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668041,"byte_end":13668044,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668049,"byte_end":13668056,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668061,"byte_end":13668081,"line_start":91,"line_end":91,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668086,"byte_end":13668151,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668156,"byte_end":13668189,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668194,"byte_end":13668197,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"bytes\";","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668202,"byte_end":13668227,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/ // We use a socket pair so that they are assigned","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668232,"byte_end":13668285,"line_start":96,"line_end":96,"column_start":5,"column_end":58}},{"value":"/ // each other as a peer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668290,"byte_end":13668318,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/ let (mut first, mut second) = UnixDatagram::pair()?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668323,"byte_end":13668379,"line_start":98,"line_end":98,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668384,"byte_end":13668387,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let size = first.try_send(bytes)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668392,"byte_end":13668430,"line_start":100,"line_end":100,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(size, bytes.len());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668435,"byte_end":13668469,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668474,"byte_end":13668477,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = vec![0u8; 24];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668482,"byte_end":13668517,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/ let size = second.try_recv(&mut buffer)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668522,"byte_end":13668567,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668572,"byte_end":13668575,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buffer.as_slice()[..size];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668580,"byte_end":13668623,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668628,"byte_end":13668657,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668662,"byte_end":13668674,"line_start":108,"line_end":108,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668679,"byte_end":13668686,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668691,"byte_end":13668698,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5746},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669942,"byte_end":13669953,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UnixDatagram>::try_send_to","value":"pub fn try_send_to<P>(&mut Self, &[u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668812,"byte_end":13668867,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668872,"byte_end":13668875,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668880,"byte_end":13668887,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668892,"byte_end":13668912,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668917,"byte_end":13668982,"line_start":119,"line_end":119,"column_start":5,"column_end":70}},{"value":"/ use {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13668987,"byte_end":13668996,"line_start":120,"line_end":120,"column_start":5,"column_end":14}},{"value":"/     tokio::net::UnixDatagram,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669001,"byte_end":13669034,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/     tempfile::tempdir,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669039,"byte_end":13669065,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669070,"byte_end":13669076,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669081,"byte_end":13669084,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"bytes\";","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669089,"byte_end":13669114,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669119,"byte_end":13669173,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669178,"byte_end":13669237,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669242,"byte_end":13669275,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669280,"byte_end":13669283,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let server_path = tmp.path().join(\"server\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669288,"byte_end":13669336,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/ let mut server = UnixDatagram::bind(&server_path)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669341,"byte_end":13669396,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669401,"byte_end":13669404,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let client_path = tmp.path().join(\"client\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669409,"byte_end":13669457,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/ let mut client = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669462,"byte_end":13669517,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669522,"byte_end":13669525,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let size = client.try_send_to(bytes, &server_path)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669530,"byte_end":13669586,"line_start":136,"line_end":136,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(size, bytes.len());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669591,"byte_end":13669625,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669630,"byte_end":13669633,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = vec![0u8; 24];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669638,"byte_end":13669673,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ let (size, addr) = server.try_recv_from(&mut buffer)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669678,"byte_end":13669736,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669741,"byte_end":13669744,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buffer.as_slice()[..size];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669749,"byte_end":13669792,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669797,"byte_end":13669826,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &client_path);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669831,"byte_end":13669889,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669894,"byte_end":13669906,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669911,"byte_end":13669918,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13669923,"byte_end":13669930,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5749},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13671190,"byte_end":13671194,"line_start":182,"line_end":182,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13671138,"byte_end":13671172,"line_start":181,"line_end":181,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5753},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13671385,"byte_end":13671393,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnixDatagram>::try_recv","value":"pub fn try_recv(&mut Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a datagram from the peer without waiting.\n","sig":null,"attributes":[{"value":"/ Try to receive a datagram from the peer without waiting.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13671313,"byte_end":13671373,"line_start":186,"line_end":186,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5755},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13672050,"byte_end":13672057,"line_start":208,"line_end":208,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13671978,"byte_end":13672032,"line_start":207,"line_end":207,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5761},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13672778,"byte_end":13672787,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13672726,"byte_end":13672760,"line_start":232,"line_end":232,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5765},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13672993,"byte_end":13673006,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UnixDatagram>::try_recv_from","value":"pub fn try_recv_from(&mut Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.\n","sig":null,"attributes":[{"value":"/ Try to receive data from the socket without waiting.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13672925,"byte_end":13672981,"line_start":237,"line_end":237,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5767},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13673712,"byte_end":13673722,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13673641,"byte_end":13673700,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5768},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13673938,"byte_end":13673947,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13673808,"byte_end":13673854,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13673859,"byte_end":13673862,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13673867,"byte_end":13673926,"line_start":265,"line_end":265,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5769},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674091,"byte_end":13674101,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674032,"byte_end":13674079,"line_start":270,"line_end":270,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5770},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674475,"byte_end":13674483,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674194,"byte_end":13674260,"line_start":275,"line_end":275,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674265,"byte_end":13674268,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674273,"byte_end":13674341,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674346,"byte_end":13674416,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674421,"byte_end":13674463,"line_start":279,"line_end":279,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5771},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675115,"byte_end":13675120,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixDatagram>::split","value":"pub fn split<'a>(&'a mut Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixDatagram` into a receive half and a send half, which can be used\n to receive and send the datagram concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674714,"byte_end":13674750,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixDatagram` into a receive half and a send half, which can be used","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674755,"byte_end":13674836,"line_start":287,"line_end":287,"column_start":5,"column_end":86}},{"value":"/ to receive and send the datagram concurrently.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674841,"byte_end":13674891,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674896,"byte_end":13674899,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674904,"byte_end":13674980,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ be moved into independently spawned tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13674985,"byte_end":13675031,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675036,"byte_end":13675039,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: fn@crate::net::UnixDatagram::into_split","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675044,"byte_end":13675103,"line_start":293,"line_end":293,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5773},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675780,"byte_end":13675790,"line_start":309,"line_end":309,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixDatagram>::into_split","value":"pub fn into_split(Self) -> (OwnedRecvHalf, OwnedSendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixDatagram` into a receive half and a send half, which can be used\n to receive and send the datagram concurrently.","sig":null,"attributes":[{"value":"/ Split a `UnixDatagram` into a receive half and a send half, which can be used","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675204,"byte_end":13675285,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/ to receive and send the datagram concurrently.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675290,"byte_end":13675340,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675345,"byte_end":13675348,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675353,"byte_end":13675423,"line_start":301,"line_end":301,"column_start":5,"column_end":75}},{"value":"/ however this comes at the cost of a heap allocation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675428,"byte_end":13675484,"line_start":302,"line_end":302,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675489,"byte_end":13675492,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675497,"byte_end":13675571,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ datagram. This is equivalent to calling [`shutdown(Write)`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675576,"byte_end":13675640,"line_start":305,"line_end":305,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675645,"byte_end":13675648,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`split`]: fn@crate::net::UnixDatagram::split","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675653,"byte_end":13675702,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/ [`shutdown(Write)`]:fn@crate::net::UnixDatagram::shutdown","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675707,"byte_end":13675768,"line_start":308,"line_end":308,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6323},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677405,"byte_end":13677413,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::unix::datagram::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed receive half of a [`UnixDatagram`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed receive half of a [`UnixDatagram`], created by [`split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677218,"byte_end":13677288,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677289,"byte_end":13677292,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677293,"byte_end":13677327,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ [`split`]: crate::net::UnixDatagram::split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677328,"byte_end":13677376,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6330},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677622,"byte_end":13677630,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::unix::datagram::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed send half of a [`UnixDatagram`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed send half of a [`UnixDatagram`], created by [`split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677438,"byte_end":13677505,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677506,"byte_end":13677509,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677510,"byte_end":13677544,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/ [`split`]: crate::net::UnixDatagram::split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677545,"byte_end":13677593,"line_start":23,"line_end":23,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5802},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677860,"byte_end":13677869,"line_start":33,"line_end":33,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677808,"byte_end":13677842,"line_start":32,"line_end":32,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5806},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678061,"byte_end":13678065,"line_start":38,"line_end":38,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678009,"byte_end":13678043,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5811},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678280,"byte_end":13678287,"line_start":45,"line_end":45,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678208,"byte_end":13678262,"line_start":44,"line_end":44,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5816},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678552,"byte_end":13678556,"line_start":53,"line_end":53,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678484,"byte_end":13678534,"line_start":52,"line_end":52,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6337},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13679771,"byte_end":13679784,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedSendHalf","qualname":"::net::unix::datagram::split_owned::OwnedSendHalf","value":"OwnedSendHalf {  }","parent":null,"children":[{"krate":0,"index":6338},{"krate":0,"index":6339}],"decl_id":null,"docs":" Owned send half of a [`UnixDatagram`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned send half of a [`UnixDatagram`], created by [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13679587,"byte_end":13679656,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13679657,"byte_end":13679660,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13679661,"byte_end":13679695,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13679696,"byte_end":13679742,"line_start":32,"line_end":32,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6342},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680035,"byte_end":13680048,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"OwnedRecvHalf","qualname":"::net::unix::datagram::split_owned::OwnedRecvHalf","value":"OwnedRecvHalf {  }","parent":null,"children":[{"krate":0,"index":6343}],"decl_id":null,"docs":" Owned receive half of a [`UnixDatagram`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned receive half of a [`UnixDatagram`], created by [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13679848,"byte_end":13679920,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13679921,"byte_end":13679924,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13679925,"byte_end":13679959,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13679960,"byte_end":13680006,"line_start":42,"line_end":42,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6346},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680218,"byte_end":13680230,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::datagram::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680084,"byte_end":13680166,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680167,"byte_end":13680189,"line_start":49,"line_end":49,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6348},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680231,"byte_end":13680248,"line_start":51,"line_end":51,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::datagram::split_owned::ReuniteError::0","value":"net::unix::datagram::split_owned::OwnedSendHalf","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6349},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680250,"byte_end":13680267,"line_start":51,"line_end":51,"column_start":44,"column_end":61},"name":"1","qualname":"::net::unix::datagram::split_owned::ReuniteError::1","value":"net::unix::datagram::split_owned::OwnedRecvHalf","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5859},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681377,"byte_end":13681384,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedRecvHalf>::reunite","value":"pub fn reunite(Self, OwnedSendHalf) -> Result<UnixDatagram, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UnixDatagram` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UnixDatagram` back together and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681104,"byte_end":13681178,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681183,"byte_end":13681249,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681254,"byte_end":13681306,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681311,"byte_end":13681314,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681319,"byte_end":13681365,"line_start":82,"line_end":82,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5860},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681545,"byte_end":13681554,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<OwnedRecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681493,"byte_end":13681527,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5864},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681750,"byte_end":13681754,"line_start":93,"line_end":93,"column_start":18,"column_end":22},"name":"recv","qualname":"<OwnedRecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681698,"byte_end":13681732,"line_start":92,"line_end":92,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5869},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682175,"byte_end":13682182,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedSendHalf>::reunite","value":"pub fn reunite(Self, OwnedRecvHalf) -> Result<UnixDatagram, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UnixDatagram` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UnixDatagram` back together and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681902,"byte_end":13681976,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681981,"byte_end":13682047,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682052,"byte_end":13682104,"line_start":101,"line_end":101,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682109,"byte_end":13682112,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682117,"byte_end":13682163,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5870},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682363,"byte_end":13682370,"line_start":109,"line_end":109,"column_start":18,"column_end":25},"name":"send_to","qualname":"<OwnedSendHalf>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682291,"byte_end":13682345,"line_start":108,"line_end":108,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5875},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682639,"byte_end":13682643,"line_start":117,"line_end":117,"column_start":18,"column_end":22},"name":"send","qualname":"<OwnedSendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682571,"byte_end":13682621,"line_start":116,"line_end":116,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5879},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682964,"byte_end":13682970,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSendHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the send half, but don't close the send half of the stream\n until the receive half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the send half, but don't close the send half of the stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682764,"byte_end":13682834,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ until the receive half is dropped. If the read half has already been","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682839,"byte_end":13682911,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13682916,"byte_end":13682952,"line_start":123,"line_end":123,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6352},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13683663,"byte_end":13683671,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":6354}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13683562,"byte_end":13683585,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13683603,"byte_end":13683651,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5926},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13684180,"byte_end":13684191,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13683851,"byte_end":13683926,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13683931,"byte_end":13683946,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13683951,"byte_end":13683954,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13683959,"byte_end":13684029,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13684034,"byte_end":13684109,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13684114,"byte_end":13684168,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6358},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686517,"byte_end":13686529,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":6359}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5984},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687028,"byte_end":13687032,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686613,"byte_end":13686674,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686679,"byte_end":13686682,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686687,"byte_end":13686699,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686704,"byte_end":13686707,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686712,"byte_end":13686772,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686777,"byte_end":13686780,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686785,"byte_end":13686855,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686860,"byte_end":13686933,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686938,"byte_end":13687016,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5986},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687876,"byte_end":13687884,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687261,"byte_end":13687328,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687333,"byte_end":13687380,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687385,"byte_end":13687388,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687393,"byte_end":13687463,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687468,"byte_end":13687522,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687527,"byte_end":13687530,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687535,"byte_end":13687547,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687552,"byte_end":13687555,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687560,"byte_end":13687620,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687625,"byte_end":13687628,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687633,"byte_end":13687703,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687708,"byte_end":13687781,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13687786,"byte_end":13687864,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5987},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688171,"byte_end":13688181,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688105,"byte_end":13688159,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5988},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688326,"byte_end":13688336,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688267,"byte_end":13688314,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5989},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688502,"byte_end":13688508,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688429,"byte_end":13688484,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5993},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688836,"byte_end":13688847,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<UnixListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(UnixStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688622,"byte_end":13688685,"line_start":107,"line_end":107,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688690,"byte_end":13688693,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688698,"byte_end":13688770,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13688775,"byte_end":13688824,"line_start":110,"line_end":110,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5995},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691177,"byte_end":13691185,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13689813,"byte_end":13689887,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13689892,"byte_end":13689895,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13689900,"byte_end":13689963,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13689968,"byte_end":13689971,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13689976,"byte_end":13690052,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690057,"byte_end":13690126,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690131,"byte_end":13690160,"line_start":147,"line_end":147,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690165,"byte_end":13690168,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690173,"byte_end":13690185,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690190,"byte_end":13690193,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690198,"byte_end":13690273,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690278,"byte_end":13690353,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690358,"byte_end":13690432,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690437,"byte_end":13690512,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690517,"byte_end":13690525,"line_start":155,"line_end":155,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690530,"byte_end":13690533,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690538,"byte_end":13690552,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690557,"byte_end":13690560,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690565,"byte_end":13690578,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690583,"byte_end":13690616,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690621,"byte_end":13690654,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690659,"byte_end":13690662,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690667,"byte_end":13690685,"line_start":163,"line_end":163,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690690,"byte_end":13690711,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690716,"byte_end":13690794,"line_start":165,"line_end":165,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690799,"byte_end":13690846,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690851,"byte_end":13690854,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690859,"byte_end":13690915,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690920,"byte_end":13690946,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690951,"byte_end":13690982,"line_start":170,"line_end":170,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13690987,"byte_end":13691031,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691036,"byte_end":13691053,"line_start":172,"line_end":172,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691058,"byte_end":13691111,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691116,"byte_end":13691129,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691134,"byte_end":13691143,"line_start":175,"line_end":175,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691148,"byte_end":13691153,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691158,"byte_end":13691165,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6360},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693656,"byte_end":13693664,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693235,"byte_end":13693300,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693301,"byte_end":13693304,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693305,"byte_end":13693393,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693394,"byte_end":13693471,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693472,"byte_end":13693475,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693476,"byte_end":13693506,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693507,"byte_end":13693541,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693542,"byte_end":13693593,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693594,"byte_end":13693627,"line_start":28,"line_end":28,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6367},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694374,"byte_end":13694383,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693687,"byte_end":13693753,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693754,"byte_end":13693757,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693758,"byte_end":13693844,"line_start":34,"line_end":34,"column_start":1,"column_end":87}},{"value":"/ shut down the UnixStream stream in the write direction.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693845,"byte_end":13693904,"line_start":35,"line_end":35,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693905,"byte_end":13693908,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693909,"byte_end":13693990,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13693991,"byte_end":13694076,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694077,"byte_end":13694080,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694081,"byte_end":13694111,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694112,"byte_end":13694146,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694147,"byte_end":13694194,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694195,"byte_end":13694257,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694258,"byte_end":13694311,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694312,"byte_end":13694345,"line_start":45,"line_end":45,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6374},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696683,"byte_end":13696696,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::unix::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":6375}],"decl_id":null,"docs":" Owned read half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696220,"byte_end":13696287,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696288,"byte_end":13696291,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696292,"byte_end":13696379,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696380,"byte_end":13696464,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696465,"byte_end":13696468,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696469,"byte_end":13696511,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696512,"byte_end":13696568,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696569,"byte_end":13696620,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696621,"byte_end":13696654,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6378},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697530,"byte_end":13697544,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::unix::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":6379},{"krate":0,"index":6380}],"decl_id":null,"docs":" Owned write half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696730,"byte_end":13696798,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696799,"byte_end":13696802,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696803,"byte_end":13696867,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ [`poll_shutdown`] will shut down the stream in the write direction.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696868,"byte_end":13696939,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ Dropping the write half will also shut down the write half of the stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13696940,"byte_end":13697017,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697018,"byte_end":13697021,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697022,"byte_end":13697102,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ found on the [`AsyncWriteExt`] trait. Examples import this trait through","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697103,"byte_end":13697179,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ [the prelude].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697180,"byte_end":13697198,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697199,"byte_end":13697202,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697203,"byte_end":13697245,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697246,"byte_end":13697302,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697303,"byte_end":13697350,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697351,"byte_end":13697413,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697414,"byte_end":13697467,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13697468,"byte_end":13697501,"line_start":51,"line_end":51,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6383},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698513,"byte_end":13698525,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698381,"byte_end":13698463,"line_start":84,"line_end":84,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698464,"byte_end":13698484,"line_start":85,"line_end":85,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":6385},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698526,"byte_end":13698543,"line_start":87,"line_end":87,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::split_owned::ReuniteError::0","value":"net::unix::split_owned::OwnedReadHalf","parent":{"krate":0,"index":6383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6386},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698545,"byte_end":13698563,"line_start":87,"line_end":87,"column_start":44,"column_end":62},"name":"1","qualname":"::net::unix::split_owned::ReuniteError::1","value":"net::unix::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":6383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6107},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699123,"byte_end":13699130,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698846,"byte_end":13698916,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698921,"byte_end":13698985,"line_start":102,"line_end":102,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698990,"byte_end":13699042,"line_start":103,"line_end":103,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699047,"byte_end":13699050,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699055,"byte_end":13699111,"line_start":105,"line_end":105,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6112},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699871,"byte_end":13699878,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699594,"byte_end":13699664,"line_start":126,"line_end":126,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699669,"byte_end":13699733,"line_start":127,"line_end":127,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699738,"byte_end":13699790,"line_start":128,"line_end":128,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699795,"byte_end":13699798,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699803,"byte_end":13699859,"line_start":130,"line_end":130,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6113},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13700184,"byte_end":13700190,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699985,"byte_end":13700057,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13700062,"byte_end":13700131,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13700136,"byte_end":13700172,"line_start":137,"line_end":137,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6389},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702280,"byte_end":13702290,"line_start":24,"line_end":24,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":6390}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":6225},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702612,"byte_end":13702619,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702370,"byte_end":13702413,"line_start":30,"line_end":30,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702418,"byte_end":13702421,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702426,"byte_end":13702497,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702502,"byte_end":13702578,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702583,"byte_end":13702594,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6230},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703504,"byte_end":13703512,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702895,"byte_end":13702960,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702965,"byte_end":13703010,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703015,"byte_end":13703018,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703023,"byte_end":13703091,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703096,"byte_end":13703150,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703155,"byte_end":13703158,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703163,"byte_end":13703175,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703180,"byte_end":13703183,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703188,"byte_end":13703248,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703253,"byte_end":13703256,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703261,"byte_end":13703331,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703336,"byte_end":13703409,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703414,"byte_end":13703492,"line_start":58,"line_end":58,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":6231},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703996,"byte_end":13704000,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703716,"byte_end":13703765,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703770,"byte_end":13703773,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703778,"byte_end":13703849,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703854,"byte_end":13703924,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13703929,"byte_end":13703984,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6233},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13704441,"byte_end":13704451,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13704361,"byte_end":13704429,"line_start":84,"line_end":84,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6234},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13704618,"byte_end":13704627,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13704537,"byte_end":13704606,"line_start":89,"line_end":89,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6235},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13704806,"byte_end":13704815,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13704712,"byte_end":13704794,"line_start":94,"line_end":94,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":6236},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13704951,"byte_end":13704961,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13704892,"byte_end":13704939,"line_start":99,"line_end":99,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":6237},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705335,"byte_end":13705343,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705054,"byte_end":13705120,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705125,"byte_end":13705128,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705133,"byte_end":13705201,"line_start":106,"line_end":106,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705206,"byte_end":13705276,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705281,"byte_end":13705323,"line_start":108,"line_end":108,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":6238},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705946,"byte_end":13705951,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705574,"byte_end":13705610,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705615,"byte_end":13705692,"line_start":116,"line_end":116,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705697,"byte_end":13705743,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705748,"byte_end":13705751,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705756,"byte_end":13705835,"line_start":119,"line_end":119,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705840,"byte_end":13705883,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705888,"byte_end":13705891,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: Self::into_split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13705896,"byte_end":13705934,"line_start":122,"line_end":122,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6240},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706583,"byte_end":13706593,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706036,"byte_end":13706114,"line_start":127,"line_end":127,"column_start":5,"column_end":83}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706119,"byte_end":13706165,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706170,"byte_end":13706173,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706178,"byte_end":13706256,"line_start":130,"line_end":130,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706261,"byte_end":13706309,"line_start":131,"line_end":131,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706314,"byte_end":13706317,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706322,"byte_end":13706396,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `UnixStream`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706401,"byte_end":13706483,"line_start":134,"line_end":134,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706488,"byte_end":13706491,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`split`]: Self::split()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706496,"byte_end":13706524,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/ [`shutdown(Write)`]: fn@Self::shutdown","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706529,"byte_end":13706571,"line_start":137,"line_end":137,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6391},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":13710177,"byte_end":13710182,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":6392},{"krate":0,"index":6393}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":13710086,"byte_end":13710114,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":6392},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":13710230,"byte_end":13710233,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":6391},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":13710189,"byte_end":13710221,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6393},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":13710288,"byte_end":13710291,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":6391},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":13710246,"byte_end":13710279,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":810},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93907,"byte_end":93913,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93844,"byte_end":93897,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":811},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93966,"byte_end":93971,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93928,"byte_end":93956,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":822},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":6538},{"krate":0,"index":6539},{"krate":0,"index":6542},{"krate":0,"index":6545},{"krate":0,"index":6548}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":105933,"byte_end":105951,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":105953,"byte_end":106000,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106001,"byte_end":106004,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106005,"byte_end":106081,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106082,"byte_end":106159,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106160,"byte_end":106212,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106213,"byte_end":106216,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106217,"byte_end":106224,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106225,"byte_end":106250,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106251,"byte_end":106277,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106278,"byte_end":106285,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106286,"byte_end":106289,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106290,"byte_end":106364,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":6551},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","parent":null,"children":[{"krate":0,"index":6552},{"krate":0,"index":6781},{"krate":0,"index":6790},{"krate":0,"index":6791},{"krate":0,"index":6794},{"krate":0,"index":6797},{"krate":0,"index":6800},{"krate":0,"index":6803},{"krate":0,"index":6806},{"krate":0,"index":6809},{"krate":0,"index":6812},{"krate":0,"index":6815},{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":6822},{"krate":0,"index":6825},{"krate":0,"index":6828},{"krate":0,"index":6831},{"krate":0,"index":6834},{"krate":0,"index":6986},{"krate":0,"index":6989},{"krate":0,"index":6837},{"krate":0,"index":6842},{"krate":0,"index":6884},{"krate":0,"index":6991},{"krate":0,"index":6995},{"krate":0,"index":6886},{"krate":0,"index":6889},{"krate":0,"index":6892},{"krate":0,"index":6998},{"krate":0,"index":7003},{"krate":0,"index":6898},{"krate":0,"index":6914},{"krate":0,"index":7005},{"krate":0,"index":7007},{"krate":0,"index":7009},{"krate":0,"index":7011},{"krate":0,"index":7013},{"krate":0,"index":7015},{"krate":0,"index":6917},{"krate":0,"index":6921},{"krate":0,"index":6924},{"krate":0,"index":6927}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":20620,"byte_end":20647,"line_start":199,"line_end":199,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":20723,"byte_end":20740,"line_start":201,"line_end":201,"column_start":13,"column_end":30}},{"value":"/ An implementation of asynchronous process management for Tokio.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13715758,"byte_end":13715825,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13715826,"byte_end":13715829,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13715830,"byte_end":13715910,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13715911,"byte_end":13716008,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716009,"byte_end":13716100,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716101,"byte_end":13716197,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716198,"byte_end":13716281,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716282,"byte_end":13716285,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716286,"byte_end":13716338,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716339,"byte_end":13716342,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716343,"byte_end":13716357,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716358,"byte_end":13716361,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716362,"byte_end":13716441,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ for it complete.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716442,"byte_end":13716462,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716463,"byte_end":13716466,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716467,"byte_end":13716480,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716481,"byte_end":13716513,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716514,"byte_end":13716517,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716518,"byte_end":13716536,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716537,"byte_end":13716600,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/     // The usage is the same as with the standard library's `Command` type, however the value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716601,"byte_end":13716698,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/     // returned from `spawn` is a `Result` containing a `Future`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716699,"byte_end":13716768,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/     let child = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716769,"byte_end":13716835,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/                         .spawn();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716836,"byte_end":13716873,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716874,"byte_end":13716877,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // Make sure our child succeeded in spawning and process the result","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716878,"byte_end":13716953,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/     let future = child.expect(\"failed to spawn\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13716954,"byte_end":13717007,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717008,"byte_end":13717011,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     // Await until the future (and the command) completes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717012,"byte_end":13717073,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/     let status = future.await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717074,"byte_end":13717109,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/     println!(\"the command exited with: {}\", status);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717110,"byte_end":13717166,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717167,"byte_end":13717181,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717182,"byte_end":13717187,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717188,"byte_end":13717195,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717196,"byte_end":13717199,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717200,"byte_end":13717277,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ world` but we also capture its output.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717278,"byte_end":13717320,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717321,"byte_end":13717324,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717325,"byte_end":13717338,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717339,"byte_end":13717371,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717372,"byte_end":13717375,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717376,"byte_end":13717394,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717395,"byte_end":13717458,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/     // Like above, but use `output` which returns a future instead of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717459,"byte_end":13717532,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/     // immediately returning the `Child`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717533,"byte_end":13717578,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717579,"byte_end":13717646,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/                         .output();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717647,"byte_end":13717685,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717686,"byte_end":13717689,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     let output = output.await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717690,"byte_end":13717725,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717726,"byte_end":13717729,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert!(output.status.success());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717730,"byte_end":13717771,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717772,"byte_end":13717824,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717825,"byte_end":13717839,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717840,"byte_end":13717845,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717846,"byte_end":13717853,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717854,"byte_end":13717857,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ We can also read input line by line.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717858,"byte_end":13717898,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717899,"byte_end":13717902,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717903,"byte_end":13717916,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717917,"byte_end":13717965,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717966,"byte_end":13717998,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13717999,"byte_end":13718002,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718003,"byte_end":13718031,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718032,"byte_end":13718035,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718036,"byte_end":13718054,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718055,"byte_end":13718118,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/     let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718119,"byte_end":13718161,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718162,"byte_end":13718165,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718166,"byte_end":13718245,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/     // By default, standard input/output/error will be inherited from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718246,"byte_end":13718323,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/     // current process (for example, this means that standard input will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718324,"byte_end":13718400,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718401,"byte_end":13718480,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/     // the terminal if this process is invoked from the command line).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718481,"byte_end":13718555,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/     cmd.stdout(Stdio::piped());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718556,"byte_end":13718591,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718592,"byte_end":13718595,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut child = cmd.spawn()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718596,"byte_end":13718631,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/         .expect(\"failed to spawn command\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718632,"byte_end":13718679,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718680,"byte_end":13718683,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     let stdout = child.stdout.take()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718684,"byte_end":13718724,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718725,"byte_end":13718786,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718787,"byte_end":13718790,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718791,"byte_end":13718847,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718848,"byte_end":13718851,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718852,"byte_end":13718923,"line_start":84,"line_end":84,"column_start":1,"column_end":72}},{"value":"/     // make progress on its own while we await for any output.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718924,"byte_end":13718990,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/     tokio::spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13718991,"byte_end":13719019,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/         let status = child.await","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719020,"byte_end":13719056,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/             .expect(\"child process encountered an error\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719057,"byte_end":13719119,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719120,"byte_end":13719123,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/         println!(\"child status was: {}\", status);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719124,"byte_end":13719177,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719178,"byte_end":13719189,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719190,"byte_end":13719193,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     while let Some(line) = reader.next_line().await? {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719194,"byte_end":13719252,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/         println!(\"Line: {}\", line);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719253,"byte_end":13719292,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719293,"byte_end":13719302,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719303,"byte_end":13719306,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719307,"byte_end":13719321,"line_start":97,"line_end":97,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719322,"byte_end":13719327,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719328,"byte_end":13719335,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719336,"byte_end":13719339,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719340,"byte_end":13719353,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719354,"byte_end":13719357,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719358,"byte_end":13719433,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719434,"byte_end":13719507,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719508,"byte_end":13719588,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719589,"byte_end":13719592,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719593,"byte_end":13719667,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719668,"byte_end":13719742,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719743,"byte_end":13719758,"line_start":109,"line_end":109,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719759,"byte_end":13719762,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13719763,"byte_end":13719803,"line_start":111,"line_end":111,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6986},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720824,"byte_end":13720831,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":6987},{"krate":0,"index":6988}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720312,"byte_end":13720409,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720410,"byte_end":13720502,"line_start":140,"line_end":140,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720503,"byte_end":13720589,"line_start":141,"line_end":141,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720590,"byte_end":13720620,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720621,"byte_end":13720624,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720625,"byte_end":13720710,"line_start":144,"line_end":144,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720711,"byte_end":13720714,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720715,"byte_end":13720767,"line_start":146,"line_end":146,"column_start":1,"column_end":53}},{"value":"/ [`Child`]: struct@Child","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13720768,"byte_end":13720795,"line_start":147,"line_end":147,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6843},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722181,"byte_end":13722184,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721072,"byte_end":13721131,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721136,"byte_end":13721197,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721202,"byte_end":13721205,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721210,"byte_end":13721243,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721248,"byte_end":13721295,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721300,"byte_end":13721353,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721358,"byte_end":13721446,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721451,"byte_end":13721454,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721459,"byte_end":13721520,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721525,"byte_end":13721561,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721566,"byte_end":13721569,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721574,"byte_end":13721646,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721651,"byte_end":13721673,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721678,"byte_end":13721681,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721686,"byte_end":13721749,"line_start":176,"line_end":176,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721754,"byte_end":13721801,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721806,"byte_end":13721865,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"/ (see issue [rust-lang/rust#37519]).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721870,"byte_end":13721909,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721914,"byte_end":13721917,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721922,"byte_end":13721936,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721941,"byte_end":13721944,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721949,"byte_end":13721965,"line_start":183,"line_end":183,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721970,"byte_end":13721973,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721978,"byte_end":13721991,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721996,"byte_end":13722028,"line_start":186,"line_end":186,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722033,"byte_end":13722070,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722075,"byte_end":13722082,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722087,"byte_end":13722090,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [rust-lang/rust#37519]: https://github.com/rust-lang/rust/issues/37519","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722095,"byte_end":13722169,"line_start":190,"line_end":190,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":6845},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723031,"byte_end":13723034,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722283,"byte_end":13722327,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722332,"byte_end":13722335,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722340,"byte_end":13722399,"line_start":197,"line_end":197,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722404,"byte_end":13722407,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722412,"byte_end":13722425,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722430,"byte_end":13722468,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722473,"byte_end":13722504,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722509,"byte_end":13722516,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722521,"byte_end":13722524,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722529,"byte_end":13722548,"line_start":204,"line_end":204,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722553,"byte_end":13722556,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722561,"byte_end":13722574,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722579,"byte_end":13722617,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722622,"byte_end":13722638,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722643,"byte_end":13722671,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722676,"byte_end":13722683,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722688,"byte_end":13722691,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722696,"byte_end":13722740,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722745,"byte_end":13722748,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`args`]: method@Self::args","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722753,"byte_end":13722784,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722789,"byte_end":13722792,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722797,"byte_end":13722811,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722816,"byte_end":13722819,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722824,"byte_end":13722840,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722845,"byte_end":13722848,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722853,"byte_end":13722866,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722871,"byte_end":13722903,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722908,"byte_end":13722911,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722916,"byte_end":13722952,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722957,"byte_end":13722979,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13722984,"byte_end":13723007,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723012,"byte_end":13723019,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6847},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723518,"byte_end":13723522,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723140,"byte_end":13723191,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723196,"byte_end":13723199,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723204,"byte_end":13723246,"line_start":234,"line_end":234,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723251,"byte_end":13723254,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: method@Self::arg","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723259,"byte_end":13723288,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723293,"byte_end":13723296,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723301,"byte_end":13723315,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723320,"byte_end":13723323,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723328,"byte_end":13723344,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723349,"byte_end":13723352,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723357,"byte_end":13723370,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723375,"byte_end":13723407,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723412,"byte_end":13723415,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723420,"byte_end":13723456,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723461,"byte_end":13723494,"line_start":246,"line_end":246,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723499,"byte_end":13723506,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6850},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724138,"byte_end":13724141,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723694,"byte_end":13723749,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723754,"byte_end":13723757,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723762,"byte_end":13723857,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723862,"byte_end":13723908,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723913,"byte_end":13723916,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723921,"byte_end":13723935,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723940,"byte_end":13723943,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723948,"byte_end":13723964,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723969,"byte_end":13723972,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723977,"byte_end":13723990,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13723995,"byte_end":13724027,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724032,"byte_end":13724035,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724040,"byte_end":13724076,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724081,"byte_end":13724114,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724119,"byte_end":13724126,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6853},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725015,"byte_end":13725019,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724313,"byte_end":13724372,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724377,"byte_end":13724380,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724385,"byte_end":13724399,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724404,"byte_end":13724407,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724412,"byte_end":13724428,"line_start":285,"line_end":285,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724433,"byte_end":13724436,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724441,"byte_end":13724454,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724459,"byte_end":13724491,"line_start":288,"line_end":288,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724496,"byte_end":13724526,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724531,"byte_end":13724548,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724553,"byte_end":13724587,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724592,"byte_end":13724595,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724600,"byte_end":13724648,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724653,"byte_end":13724693,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724698,"byte_end":13724764,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724769,"byte_end":13724789,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724794,"byte_end":13724797,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724802,"byte_end":13724844,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724849,"byte_end":13724882,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724887,"byte_end":13724924,"line_start":300,"line_end":300,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724929,"byte_end":13724953,"line_start":301,"line_end":301,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724958,"byte_end":13724991,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13724996,"byte_end":13725003,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6857},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725497,"byte_end":13725507,"line_start":326,"line_end":326,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725224,"byte_end":13725268,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725273,"byte_end":13725276,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725281,"byte_end":13725295,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725300,"byte_end":13725303,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725308,"byte_end":13725324,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725329,"byte_end":13725332,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725337,"byte_end":13725350,"line_start":320,"line_end":320,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725355,"byte_end":13725387,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725392,"byte_end":13725395,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725400,"byte_end":13725436,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725441,"byte_end":13725473,"line_start":324,"line_end":324,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725478,"byte_end":13725485,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6859},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725902,"byte_end":13725911,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725620,"byte_end":13725680,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725685,"byte_end":13725688,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725693,"byte_end":13725707,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725712,"byte_end":13725715,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725720,"byte_end":13725736,"line_start":335,"line_end":335,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725741,"byte_end":13725744,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725749,"byte_end":13725762,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725767,"byte_end":13725799,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725804,"byte_end":13725807,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725812,"byte_end":13725848,"line_start":340,"line_end":340,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725853,"byte_end":13725878,"line_start":341,"line_end":341,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725883,"byte_end":13725890,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6860},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726756,"byte_end":13726767,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13725995,"byte_end":13726048,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726053,"byte_end":13726056,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726061,"byte_end":13726093,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726098,"byte_end":13726101,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726106,"byte_end":13726181,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726186,"byte_end":13726255,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726260,"byte_end":13726332,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726337,"byte_end":13726400,"line_start":355,"line_end":355,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726405,"byte_end":13726466,"line_start":356,"line_end":356,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726471,"byte_end":13726474,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726479,"byte_end":13726526,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726531,"byte_end":13726534,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726539,"byte_end":13726553,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726558,"byte_end":13726561,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726566,"byte_end":13726582,"line_start":362,"line_end":362,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726587,"byte_end":13726590,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726595,"byte_end":13726608,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726613,"byte_end":13726645,"line_start":365,"line_end":365,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726650,"byte_end":13726653,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726658,"byte_end":13726694,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726699,"byte_end":13726732,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726737,"byte_end":13726744,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6862},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727462,"byte_end":13727467,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726880,"byte_end":13726957,"line_start":375,"line_end":375,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726962,"byte_end":13726965,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13726970,"byte_end":13727037,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727042,"byte_end":13727092,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727097,"byte_end":13727100,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727105,"byte_end":13727150,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727155,"byte_end":13727196,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727201,"byte_end":13727204,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727209,"byte_end":13727223,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727228,"byte_end":13727231,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727236,"byte_end":13727252,"line_start":385,"line_end":385,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727257,"byte_end":13727260,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727265,"byte_end":13727278,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727283,"byte_end":13727313,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727318,"byte_end":13727350,"line_start":389,"line_end":389,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727355,"byte_end":13727358,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727363,"byte_end":13727399,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727404,"byte_end":13727438,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727443,"byte_end":13727450,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6864},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728158,"byte_end":13728164,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727574,"byte_end":13727653,"line_start":399,"line_end":399,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727658,"byte_end":13727661,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727666,"byte_end":13727733,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727738,"byte_end":13727788,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727793,"byte_end":13727796,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727801,"byte_end":13727846,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727851,"byte_end":13727892,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727897,"byte_end":13727900,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727905,"byte_end":13727919,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727924,"byte_end":13727927,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727932,"byte_end":13727948,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727953,"byte_end":13727956,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727961,"byte_end":13727974,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13727979,"byte_end":13728012,"line_start":412,"line_end":412,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728017,"byte_end":13728045,"line_start":413,"line_end":413,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728050,"byte_end":13728053,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728058,"byte_end":13728094,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728099,"byte_end":13728134,"line_start":416,"line_end":416,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728139,"byte_end":13728146,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6866},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728857,"byte_end":13728863,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728272,"byte_end":13728350,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728355,"byte_end":13728358,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728363,"byte_end":13728430,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728435,"byte_end":13728485,"line_start":426,"line_end":426,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728490,"byte_end":13728493,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728498,"byte_end":13728543,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728548,"byte_end":13728589,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728594,"byte_end":13728597,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728602,"byte_end":13728616,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728621,"byte_end":13728624,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728629,"byte_end":13728645,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728650,"byte_end":13728653,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728658,"byte_end":13728671,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728676,"byte_end":13728709,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728714,"byte_end":13728744,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728749,"byte_end":13728752,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728757,"byte_end":13728793,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728798,"byte_end":13728833,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728838,"byte_end":13728845,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6868},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13729316,"byte_end":13729328,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13728971,"byte_end":13729047,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13729052,"byte_end":13729113,"line_start":448,"line_end":448,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13729118,"byte_end":13729121,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13729126,"byte_end":13729203,"line_start":450,"line_end":450,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13729208,"byte_end":13729287,"line_start":451,"line_end":451,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13729292,"byte_end":13729304,"line_start":452,"line_end":452,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6869},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730045,"byte_end":13730048,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"uid","qualname":"<Command>::uid","value":"pub fn uid(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the child process's user ID. This translates to a\n `setuid` call in the child process. Failure in the `setuid`\n call will cause the spawn to fail.\n","sig":null,"attributes":[{"value":"/ Sets the child process's user ID. This translates to a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13729847,"byte_end":13729905,"line_start":469,"line_end":469,"column_start":5,"column_end":63}},{"value":"/ `setuid` call in the child process. Failure in the `setuid`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13729910,"byte_end":13729973,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ call will cause the spawn to fail.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13729978,"byte_end":13730016,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"cfg(unix)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730021,"byte_end":13730033,"line_start":472,"line_end":472,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6870},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730286,"byte_end":13730289,"line_start":481,"line_end":481,"column_start":12,"column_end":15},"name":"gid","qualname":"<Command>::gid","value":"pub fn gid(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Similar to `uid` but sets the group ID of the child process. This has\n the same semantics as the `uid` field.\n","sig":null,"attributes":[{"value":"/ Similar to `uid` but sets the group ID of the child process. This has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730137,"byte_end":13730210,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ the same semantics as the `uid` field.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730215,"byte_end":13730257,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"cfg(unix)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730262,"byte_end":13730274,"line_start":480,"line_end":480,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6871},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731943,"byte_end":13731951,"line_start":516,"line_end":516,"column_start":19,"column_end":27},"name":"pre_exec","qualname":"<Command>::pre_exec","value":"pub unsafe fn pre_exec<F>(&mut Self, F) -> &mut Command where F: FnMut() ->\nio::Result<()> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Schedules a closure to be run just before the `exec` function is\n invoked.","sig":null,"attributes":[{"value":"/ Schedules a closure to be run just before the `exec` function is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730378,"byte_end":13730446,"line_start":486,"line_end":486,"column_start":5,"column_end":73}},{"value":"/ invoked.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730451,"byte_end":13730463,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730468,"byte_end":13730471,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ The closure is allowed to return an I/O error whose OS error code will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730476,"byte_end":13730550,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ be communicated back to the parent and returned as an error from when","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730555,"byte_end":13730628,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ the spawn was requested.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730633,"byte_end":13730661,"line_start":491,"line_end":491,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730666,"byte_end":13730669,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Multiple closures can be registered and they will be called in order of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730674,"byte_end":13730749,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ their registration. If a closure returns `Err` then no further closures","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730754,"byte_end":13730829,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ will be called and the spawn operation will immediately return with a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730834,"byte_end":13730907,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ failure.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730912,"byte_end":13730924,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730929,"byte_end":13730932,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730937,"byte_end":13730949,"line_start":498,"line_end":498,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730954,"byte_end":13730957,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This closure will be run in the context of the child process after a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13730962,"byte_end":13731034,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ `fork`. This primarily means that any modifications made to memory on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731039,"byte_end":13731112,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ behalf of this closure will **not** be visible to the parent process.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731117,"byte_end":13731190,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ This is often a very constrained environment where normal operations","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731195,"byte_end":13731267,"line_start":503,"line_end":503,"column_start":5,"column_end":77}},{"value":"/ like `malloc` or acquiring a mutex are not guaranteed to work (due to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731272,"byte_end":13731345,"line_start":504,"line_end":504,"column_start":5,"column_end":78}},{"value":"/ other threads perhaps still running when the `fork` was run).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731350,"byte_end":13731415,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731420,"byte_end":13731423,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This also means that all resources such as file descriptors and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731428,"byte_end":13731495,"line_start":507,"line_end":507,"column_start":5,"column_end":72}},{"value":"/ memory-mapped regions got duplicated. It is your responsibility to make","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731500,"byte_end":13731575,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ sure that the closure does not violate library invariants by making","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731580,"byte_end":13731651,"line_start":509,"line_end":509,"column_start":5,"column_end":76}},{"value":"/ invalid use of these duplicates.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731656,"byte_end":13731692,"line_start":510,"line_end":510,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731697,"byte_end":13731700,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ When this closure is run, aspects such as the stdio file descriptors and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731705,"byte_end":13731781,"line_start":512,"line_end":512,"column_start":5,"column_end":81}},{"value":"/ working directory have successfully been changed, so output to these","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731786,"byte_end":13731858,"line_start":513,"line_end":513,"column_start":5,"column_end":77}},{"value":"/ locations may not appear where intended.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731863,"byte_end":13731907,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"cfg(unix)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13731912,"byte_end":13731924,"line_start":515,"line_end":515,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6873},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733590,"byte_end":13733595,"line_start":562,"line_end":562,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732120,"byte_end":13732190,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732195,"byte_end":13732198,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732203,"byte_end":13732274,"line_start":526,"line_end":526,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732279,"byte_end":13732282,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732287,"byte_end":13732358,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732363,"byte_end":13732438,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732443,"byte_end":13732518,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732523,"byte_end":13732595,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732600,"byte_end":13732619,"line_start":532,"line_end":532,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732624,"byte_end":13732627,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732632,"byte_end":13732703,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732708,"byte_end":13732723,"line_start":535,"line_end":535,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732728,"byte_end":13732731,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732736,"byte_end":13732749,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732754,"byte_end":13732757,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732762,"byte_end":13732837,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, the spawned process will, by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732842,"byte_end":13732917,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13732922,"byte_end":13733002,"line_start":541,"line_end":541,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733007,"byte_end":13733010,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733015,"byte_end":13733089,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733094,"byte_end":13733168,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733173,"byte_end":13733188,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733193,"byte_end":13733196,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733201,"byte_end":13733215,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733220,"byte_end":13733223,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733228,"byte_end":13733244,"line_start":549,"line_end":549,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733249,"byte_end":13733252,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733257,"byte_end":13733270,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733275,"byte_end":13733307,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733312,"byte_end":13733315,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733320,"byte_end":13733371,"line_start":554,"line_end":554,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733376,"byte_end":13733402,"line_start":555,"line_end":555,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733407,"byte_end":13733427,"line_start":556,"line_end":556,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733432,"byte_end":13733481,"line_start":557,"line_end":557,"column_start":5,"column_end":54}},{"value":"/         .await","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733486,"byte_end":13733504,"line_start":558,"line_end":558,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733509,"byte_end":13733556,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733561,"byte_end":13733566,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13733571,"byte_end":13733578,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6878},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735153,"byte_end":13735159,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734092,"byte_end":13734165,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734170,"byte_end":13734201,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734206,"byte_end":13734209,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734214,"byte_end":13734285,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734290,"byte_end":13734369,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734374,"byte_end":13734412,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734417,"byte_end":13734420,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734425,"byte_end":13734496,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734501,"byte_end":13734516,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734521,"byte_end":13734524,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734529,"byte_end":13734591,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734596,"byte_end":13734644,"line_start":585,"line_end":585,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734649,"byte_end":13734652,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734657,"byte_end":13734669,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734674,"byte_end":13734677,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734682,"byte_end":13734757,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734762,"byte_end":13734816,"line_start":590,"line_end":590,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734821,"byte_end":13734824,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734829,"byte_end":13734843,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734848,"byte_end":13734851,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734856,"byte_end":13734872,"line_start":594,"line_end":594,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734877,"byte_end":13734880,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734885,"byte_end":13734898,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734903,"byte_end":13734935,"line_start":597,"line_end":597,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734940,"byte_end":13734943,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13734948,"byte_end":13734999,"line_start":599,"line_end":599,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735004,"byte_end":13735030,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735035,"byte_end":13735056,"line_start":601,"line_end":601,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735061,"byte_end":13735079,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735084,"byte_end":13735131,"line_start":603,"line_end":603,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735136,"byte_end":13735141,"line_start":604,"line_end":604,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":6881},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13737048,"byte_end":13737054,"line_start":657,"line_end":657,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735634,"byte_end":13735707,"line_start":622,"line_end":622,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735712,"byte_end":13735745,"line_start":623,"line_end":623,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735750,"byte_end":13735753,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735758,"byte_end":13735820,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735825,"byte_end":13735900,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735905,"byte_end":13735979,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13735984,"byte_end":13736047,"line_start":628,"line_end":628,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736052,"byte_end":13736093,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736098,"byte_end":13736101,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736106,"byte_end":13736177,"line_start":631,"line_end":631,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736182,"byte_end":13736235,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736240,"byte_end":13736310,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736315,"byte_end":13736388,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736393,"byte_end":13736412,"line_start":635,"line_end":635,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736417,"byte_end":13736420,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736425,"byte_end":13736496,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736501,"byte_end":13736516,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736521,"byte_end":13736524,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736529,"byte_end":13736591,"line_start":640,"line_end":640,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736596,"byte_end":13736644,"line_start":641,"line_end":641,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736649,"byte_end":13736652,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736657,"byte_end":13736671,"line_start":643,"line_end":643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736676,"byte_end":13736679,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736684,"byte_end":13736700,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736705,"byte_end":13736708,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736713,"byte_end":13736726,"line_start":647,"line_end":647,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736731,"byte_end":13736763,"line_start":648,"line_end":648,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736768,"byte_end":13736771,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736776,"byte_end":13736799,"line_start":650,"line_end":650,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736804,"byte_end":13736865,"line_start":651,"line_end":651,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736870,"byte_end":13736891,"line_start":652,"line_end":652,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736896,"byte_end":13736914,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736919,"byte_end":13736967,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13736972,"byte_end":13737026,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13737031,"byte_end":13737036,"line_start":656,"line_end":656,"column_start":5,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":6998},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739403,"byte_end":13739408,"line_start":744,"line_end":744,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":6999},{"krate":0,"index":7000},{"krate":0,"index":7001},{"krate":0,"index":7002}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738625,"byte_end":13738690,"line_start":728,"line_end":728,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738691,"byte_end":13738694,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ This type is also a future which will yield the `ExitStatus` of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738695,"byte_end":13738766,"line_start":730,"line_end":730,"column_start":1,"column_end":72}},{"value":"/ underlying child process. A `Child` here also provides access to information","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738767,"byte_end":13738847,"line_start":731,"line_end":731,"column_start":1,"column_end":81}},{"value":"/ like the OS-assigned identifier and the stdio streams.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738848,"byte_end":13738906,"line_start":732,"line_end":732,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738907,"byte_end":13738910,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738911,"byte_end":13738924,"line_start":734,"line_end":734,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738925,"byte_end":13739000,"line_start":735,"line_end":735,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739001,"byte_end":13739074,"line_start":736,"line_end":736,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739075,"byte_end":13739155,"line_start":737,"line_end":737,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739156,"byte_end":13739159,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739160,"byte_end":13739234,"line_start":739,"line_end":739,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739235,"byte_end":13739309,"line_start":740,"line_end":740,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739310,"byte_end":13739325,"line_start":741,"line_end":741,"column_start":1,"column_end":16}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739326,"byte_end":13739374,"line_start":742,"line_end":742,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":7000},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739562,"byte_end":13739567,"line_start":749,"line_end":749,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":6998},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739455,"byte_end":13739530,"line_start":747,"line_end":747,"column_start":5,"column_end":80}},{"value":"/ been captured.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739535,"byte_end":13739553,"line_start":748,"line_end":748,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":7001},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739705,"byte_end":13739711,"line_start":753,"line_end":753,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":6998},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739594,"byte_end":13739669,"line_start":751,"line_end":751,"column_start":5,"column_end":80}},{"value":"/ has been captured.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739674,"byte_end":13739696,"line_start":752,"line_end":752,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7002},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739849,"byte_end":13739855,"line_start":757,"line_end":757,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":6998},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739739,"byte_end":13739813,"line_start":755,"line_end":755,"column_start":5,"column_end":79}},{"value":"/ has been captured.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739818,"byte_end":13739840,"line_start":756,"line_end":756,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":6899},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739984,"byte_end":13739986,"line_start":762,"line_end":762,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.\n","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739898,"byte_end":13739972,"line_start":761,"line_end":761,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":6900},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741180,"byte_end":13741184,"line_start":795,"line_end":795,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"pub fn kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740044,"byte_end":13740073,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740078,"byte_end":13740081,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740086,"byte_end":13740148,"line_start":768,"line_end":768,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740153,"byte_end":13740156,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ If the child has to be killed remotely, it is possible to do it using","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740161,"byte_end":13740234,"line_start":770,"line_end":770,"column_start":5,"column_end":78}},{"value":"/ a combination of the select! macro and a oneshot channel. In the following","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740239,"byte_end":13740317,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ example, the child will run until completion unless a message is sent on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740322,"byte_end":13740398,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ the oneshot channel. If that happens, the child is killed immediately","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740403,"byte_end":13740476,"line_start":773,"line_end":773,"column_start":5,"column_end":78}},{"value":"/ using the `.kill()` method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740481,"byte_end":13740512,"line_start":774,"line_end":774,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740517,"byte_end":13740520,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740525,"byte_end":13740538,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740543,"byte_end":13740575,"line_start":777,"line_end":777,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::oneshot::channel;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740580,"byte_end":13740618,"line_start":778,"line_end":778,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740623,"byte_end":13740626,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740631,"byte_end":13740649,"line_start":780,"line_end":780,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740654,"byte_end":13740675,"line_start":781,"line_end":781,"column_start":5,"column_end":26}},{"value":"/     let (send, recv) = channel::<()>();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740680,"byte_end":13740723,"line_start":782,"line_end":782,"column_start":5,"column_end":48}},{"value":"/     let mut child = Command::new(\"sleep\").arg(\"1\").spawn().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740728,"byte_end":13740800,"line_start":783,"line_end":783,"column_start":5,"column_end":77}},{"value":"/     tokio::spawn(async move { send.send(()) });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740805,"byte_end":13740856,"line_start":784,"line_end":784,"column_start":5,"column_end":56}},{"value":"/     tokio::select! {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740861,"byte_end":13740885,"line_start":785,"line_end":785,"column_start":5,"column_end":29}},{"value":"/         _ = &mut child => {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740890,"byte_end":13740922,"line_start":786,"line_end":786,"column_start":5,"column_end":37}},{"value":"/         _ = recv => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740927,"byte_end":13740952,"line_start":787,"line_end":787,"column_start":5,"column_end":30}},{"value":"/             &mut child.kill();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740957,"byte_end":13740991,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/             // NB: await the child here to avoid a zombie process on Unix platforms","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13740996,"byte_end":13741083,"line_start":789,"line_end":789,"column_start":5,"column_end":92}},{"value":"/             child.await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741088,"byte_end":13741125,"line_start":790,"line_end":790,"column_start":5,"column_end":42}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741130,"byte_end":13741143,"line_start":791,"line_end":791,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741148,"byte_end":13741157,"line_start":792,"line_end":792,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741162,"byte_end":13741167,"line_start":793,"line_end":793,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":6901},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741340,"byte_end":13741345,"line_start":801,"line_end":801,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Child>::stdin","value":"pub fn stdin(&mut Self) -> &mut Option<ChildStdin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdin` instead\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741272,"byte_end":13741328,"line_start":800,"line_end":800,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6902},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741509,"byte_end":13741515,"line_start":807,"line_end":807,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Child>::stdout","value":"pub fn stdout(&mut Self) -> &mut Option<ChildStdout>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdout` instead\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741440,"byte_end":13741497,"line_start":806,"line_end":806,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6903},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741681,"byte_end":13741687,"line_start":813,"line_end":813,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Child>::stderr","value":"pub fn stderr(&mut Self) -> &mut Option<ChildStderr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stderr` instead\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741612,"byte_end":13741669,"line_start":812,"line_end":812,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6904},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742695,"byte_end":13742711,"line_start":833,"line_end":833,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"pub async fn wait_with_output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741765,"byte_end":13741839,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741844,"byte_end":13741896,"line_start":818,"line_end":818,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741901,"byte_end":13741904,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741909,"byte_end":13741984,"line_start":820,"line_end":820,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13741989,"byte_end":13742064,"line_start":821,"line_end":821,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742069,"byte_end":13742091,"line_start":822,"line_end":822,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742096,"byte_end":13742099,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742104,"byte_end":13742176,"line_start":824,"line_end":824,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742181,"byte_end":13742255,"line_start":825,"line_end":825,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742260,"byte_end":13742335,"line_start":826,"line_end":826,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742340,"byte_end":13742358,"line_start":827,"line_end":827,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742363,"byte_end":13742366,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742371,"byte_end":13742445,"line_start":829,"line_end":829,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742450,"byte_end":13742526,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742531,"byte_end":13742602,"line_start":831,"line_end":831,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13742607,"byte_end":13742677,"line_start":832,"line_end":832,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":7005},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743825,"byte_end":13743835,"line_start":871,"line_end":871,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":7006}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743611,"byte_end":13743662,"line_start":866,"line_end":866,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743663,"byte_end":13743666,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743667,"byte_end":13743750,"line_start":868,"line_end":868,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743751,"byte_end":13743796,"line_start":869,"line_end":869,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":7009},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744076,"byte_end":13744087,"line_start":880,"line_end":880,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":7010}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743869,"byte_end":13743921,"line_start":875,"line_end":875,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743922,"byte_end":13743925,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743926,"byte_end":13744001,"line_start":877,"line_end":877,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744002,"byte_end":13744047,"line_start":878,"line_end":878,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":7013},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744328,"byte_end":13744339,"line_start":889,"line_end":889,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":7014}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744122,"byte_end":13744173,"line_start":884,"line_end":884,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744174,"byte_end":13744177,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744178,"byte_end":13744253,"line_start":886,"line_end":886,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744254,"byte_end":13744299,"line_start":887,"line_end":887,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":836},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":7027},{"krate":0,"index":7156},{"krate":0,"index":7159},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":8050},{"krate":0,"index":8051},{"krate":0,"index":8054},{"krate":0,"index":860},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":8203},{"krate":0,"index":8277},{"krate":0,"index":1035},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":8318},{"krate":0,"index":8447},{"krate":0,"index":8718},{"krate":0,"index":8753},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":8756},{"krate":0,"index":8760},{"krate":0,"index":8762},{"krate":0,"index":8772},{"krate":0,"index":1112},{"krate":0,"index":1113}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106576,"byte_end":106598,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106599,"byte_end":106602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106603,"byte_end":106668,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106669,"byte_end":106739,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106740,"byte_end":106754,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106755,"byte_end":106758,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106759,"byte_end":106837,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106838,"byte_end":106895,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106896,"byte_end":106966,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106967,"byte_end":107039,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107040,"byte_end":107043,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107044,"byte_end":107124,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107125,"byte_end":107198,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107199,"byte_end":107273,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107274,"byte_end":107352,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107353,"byte_end":107366,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107367,"byte_end":107370,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107371,"byte_end":107382,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107383,"byte_end":107386,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107387,"byte_end":107454,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107455,"byte_end":107458,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107459,"byte_end":107472,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107473,"byte_end":107505,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107506,"byte_end":107532,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107533,"byte_end":107536,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107537,"byte_end":107555,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107556,"byte_end":107619,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107620,"byte_end":107690,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107691,"byte_end":107694,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107695,"byte_end":107709,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107710,"byte_end":107769,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107770,"byte_end":107773,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107774,"byte_end":107811,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107812,"byte_end":107852,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107853,"byte_end":107856,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107857,"byte_end":107937,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107938,"byte_end":107960,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107961,"byte_end":108024,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108025,"byte_end":108065,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108066,"byte_end":108116,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108117,"byte_end":108152,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108153,"byte_end":108188,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108189,"byte_end":108271,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108272,"byte_end":108307,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108308,"byte_end":108333,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108334,"byte_end":108356,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108357,"byte_end":108360,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108361,"byte_end":108403,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108404,"byte_end":108476,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108477,"byte_end":108554,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108555,"byte_end":108586,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108587,"byte_end":108608,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108609,"byte_end":108626,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108627,"byte_end":108642,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108643,"byte_end":108652,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108653,"byte_end":108658,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108659,"byte_end":108666,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108667,"byte_end":108670,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108671,"byte_end":108749,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108750,"byte_end":108828,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108829,"byte_end":108890,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108891,"byte_end":108894,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108895,"byte_end":108948,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108949,"byte_end":108952,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108953,"byte_end":108966,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108967,"byte_end":108999,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109000,"byte_end":109026,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109027,"byte_end":109059,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109060,"byte_end":109063,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109064,"byte_end":109121,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109122,"byte_end":109151,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109152,"byte_end":109189,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109190,"byte_end":109193,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109194,"byte_end":109224,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109225,"byte_end":109252,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109253,"byte_end":109327,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109328,"byte_end":109331,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109332,"byte_end":109350,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109351,"byte_end":109414,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109415,"byte_end":109418,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109419,"byte_end":109460,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109461,"byte_end":109505,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109506,"byte_end":109509,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109510,"byte_end":109594,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109595,"byte_end":109621,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109622,"byte_end":109689,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109690,"byte_end":109734,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109735,"byte_end":109789,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109790,"byte_end":109829,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109830,"byte_end":109869,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109870,"byte_end":109956,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109957,"byte_end":109996,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109997,"byte_end":110026,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110027,"byte_end":110053,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110054,"byte_end":110057,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110058,"byte_end":110104,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110105,"byte_end":110181,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110182,"byte_end":110263,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110264,"byte_end":110299,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110300,"byte_end":110325,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110326,"byte_end":110347,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110348,"byte_end":110367,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110368,"byte_end":110381,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110382,"byte_end":110392,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110393,"byte_end":110398,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110399,"byte_end":110406,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110407,"byte_end":110410,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110411,"byte_end":110440,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110441,"byte_end":110444,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110445,"byte_end":110523,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110524,"byte_end":110600,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110601,"byte_end":110643,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110644,"byte_end":110647,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110648,"byte_end":110672,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110673,"byte_end":110676,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110677,"byte_end":110756,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110757,"byte_end":110832,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110833,"byte_end":110903,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110904,"byte_end":110944,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110945,"byte_end":110952,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110953,"byte_end":110976,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110977,"byte_end":110980,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110981,"byte_end":111040,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111041,"byte_end":111083,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111084,"byte_end":111110,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111111,"byte_end":111129,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111130,"byte_end":111144,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111145,"byte_end":111152,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111153,"byte_end":111156,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111157,"byte_end":111222,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111223,"byte_end":111293,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111294,"byte_end":111297,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111298,"byte_end":111325,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111326,"byte_end":111329,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111330,"byte_end":111401,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111402,"byte_end":111480,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111481,"byte_end":111560,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111561,"byte_end":111645,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111646,"byte_end":111726,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111727,"byte_end":111734,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111735,"byte_end":111758,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111759,"byte_end":111762,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111763,"byte_end":111822,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111823,"byte_end":111868,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111869,"byte_end":111898,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111899,"byte_end":111917,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111918,"byte_end":111932,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111933,"byte_end":111940,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111941,"byte_end":111944,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111945,"byte_end":112025,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112026,"byte_end":112068,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112069,"byte_end":112072,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112073,"byte_end":112150,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112151,"byte_end":112220,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112221,"byte_end":112224,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112225,"byte_end":112250,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112251,"byte_end":112254,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112255,"byte_end":112329,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112330,"byte_end":112410,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112411,"byte_end":112490,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112491,"byte_end":112570,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112571,"byte_end":112640,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112641,"byte_end":112644,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112645,"byte_end":112679,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112680,"byte_end":112683,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112684,"byte_end":112763,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112764,"byte_end":112832,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112833,"byte_end":112895,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112896,"byte_end":112899,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112900,"byte_end":112978,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112979,"byte_end":113058,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113059,"byte_end":113117,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113118,"byte_end":113121,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113122,"byte_end":113146,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113147,"byte_end":113171,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113172,"byte_end":113206,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113207,"byte_end":113245,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113246,"byte_end":113292,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113293,"byte_end":113343,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113344,"byte_end":113418,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113419,"byte_end":113499,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113500,"byte_end":113562,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113563,"byte_end":113629,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113630,"byte_end":113694,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":7780},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14013174,"byte_end":14013183,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":7781}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":7297},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14013359,"byte_end":14013368,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14013334,"byte_end":14013347,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7299},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14013586,"byte_end":14013591,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<dyn Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14013561,"byte_end":14013574,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7301},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14013921,"byte_end":14013933,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14013841,"byte_end":14013909,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7302},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014439,"byte_end":14014447,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014060,"byte_end":14014122,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014127,"byte_end":14014130,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014135,"byte_end":14014149,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014154,"byte_end":14014157,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014162,"byte_end":14014169,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014174,"byte_end":14014193,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014198,"byte_end":14014201,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014206,"byte_end":14014224,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014229,"byte_end":14014250,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014255,"byte_end":14014293,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014298,"byte_end":14014325,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014330,"byte_end":14014360,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014365,"byte_end":14014368,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014373,"byte_end":14014405,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014410,"byte_end":14014415,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014420,"byte_end":14014427,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7303},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015354,"byte_end":14015364,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014573,"byte_end":14014652,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014657,"byte_end":14014660,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014665,"byte_end":14014677,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014682,"byte_end":14014685,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014690,"byte_end":14014764,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014769,"byte_end":14014844,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014849,"byte_end":14014907,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014912,"byte_end":14014915,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014920,"byte_end":14014934,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014939,"byte_end":14014942,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014947,"byte_end":14014966,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014971,"byte_end":14014990,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14014995,"byte_end":14014998,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015003,"byte_end":14015021,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015026,"byte_end":14015047,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015052,"byte_end":14015090,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015095,"byte_end":14015122,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015127,"byte_end":14015157,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015162,"byte_end":14015165,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015170,"byte_end":14015197,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015202,"byte_end":14015250,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015255,"byte_end":14015306,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015311,"byte_end":14015320,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015325,"byte_end":14015330,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015335,"byte_end":14015342,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7304},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016129,"byte_end":14016143,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self)\n-> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015505,"byte_end":14015574,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015579,"byte_end":14015651,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015656,"byte_end":14015669,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015674,"byte_end":14015677,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015682,"byte_end":14015696,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015701,"byte_end":14015704,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015709,"byte_end":14015728,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015733,"byte_end":14015752,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015757,"byte_end":14015760,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015765,"byte_end":14015783,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015788,"byte_end":14015809,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015814,"byte_end":14015852,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015857,"byte_end":14015884,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015889,"byte_end":14015919,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015924,"byte_end":14015927,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015932,"byte_end":14015982,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14015987,"byte_end":14016035,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016040,"byte_end":14016081,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016086,"byte_end":14016095,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016100,"byte_end":14016105,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016110,"byte_end":14016117,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7782},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032509,"byte_end":14032519,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":7784},{"krate":0,"index":7785}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129918,"byte_end":129925,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129090,"byte_end":129148,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129149,"byte_end":129152,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129153,"byte_end":129225,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129226,"byte_end":129274,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129275,"byte_end":129278,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129279,"byte_end":129344,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129345,"byte_end":129348,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129349,"byte_end":129426,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129427,"byte_end":129440,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129441,"byte_end":129444,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129445,"byte_end":129478,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129479,"byte_end":129517,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129518,"byte_end":129521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129522,"byte_end":129536,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129537,"byte_end":129540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129541,"byte_end":129548,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129549,"byte_end":129581,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129582,"byte_end":129585,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129586,"byte_end":129601,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129602,"byte_end":129626,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129627,"byte_end":129663,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129664,"byte_end":129697,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129698,"byte_end":129726,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129727,"byte_end":129769,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129770,"byte_end":129817,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129818,"byte_end":129838,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129839,"byte_end":129861,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129862,"byte_end":129865,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129866,"byte_end":129892,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129893,"byte_end":129898,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129899,"byte_end":129906,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131080,"byte_end":131083,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130906,"byte_end":130978,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130983,"byte_end":130994,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130999,"byte_end":131002,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131007,"byte_end":131068,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132287,"byte_end":132297,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131773,"byte_end":131811,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131816,"byte_end":131819,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131824,"byte_end":131895,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131900,"byte_end":131976,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131981,"byte_end":132035,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132040,"byte_end":132043,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132048,"byte_end":132062,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132067,"byte_end":132070,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132075,"byte_end":132082,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132087,"byte_end":132110,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132115,"byte_end":132118,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132123,"byte_end":132159,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132164,"byte_end":132193,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132198,"byte_end":132219,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132224,"byte_end":132240,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132245,"byte_end":132263,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132268,"byte_end":132275,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132852,"byte_end":132863,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132474,"byte_end":132547,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132552,"byte_end":132630,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132635,"byte_end":132638,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132643,"byte_end":132718,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132723,"byte_end":132758,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132763,"byte_end":132766,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132771,"byte_end":132840,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133572,"byte_end":133584,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132965,"byte_end":133040,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133045,"byte_end":133048,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133053,"byte_end":133130,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133135,"byte_end":133170,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133175,"byte_end":133178,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133183,"byte_end":133252,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133257,"byte_end":133260,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133265,"byte_end":133317,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133322,"byte_end":133325,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133330,"byte_end":133344,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133349,"byte_end":133352,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133357,"byte_end":133364,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133369,"byte_end":133392,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133397,"byte_end":133400,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133405,"byte_end":133441,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133446,"byte_end":133475,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133480,"byte_end":133504,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133509,"byte_end":133525,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133530,"byte_end":133548,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133553,"byte_end":133560,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134463,"byte_end":134474,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133745,"byte_end":133801,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133806,"byte_end":133809,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133814,"byte_end":133891,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133896,"byte_end":133978,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133983,"byte_end":134053,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134058,"byte_end":134061,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134066,"byte_end":134146,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134151,"byte_end":134154,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134159,"byte_end":134188,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134193,"byte_end":134196,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134201,"byte_end":134286,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134291,"byte_end":134294,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134299,"byte_end":134388,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134393,"byte_end":134451,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134998,"byte_end":135009,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134628,"byte_end":134692,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134697,"byte_end":134700,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134705,"byte_end":134752,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134757,"byte_end":134760,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134765,"byte_end":134779,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134784,"byte_end":134787,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134792,"byte_end":134799,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134804,"byte_end":134829,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134834,"byte_end":134837,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134842,"byte_end":134863,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134868,"byte_end":134904,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134909,"byte_end":134940,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134945,"byte_end":134962,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134967,"byte_end":134974,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134979,"byte_end":134986,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135733,"byte_end":135750,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135123,"byte_end":135177,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135182,"byte_end":135185,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135190,"byte_end":135262,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135267,"byte_end":135300,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135305,"byte_end":135308,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135313,"byte_end":135381,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135386,"byte_end":135447,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135452,"byte_end":135455,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135460,"byte_end":135474,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135479,"byte_end":135482,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135487,"byte_end":135494,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135499,"byte_end":135524,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135529,"byte_end":135532,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135537,"byte_end":135558,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135563,"byte_end":135599,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135604,"byte_end":135633,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135638,"byte_end":135675,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135680,"byte_end":135697,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135702,"byte_end":135709,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135714,"byte_end":135721,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136391,"byte_end":136406,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135857,"byte_end":135932,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135937,"byte_end":135952,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135957,"byte_end":135960,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135965,"byte_end":136027,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136032,"byte_end":136035,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136040,"byte_end":136054,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136059,"byte_end":136062,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136067,"byte_end":136074,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136079,"byte_end":136104,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136109,"byte_end":136112,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136117,"byte_end":136138,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136143,"byte_end":136184,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136189,"byte_end":136218,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136223,"byte_end":136252,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136257,"byte_end":136296,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136301,"byte_end":136311,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136316,"byte_end":136333,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136338,"byte_end":136345,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136350,"byte_end":136357,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136362,"byte_end":136379,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137057,"byte_end":137071,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136567,"byte_end":136618,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136623,"byte_end":136626,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136631,"byte_end":136693,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136698,"byte_end":136701,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136706,"byte_end":136720,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136725,"byte_end":136728,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136733,"byte_end":136740,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136745,"byte_end":136770,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136775,"byte_end":136778,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136783,"byte_end":136804,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136809,"byte_end":136850,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136855,"byte_end":136884,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136889,"byte_end":136917,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136922,"byte_end":136962,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136967,"byte_end":136977,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136982,"byte_end":136999,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137004,"byte_end":137011,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137016,"byte_end":137023,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137028,"byte_end":137045,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137617,"byte_end":137622,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137232,"byte_end":137269,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137274,"byte_end":137277,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137282,"byte_end":137345,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137350,"byte_end":137353,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137358,"byte_end":137372,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137377,"byte_end":137380,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137385,"byte_end":137392,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137397,"byte_end":137429,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137434,"byte_end":137437,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137442,"byte_end":137491,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137496,"byte_end":137499,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137504,"byte_end":137527,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137532,"byte_end":137581,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137586,"byte_end":137593,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137598,"byte_end":137605,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8070},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139247,"byte_end":139256,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8072},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139767,"byte_end":139778,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8074},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":140391,"byte_end":140406,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8084},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":142142,"byte_end":142160,"line_start":458,"line_end":458,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"pub fn threaded_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a multi-threaded scheduler for executing tasks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8183},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151388,"byte_end":151394,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":8184},{"krate":0,"index":8185},{"krate":0,"index":8186},{"krate":0,"index":8187},{"krate":0,"index":8188}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151119,"byte_end":151145,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151146,"byte_end":151149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151150,"byte_end":151238,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151239,"byte_end":151289,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151290,"byte_end":151293,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151294,"byte_end":151352,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152931,"byte_end":152936,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151758,"byte_end":151833,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151838,"byte_end":151916,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151921,"byte_end":151989,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151994,"byte_end":151997,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152002,"byte_end":152060,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152065,"byte_end":152068,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152073,"byte_end":152113,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152118,"byte_end":152165,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152170,"byte_end":152227,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152232,"byte_end":152269,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152274,"byte_end":152277,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152282,"byte_end":152295,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152300,"byte_end":152303,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152308,"byte_end":152315,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152320,"byte_end":152352,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152357,"byte_end":152360,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152365,"byte_end":152407,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152412,"byte_end":152478,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152483,"byte_end":152516,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152521,"byte_end":152553,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152558,"byte_end":152569,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152574,"byte_end":152579,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152584,"byte_end":152587,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152592,"byte_end":152607,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152612,"byte_end":152653,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152658,"byte_end":152699,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152704,"byte_end":152707,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152712,"byte_end":152755,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152760,"byte_end":152763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152768,"byte_end":152843,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152848,"byte_end":152897,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152902,"byte_end":152907,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152912,"byte_end":152919,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154406,"byte_end":154413,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153054,"byte_end":153118,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153123,"byte_end":153126,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153131,"byte_end":153142,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153147,"byte_end":153150,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153155,"byte_end":153249,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153254,"byte_end":153346,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153351,"byte_end":153427,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153432,"byte_end":153435,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153440,"byte_end":153454,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153459,"byte_end":153462,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153467,"byte_end":153549,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153554,"byte_end":153600,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153605,"byte_end":153608,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153613,"byte_end":153620,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153625,"byte_end":153647,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153652,"byte_end":153686,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153691,"byte_end":153707,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153712,"byte_end":153751,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153756,"byte_end":153778,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153783,"byte_end":153814,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153819,"byte_end":153822,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153827,"byte_end":153868,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153873,"byte_end":153908,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153913,"byte_end":153937,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153942,"byte_end":153998,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154003,"byte_end":154010,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154015,"byte_end":154018,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154023,"byte_end":154041,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154046,"byte_end":154073,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154078,"byte_end":154163,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154168,"byte_end":154212,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154217,"byte_end":154262,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154267,"byte_end":154310,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154315,"byte_end":154322,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154327,"byte_end":154356,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154361,"byte_end":154370,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154375,"byte_end":154382,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154387,"byte_end":154394,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154715,"byte_end":154726,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154522,"byte_end":154582,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154587,"byte_end":154590,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154595,"byte_end":154646,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154651,"byte_end":154654,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154659,"byte_end":154703,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":8194},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":156251,"byte_end":156256,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8196},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":160375,"byte_end":160383,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8200},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":163772,"byte_end":163786,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":998},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164175,"byte_end":164190,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164095,"byte_end":164163,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":8756},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115599,"byte_end":115606,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8759}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114582,"byte_end":114604,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114605,"byte_end":114608,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114609,"byte_end":114686,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114687,"byte_end":114738,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114739,"byte_end":114742,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114743,"byte_end":114823,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114824,"byte_end":114909,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114910,"byte_end":114913,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114914,"byte_end":114973,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114974,"byte_end":114977,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114978,"byte_end":114992,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114993,"byte_end":114996,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114997,"byte_end":115076,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115077,"byte_end":115136,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115137,"byte_end":115140,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115141,"byte_end":115179,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115180,"byte_end":115231,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115232,"byte_end":115255,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115256,"byte_end":115259,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115260,"byte_end":115332,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115333,"byte_end":115406,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115407,"byte_end":115430,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115431,"byte_end":115434,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115435,"byte_end":115459,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115460,"byte_end":115481,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115482,"byte_end":115511,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115512,"byte_end":115543,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115544,"byte_end":115570,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117827,"byte_end":117830,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116420,"byte_end":116488,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116493,"byte_end":116496,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116501,"byte_end":116567,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116572,"byte_end":116645,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116650,"byte_end":116721,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116726,"byte_end":116801,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116806,"byte_end":116844,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116849,"byte_end":116852,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116857,"byte_end":116917,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116922,"byte_end":116996,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117001,"byte_end":117004,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117009,"byte_end":117085,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117090,"byte_end":117166,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117171,"byte_end":117237,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117242,"byte_end":117245,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117250,"byte_end":117309,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117314,"byte_end":117317,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117322,"byte_end":117336,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117341,"byte_end":117344,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117349,"byte_end":117412,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117417,"byte_end":117420,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117425,"byte_end":117432,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117437,"byte_end":117469,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117474,"byte_end":117477,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117482,"byte_end":117509,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117514,"byte_end":117532,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117537,"byte_end":117540,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117545,"byte_end":117570,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117575,"byte_end":117582,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117587,"byte_end":117590,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117595,"byte_end":117616,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117621,"byte_end":117650,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117655,"byte_end":117710,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117715,"byte_end":117764,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117769,"byte_end":117815,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119420,"byte_end":119425,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118240,"byte_end":118282,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118287,"byte_end":118290,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118295,"byte_end":118366,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118371,"byte_end":118446,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118451,"byte_end":118474,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118479,"byte_end":118482,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118487,"byte_end":118546,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118551,"byte_end":118554,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118559,"byte_end":118580,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118585,"byte_end":118588,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118593,"byte_end":118607,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118612,"byte_end":118615,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118620,"byte_end":118627,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118632,"byte_end":118664,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118669,"byte_end":118672,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118677,"byte_end":118693,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118698,"byte_end":118723,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118728,"byte_end":118765,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118770,"byte_end":118773,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118778,"byte_end":118816,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118821,"byte_end":118841,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118846,"byte_end":118897,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118902,"byte_end":118909,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118914,"byte_end":118921,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118926,"byte_end":118933,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118938,"byte_end":118941,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118946,"byte_end":118958,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118963,"byte_end":118966,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118971,"byte_end":119044,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119049,"byte_end":119114,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119119,"byte_end":119180,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119185,"byte_end":119212,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119217,"byte_end":119220,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119225,"byte_end":119256,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119261,"byte_end":119319,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119324,"byte_end":119376,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119381,"byte_end":119408,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121046,"byte_end":121054,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119827,"byte_end":119901,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119906,"byte_end":119922,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119927,"byte_end":119930,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119935,"byte_end":120002,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120007,"byte_end":120080,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120085,"byte_end":120150,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120155,"byte_end":120158,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120163,"byte_end":120239,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120244,"byte_end":120310,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120315,"byte_end":120387,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120392,"byte_end":120415,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120420,"byte_end":120423,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120428,"byte_end":120491,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120496,"byte_end":120499,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120504,"byte_end":120516,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120521,"byte_end":120524,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120529,"byte_end":120607,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120612,"byte_end":120647,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120652,"byte_end":120655,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120660,"byte_end":120674,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120679,"byte_end":120682,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120687,"byte_end":120700,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120705,"byte_end":120737,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120742,"byte_end":120745,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120750,"byte_end":120775,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120780,"byte_end":120821,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120826,"byte_end":120829,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120834,"byte_end":120905,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120910,"byte_end":120933,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120938,"byte_end":120964,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120969,"byte_end":120976,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120981,"byte_end":120988,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120993,"byte_end":120996,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121001,"byte_end":121034,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122576,"byte_end":122581,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121460,"byte_end":121535,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121540,"byte_end":121618,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121623,"byte_end":121691,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121696,"byte_end":121699,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121704,"byte_end":121761,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121766,"byte_end":121769,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121774,"byte_end":121814,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121819,"byte_end":121866,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121871,"byte_end":121926,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121931,"byte_end":121968,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121973,"byte_end":121976,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121981,"byte_end":121994,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121999,"byte_end":122002,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122007,"byte_end":122014,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122019,"byte_end":122051,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122056,"byte_end":122059,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122064,"byte_end":122106,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122111,"byte_end":122173,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122178,"byte_end":122211,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122216,"byte_end":122248,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122253,"byte_end":122264,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122269,"byte_end":122274,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122279,"byte_end":122282,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122287,"byte_end":122302,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122307,"byte_end":122348,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122353,"byte_end":122356,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122361,"byte_end":122404,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122409,"byte_end":122412,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122417,"byte_end":122492,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122497,"byte_end":122542,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122547,"byte_end":122552,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122557,"byte_end":122564,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123168,"byte_end":123174,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122688,"byte_end":122733,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122738,"byte_end":122741,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122746,"byte_end":122830,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122835,"byte_end":122895,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122900,"byte_end":122903,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122908,"byte_end":122922,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122927,"byte_end":122930,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122935,"byte_end":122942,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122947,"byte_end":122979,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122984,"byte_end":122987,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122992,"byte_end":123019,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123024,"byte_end":123042,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123047,"byte_end":123050,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123055,"byte_end":123084,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123089,"byte_end":123092,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123097,"byte_end":123144,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123149,"byte_end":123156,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124582,"byte_end":124598,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123227,"byte_end":123299,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123304,"byte_end":123325,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123330,"byte_end":123333,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123338,"byte_end":123413,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123418,"byte_end":123491,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123496,"byte_end":123573,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123578,"byte_end":123649,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123654,"byte_end":123657,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123662,"byte_end":123736,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123741,"byte_end":123815,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123820,"byte_end":123895,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123900,"byte_end":123976,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123981,"byte_end":124026,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124031,"byte_end":124034,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124039,"byte_end":124053,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124058,"byte_end":124061,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124066,"byte_end":124073,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124078,"byte_end":124110,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124115,"byte_end":124135,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124140,"byte_end":124143,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124148,"byte_end":124168,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124173,"byte_end":124201,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124206,"byte_end":124209,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124214,"byte_end":124229,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124234,"byte_end":124283,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124288,"byte_end":124291,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124296,"byte_end":124332,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124337,"byte_end":124378,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124383,"byte_end":124441,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124446,"byte_end":124460,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124465,"byte_end":124475,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124480,"byte_end":124483,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124488,"byte_end":124548,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124553,"byte_end":124558,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124563,"byte_end":124570,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125907,"byte_end":125926,"line_start":577,"line_end":577,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124789,"byte_end":124865,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124870,"byte_end":124873,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124878,"byte_end":124959,"line_start":553,"line_end":553,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124964,"byte_end":125047,"line_start":554,"line_end":554,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125052,"byte_end":125138,"line_start":555,"line_end":555,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125143,"byte_end":125228,"line_start":556,"line_end":556,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125233,"byte_end":125236,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125241,"byte_end":125327,"line_start":558,"line_end":558,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125332,"byte_end":125422,"line_start":559,"line_end":559,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125427,"byte_end":125438,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125443,"byte_end":125446,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125451,"byte_end":125536,"line_start":562,"line_end":562,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125541,"byte_end":125544,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125549,"byte_end":125556,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125561,"byte_end":125593,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125598,"byte_end":125601,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125606,"byte_end":125621,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125626,"byte_end":125675,"line_start":568,"line_end":568,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125680,"byte_end":125683,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125688,"byte_end":125724,"line_start":570,"line_end":570,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125729,"byte_end":125784,"line_start":571,"line_end":571,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125789,"byte_end":125806,"line_start":572,"line_end":572,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125811,"byte_end":125858,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125863,"byte_end":125873,"line_start":574,"line_end":574,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125878,"byte_end":125883,"line_start":575,"line_end":575,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125888,"byte_end":125895,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":8815},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":8816},{"krate":0,"index":8827},{"krate":0,"index":8830},{"krate":0,"index":8898},{"krate":0,"index":8906}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":20854,"byte_end":20880,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":20955,"byte_end":20972,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134088,"byte_end":14134130,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134131,"byte_end":14134134,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134135,"byte_end":14134212,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134213,"byte_end":14134291,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134292,"byte_end":14134372,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134373,"byte_end":14134401,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134402,"byte_end":14134405,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134406,"byte_end":14134481,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ specific structures, as well.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134482,"byte_end":14134515,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134516,"byte_end":14134519,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134520,"byte_end":14134534,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134535,"byte_end":14134538,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134539,"byte_end":14134574,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134575,"byte_end":14134578,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134579,"byte_end":14134597,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134598,"byte_end":14134620,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134621,"byte_end":14134624,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134625,"byte_end":14134643,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134644,"byte_end":14134707,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134708,"byte_end":14134740,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134741,"byte_end":14134778,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134779,"byte_end":14134793,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134794,"byte_end":14134799,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134800,"byte_end":14134807,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134808,"byte_end":14134811,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134812,"byte_end":14134839,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134840,"byte_end":14134843,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134844,"byte_end":14134862,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134863,"byte_end":14134883,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134884,"byte_end":14134934,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134935,"byte_end":14134938,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134939,"byte_end":14134957,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14134958,"byte_end":14135021,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135022,"byte_end":14135070,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135071,"byte_end":14135126,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135127,"byte_end":14135130,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135131,"byte_end":14135181,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135182,"byte_end":14135196,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135197,"byte_end":14135229,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135230,"byte_end":14135269,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135270,"byte_end":14135279,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135280,"byte_end":14135285,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135286,"byte_end":14135293,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135294,"byte_end":14135301,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8824},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137377,"byte_end":14137383,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14135675,"byte_end":14135741,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14135742,"byte_end":14135745,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14135746,"byte_end":14135823,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14135824,"byte_end":14135902,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14135903,"byte_end":14135952,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14135953,"byte_end":14135956,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14135957,"byte_end":14136033,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136034,"byte_end":14136112,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136113,"byte_end":14136151,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136152,"byte_end":14136155,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136156,"byte_end":14136169,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136170,"byte_end":14136173,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136174,"byte_end":14136256,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136257,"byte_end":14136337,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136338,"byte_end":14136419,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136420,"byte_end":14136445,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136446,"byte_end":14136449,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136450,"byte_end":14136523,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136524,"byte_end":14136596,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136597,"byte_end":14136675,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136676,"byte_end":14136753,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136754,"byte_end":14136830,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136831,"byte_end":14136910,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136911,"byte_end":14136935,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136936,"byte_end":14136939,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14136940,"byte_end":14137018,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137019,"byte_end":14137079,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137080,"byte_end":14137083,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137084,"byte_end":14137098,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137099,"byte_end":14137102,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137103,"byte_end":14137121,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137122,"byte_end":14137144,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137145,"byte_end":14137148,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137149,"byte_end":14137167,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137168,"byte_end":14137189,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137190,"byte_end":14137229,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137230,"byte_end":14137233,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137234,"byte_end":14137302,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137303,"byte_end":14137306,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137307,"byte_end":14137349,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137350,"byte_end":14137355,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":14137356,"byte_end":14137363,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":8906},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":8907},{"krate":0,"index":8908},{"krate":0,"index":8911},{"krate":0,"index":8914},{"krate":0,"index":8915},{"krate":0,"index":8918},{"krate":0,"index":8921},{"krate":0,"index":8924},{"krate":0,"index":8927},{"krate":0,"index":8930},{"krate":0,"index":8933},{"krate":0,"index":8934},{"krate":0,"index":8937},{"krate":0,"index":8940},{"krate":0,"index":8943},{"krate":0,"index":8946},{"krate":0,"index":8947},{"krate":0,"index":8950},{"krate":0,"index":8953},{"krate":0,"index":8956},{"krate":0,"index":8959},{"krate":0,"index":8962},{"krate":0,"index":8963},{"krate":0,"index":8966},{"krate":0,"index":8969},{"krate":0,"index":8972},{"krate":0,"index":8973},{"krate":0,"index":8976},{"krate":0,"index":8979},{"krate":0,"index":8980},{"krate":0,"index":8981},{"krate":0,"index":8984},{"krate":0,"index":9047},{"krate":0,"index":9050},{"krate":0,"index":8991},{"krate":0,"index":9052},{"krate":0,"index":9055},{"krate":0,"index":9057},{"krate":0,"index":9059},{"krate":0,"index":8993},{"krate":0,"index":9006},{"krate":0,"index":9010},{"krate":0,"index":9012},{"krate":0,"index":9013},{"krate":0,"index":9060},{"krate":0,"index":9062},{"krate":0,"index":9017},{"krate":0,"index":9019},{"krate":0,"index":9064},{"krate":0,"index":9067},{"krate":0,"index":9023},{"krate":0,"index":9024},{"krate":0,"index":9069},{"krate":0,"index":9033}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Unix-specific types for signal handling.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14146821,"byte_end":14146865,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14146866,"byte_end":14146869,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14146870,"byte_end":14146944,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `Signal` type for receiving notifications of signals.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14146945,"byte_end":14147002,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14147004,"byte_end":14147017,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9052},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148332,"byte_end":14148342,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148233,"byte_end":14148290,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8994},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148741,"byte_end":14148749,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"pub fn from_raw(c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148374,"byte_end":14148422,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148427,"byte_end":14148430,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148435,"byte_end":14148504,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148509,"byte_end":14148521,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148526,"byte_end":14148544,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148549,"byte_end":14148591,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148596,"byte_end":14148618,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148623,"byte_end":14148668,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148673,"byte_end":14148717,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148722,"byte_end":14148729,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8995},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149003,"byte_end":14149008,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"pub fn alarm() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148807,"byte_end":14148841,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148846,"byte_end":14148849,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148854,"byte_end":14148929,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148934,"byte_end":14148991,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":8996},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149250,"byte_end":14149255,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"pub fn child() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149060,"byte_end":14149094,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149099,"byte_end":14149102,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149107,"byte_end":14149181,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149186,"byte_end":14149238,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":8997},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149501,"byte_end":14149507,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"pub fn hangup() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149307,"byte_end":14149340,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149345,"byte_end":14149348,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149353,"byte_end":14149427,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149432,"byte_end":14149489,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":8998},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150160,"byte_end":14150169,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"pub fn interrupt() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14149977,"byte_end":14150010,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150015,"byte_end":14150018,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150023,"byte_end":14150086,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150091,"byte_end":14150148,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":8999},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150418,"byte_end":14150420,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"pub fn io() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150220,"byte_end":14150252,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150257,"byte_end":14150260,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150265,"byte_end":14150337,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150342,"byte_end":14150406,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":9000},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150704,"byte_end":14150708,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"pub fn pipe() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150470,"byte_end":14150504,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150509,"byte_end":14150512,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150517,"byte_end":14150591,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150596,"byte_end":14150671,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150676,"byte_end":14150692,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":9001},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151011,"byte_end":14151015,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"pub fn quit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150760,"byte_end":14150794,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150799,"byte_end":14150802,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150807,"byte_end":14150873,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150878,"byte_end":14150937,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14150942,"byte_end":14150999,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":9002},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151263,"byte_end":14151272,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"pub fn terminate() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151067,"byte_end":14151101,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151106,"byte_end":14151109,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151114,"byte_end":14151180,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151185,"byte_end":14151251,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":9003},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151495,"byte_end":14151508,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"pub fn user_defined1() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151324,"byte_end":14151358,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151363,"byte_end":14151366,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151371,"byte_end":14151421,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151426,"byte_end":14151483,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":9004},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151731,"byte_end":14151744,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"pub fn user_defined2() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151560,"byte_end":14151594,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151599,"byte_end":14151602,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151607,"byte_end":14151657,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151662,"byte_end":14151719,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":9005},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151976,"byte_end":14151989,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"pub fn window_change() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151796,"byte_end":14151831,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151836,"byte_end":14151839,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151844,"byte_end":14151920,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14151925,"byte_end":14151964,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":9064},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159412,"byte_end":14159418,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":9065},{"krate":0,"index":9066}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14156647,"byte_end":14156715,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14156716,"byte_end":14156719,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14156720,"byte_end":14156793,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14156794,"byte_end":14156872,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14156873,"byte_end":14156910,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14156911,"byte_end":14156914,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14156915,"byte_end":14156985,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14156986,"byte_end":14157061,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157062,"byte_end":14157139,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157140,"byte_end":14157219,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157220,"byte_end":14157293,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157294,"byte_end":14157370,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157371,"byte_end":14157448,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157449,"byte_end":14157477,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157478,"byte_end":14157481,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157482,"byte_end":14157562,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157563,"byte_end":14157610,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157611,"byte_end":14157614,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157615,"byte_end":14157688,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157689,"byte_end":14157767,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157768,"byte_end":14157814,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157815,"byte_end":14157818,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157819,"byte_end":14157895,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157896,"byte_end":14157970,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157971,"byte_end":14157987,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157988,"byte_end":14157991,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14157992,"byte_end":14158005,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158006,"byte_end":14158009,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158010,"byte_end":14158084,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158085,"byte_end":14158162,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158163,"byte_end":14158240,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158241,"byte_end":14158262,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158263,"byte_end":14158266,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158267,"byte_end":14158340,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158341,"byte_end":14158416,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158417,"byte_end":14158493,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158494,"byte_end":14158570,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158571,"byte_end":14158648,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158649,"byte_end":14158714,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158715,"byte_end":14158718,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158719,"byte_end":14158797,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158798,"byte_end":14158858,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158859,"byte_end":14158862,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158863,"byte_end":14158877,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158878,"byte_end":14158881,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158882,"byte_end":14158901,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158902,"byte_end":14158905,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158906,"byte_end":14158924,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158925,"byte_end":14158975,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158976,"byte_end":14158979,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158980,"byte_end":14158998,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14158999,"byte_end":14159062,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159063,"byte_end":14159111,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159112,"byte_end":14159167,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159168,"byte_end":14159171,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159172,"byte_end":14159222,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159223,"byte_end":14159237,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159238,"byte_end":14159270,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159271,"byte_end":14159310,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159311,"byte_end":14159320,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159321,"byte_end":14159326,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159327,"byte_end":14159334,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159335,"byte_end":14159383,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9023},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160511,"byte_end":14160517,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"pub fn signal(SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159466,"byte_end":14159540,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159541,"byte_end":14159590,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159591,"byte_end":14159594,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159595,"byte_end":14159673,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159674,"byte_end":14159738,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159739,"byte_end":14159813,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159814,"byte_end":14159861,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159862,"byte_end":14159865,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159866,"byte_end":14159933,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14159934,"byte_end":14160007,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160008,"byte_end":14160056,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160057,"byte_end":14160060,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160061,"byte_end":14160128,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160129,"byte_end":14160198,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160199,"byte_end":14160249,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160250,"byte_end":14160253,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160254,"byte_end":14160266,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160267,"byte_end":14160270,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160271,"byte_end":14160329,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160330,"byte_end":14160398,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160399,"byte_end":14160428,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](fn@signal_hook_registry::register#panics)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14160429,"byte_end":14160503,"line_start":404,"line_end":404,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":9025},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161728,"byte_end":14161732,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161021,"byte_end":14161069,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161074,"byte_end":14161077,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161082,"byte_end":14161154,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161159,"byte_end":14161162,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161167,"byte_end":14161181,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161186,"byte_end":14161189,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161194,"byte_end":14161213,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161218,"byte_end":14161221,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161226,"byte_end":14161244,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161249,"byte_end":14161299,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161304,"byte_end":14161307,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161312,"byte_end":14161330,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161335,"byte_end":14161398,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161403,"byte_end":14161451,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161456,"byte_end":14161511,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161516,"byte_end":14161519,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161524,"byte_end":14161574,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161579,"byte_end":14161593,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161598,"byte_end":14161630,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161635,"byte_end":14161674,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161679,"byte_end":14161688,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161693,"byte_end":14161698,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161703,"byte_end":14161710,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9032},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162681,"byte_end":14162690,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161854,"byte_end":14161924,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161929,"byte_end":14161949,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161954,"byte_end":14161957,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161962,"byte_end":14162034,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162039,"byte_end":14162042,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162047,"byte_end":14162061,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162066,"byte_end":14162069,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162074,"byte_end":14162120,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162125,"byte_end":14162128,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162133,"byte_end":14162151,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162156,"byte_end":14162178,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162183,"byte_end":14162211,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162216,"byte_end":14162251,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162256,"byte_end":14162292,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162297,"byte_end":14162300,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162305,"byte_end":14162326,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162331,"byte_end":14162354,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162359,"byte_end":14162364,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162369,"byte_end":14162372,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162377,"byte_end":14162407,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162412,"byte_end":14162445,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162450,"byte_end":14162453,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162458,"byte_end":14162545,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162550,"byte_end":14162591,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162596,"byte_end":14162633,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162638,"byte_end":14162647,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162652,"byte_end":14162657,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162662,"byte_end":14162669,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":9072},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":9073},{"krate":0,"index":9103},{"krate":0,"index":9106},{"krate":0,"index":9136},{"krate":0,"index":9139},{"krate":0,"index":9173},{"krate":0,"index":9176},{"krate":0,"index":9291},{"krate":0,"index":9294},{"krate":0,"index":9297},{"krate":0,"index":9327},{"krate":0,"index":9328},{"krate":0,"index":9331},{"krate":0,"index":9334},{"krate":0,"index":9368},{"krate":0,"index":9371},{"krate":0,"index":9406},{"krate":0,"index":9409},{"krate":0,"index":9440},{"krate":0,"index":9443},{"krate":0,"index":9468},{"krate":0,"index":9471},{"krate":0,"index":9494},{"krate":0,"index":9495},{"krate":0,"index":9498},{"krate":0,"index":9501},{"krate":0,"index":9538},{"krate":0,"index":9541},{"krate":0,"index":9576},{"krate":0,"index":9579},{"krate":0,"index":9606},{"krate":0,"index":9609},{"krate":0,"index":9642},{"krate":0,"index":9643},{"krate":0,"index":9646},{"krate":0,"index":9649},{"krate":0,"index":9679},{"krate":0,"index":9680},{"krate":0,"index":9683},{"krate":0,"index":9686},{"krate":0,"index":9740},{"krate":0,"index":9743},{"krate":0,"index":9775},{"krate":0,"index":9778},{"krate":0,"index":9812},{"krate":0,"index":9815},{"krate":0,"index":9848},{"krate":0,"index":9851},{"krate":0,"index":9886},{"krate":0,"index":9889},{"krate":0,"index":9925},{"krate":0,"index":10044},{"krate":0,"index":10089},{"krate":0,"index":10092},{"krate":0,"index":9928},{"krate":0,"index":9931},{"krate":0,"index":9965},{"krate":0,"index":9967}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21086,"byte_end":21112,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14171860,"byte_end":14171891,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14171892,"byte_end":14171895,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14171896,"byte_end":14172041,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172042,"byte_end":14172045,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172046,"byte_end":14172097,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9968},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":14197778,"byte_end":14197787,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":9972},{"krate":0,"index":9973}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":14197624,"byte_end":14197681,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":14197699,"byte_end":14197766,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9979},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":14198941,"byte_end":14198950,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":9983},{"krate":0,"index":9984}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":14198787,"byte_end":14198844,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":14198862,"byte_end":14198929,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":14727},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":14200070,"byte_end":14200075,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":14730},{"krate":0,"index":14731}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14689},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201308,"byte_end":14201315,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":14692},{"krate":0,"index":14693}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":9212},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201880,"byte_end":14201890,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201467,"byte_end":14201520,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201521,"byte_end":14201524,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201525,"byte_end":14201590,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201591,"byte_end":14201647,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201648,"byte_end":14201651,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201652,"byte_end":14201670,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201671,"byte_end":14201674,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201675,"byte_end":14201754,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201755,"byte_end":14201830,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201831,"byte_end":14201869,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":9285},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14206791,"byte_end":14206805,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":9287},{"krate":0,"index":9288},{"krate":0,"index":9289},{"krate":0,"index":9290}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9287},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14206885,"byte_end":14206895,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":9285},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14206819,"byte_end":14206871,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":9288},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14206947,"byte_end":14206957,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":9285},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14206906,"byte_end":14206935,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":9289},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14207174,"byte_end":14207180,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":9285},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14207024,"byte_end":14207072,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14207081,"byte_end":14207084,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14207093,"byte_end":14207162,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":9290},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14207296,"byte_end":14207304,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":9285},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14207243,"byte_end":14207284,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":9990},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207597,"byte_end":14207602,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207471,"byte_end":14207519,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207537,"byte_end":14207585,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9320},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208192,"byte_end":14208197,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207727,"byte_end":14207768,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207769,"byte_end":14207772,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207773,"byte_end":14207841,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207842,"byte_end":14207918,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207919,"byte_end":14207929,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207930,"byte_end":14207933,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207934,"byte_end":14207948,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207949,"byte_end":14207952,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207953,"byte_end":14207969,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207970,"byte_end":14207973,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207974,"byte_end":14207981,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207982,"byte_end":14208023,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208024,"byte_end":14208027,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208028,"byte_end":14208046,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208047,"byte_end":14208068,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208069,"byte_end":14208115,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208116,"byte_end":14208119,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208120,"byte_end":14208164,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208165,"byte_end":14208170,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208171,"byte_end":14208178,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14633},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":14208780,"byte_end":14208786,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":14636},{"krate":0,"index":14637}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14588},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":14210218,"byte_end":14210227,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":14591},{"krate":0,"index":14592}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14539},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":14211644,"byte_end":14211654,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":14543},{"krate":0,"index":14544},{"krate":0,"index":14545}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14499},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":14212810,"byte_end":14212814,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":14501}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9997},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14213946,"byte_end":14213950,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":9999}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14213822,"byte_end":14213868,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14213886,"byte_end":14213934,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9487},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214524,"byte_end":14214528,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214002,"byte_end":14214066,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214067,"byte_end":14214095,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214096,"byte_end":14214099,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214100,"byte_end":14214173,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214174,"byte_end":14214229,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214230,"byte_end":14214233,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214234,"byte_end":14214241,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214242,"byte_end":14214264,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214265,"byte_end":14214306,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214307,"byte_end":14214310,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214311,"byte_end":14214359,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214360,"byte_end":14214363,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214364,"byte_end":14214410,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214411,"byte_end":14214457,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214458,"byte_end":14214500,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214501,"byte_end":14214508,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214509,"byte_end":14214516,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14445},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":14215308,"byte_end":14215311,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":14448},{"krate":0,"index":14449}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14396},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":14216381,"byte_end":14216386,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":14399},{"krate":0,"index":14400},{"krate":0,"index":14401}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10003},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":14218261,"byte_end":14218265,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":10006}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":14218105,"byte_end":14218164,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":14218182,"byte_end":14218249,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10011},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14218961,"byte_end":14218965,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":10013}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14218837,"byte_end":14218883,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14218901,"byte_end":14218949,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9635},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219537,"byte_end":14219541,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219041,"byte_end":14219097,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219098,"byte_end":14219101,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219102,"byte_end":14219181,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219182,"byte_end":14219185,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219186,"byte_end":14219200,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219201,"byte_end":14219204,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219205,"byte_end":14219212,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219213,"byte_end":14219254,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219255,"byte_end":14219258,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219259,"byte_end":14219277,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219278,"byte_end":14219299,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219300,"byte_end":14219338,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219339,"byte_end":14219377,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219378,"byte_end":14219381,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219382,"byte_end":14219428,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219429,"byte_end":14219432,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219433,"byte_end":14219471,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219472,"byte_end":14219515,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219516,"byte_end":14219521,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219522,"byte_end":14219529,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10017},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220164,"byte_end":14220171,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220034,"byte_end":14220086,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220104,"byte_end":14220152,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9672},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220911,"byte_end":14220918,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220302,"byte_end":14220342,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220343,"byte_end":14220346,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220347,"byte_end":14220405,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220406,"byte_end":14220477,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220478,"byte_end":14220547,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220548,"byte_end":14220592,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220593,"byte_end":14220596,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220597,"byte_end":14220611,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220612,"byte_end":14220615,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220616,"byte_end":14220632,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220633,"byte_end":14220636,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220637,"byte_end":14220650,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220651,"byte_end":14220692,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220693,"byte_end":14220696,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220697,"byte_end":14220715,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220716,"byte_end":14220737,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220738,"byte_end":14220787,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220788,"byte_end":14220791,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220792,"byte_end":14220827,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220828,"byte_end":14220855,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220856,"byte_end":14220859,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220860,"byte_end":14220883,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220884,"byte_end":14220889,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220890,"byte_end":14220897,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10024},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226567,"byte_end":14226576,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":10027}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221335,"byte_end":14221411,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221412,"byte_end":14221420,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221421,"byte_end":14221424,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221425,"byte_end":14221502,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221503,"byte_end":14221579,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221580,"byte_end":14221656,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221657,"byte_end":14221691,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221692,"byte_end":14221695,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221696,"byte_end":14221716,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221717,"byte_end":14221720,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221721,"byte_end":14221764,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221765,"byte_end":14221825,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221826,"byte_end":14221904,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221905,"byte_end":14221938,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221939,"byte_end":14221942,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14221943,"byte_end":14222022,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222023,"byte_end":14222103,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222104,"byte_end":14222176,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222177,"byte_end":14222201,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222202,"byte_end":14222205,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222206,"byte_end":14222219,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222220,"byte_end":14222223,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222224,"byte_end":14222302,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222303,"byte_end":14222372,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222373,"byte_end":14222452,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222453,"byte_end":14222484,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222485,"byte_end":14222488,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222489,"byte_end":14222509,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222510,"byte_end":14222513,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222514,"byte_end":14222591,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222592,"byte_end":14222669,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222670,"byte_end":14222747,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222748,"byte_end":14222822,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222823,"byte_end":14222901,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222902,"byte_end":14222979,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14222980,"byte_end":14223001,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223002,"byte_end":14223005,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223006,"byte_end":14223063,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223064,"byte_end":14223095,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223096,"byte_end":14223119,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223120,"byte_end":14223158,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223159,"byte_end":14223162,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223163,"byte_end":14223177,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223178,"byte_end":14223181,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223182,"byte_end":14223255,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223256,"byte_end":14223259,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223260,"byte_end":14223267,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223268,"byte_end":14223314,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223315,"byte_end":14223341,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223342,"byte_end":14223345,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223346,"byte_end":14223364,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223365,"byte_end":14223386,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223387,"byte_end":14223434,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223435,"byte_end":14223482,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223483,"byte_end":14223486,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223487,"byte_end":14223520,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223521,"byte_end":14223560,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223561,"byte_end":14223564,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223565,"byte_end":14223645,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223646,"byte_end":14223718,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223719,"byte_end":14223757,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223758,"byte_end":14223769,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223770,"byte_end":14223773,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223774,"byte_end":14223807,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223808,"byte_end":14223847,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223848,"byte_end":14223886,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223887,"byte_end":14223898,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223899,"byte_end":14223902,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223903,"byte_end":14223942,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223943,"byte_end":14223946,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223947,"byte_end":14223977,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14223978,"byte_end":14224009,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224010,"byte_end":14224041,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224042,"byte_end":14224045,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224046,"byte_end":14224067,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224068,"byte_end":14224091,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224092,"byte_end":14224147,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224148,"byte_end":14224151,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224152,"byte_end":14224181,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224182,"byte_end":14224217,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224218,"byte_end":14224238,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224239,"byte_end":14224274,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224275,"byte_end":14224288,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224289,"byte_end":14224292,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224293,"byte_end":14224359,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224360,"byte_end":14224388,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224389,"byte_end":14224398,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224399,"byte_end":14224404,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224405,"byte_end":14224412,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224413,"byte_end":14224416,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224417,"byte_end":14224495,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224496,"byte_end":14224572,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224573,"byte_end":14224613,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224614,"byte_end":14224617,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224618,"byte_end":14224695,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224696,"byte_end":14224733,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224734,"byte_end":14224737,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224738,"byte_end":14224751,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224752,"byte_end":14224806,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224807,"byte_end":14224810,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224811,"byte_end":14224829,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224830,"byte_end":14224851,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224852,"byte_end":14224874,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224875,"byte_end":14224880,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224881,"byte_end":14224884,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224885,"byte_end":14224935,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224936,"byte_end":14224991,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14224992,"byte_end":14225022,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225023,"byte_end":14225028,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225029,"byte_end":14225032,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225033,"byte_end":14225109,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225110,"byte_end":14225176,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225177,"byte_end":14225221,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225222,"byte_end":14225252,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225253,"byte_end":14225258,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225259,"byte_end":14225262,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225263,"byte_end":14225281,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225282,"byte_end":14225303,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225304,"byte_end":14225348,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225349,"byte_end":14225352,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225353,"byte_end":14225403,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225404,"byte_end":14225434,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225435,"byte_end":14225461,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225462,"byte_end":14225465,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225466,"byte_end":14225480,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225481,"byte_end":14225509,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225510,"byte_end":14225554,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225555,"byte_end":14225586,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225587,"byte_end":14225635,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225636,"byte_end":14225712,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225713,"byte_end":14225754,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225755,"byte_end":14225806,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225807,"byte_end":14225863,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225864,"byte_end":14225889,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225890,"byte_end":14225939,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225940,"byte_end":14225991,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14225992,"byte_end":14226017,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226018,"byte_end":14226039,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226040,"byte_end":14226057,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226058,"byte_end":14226114,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226115,"byte_end":14226195,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226196,"byte_end":14226238,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226239,"byte_end":14226289,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226290,"byte_end":14226307,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226308,"byte_end":14226383,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226384,"byte_end":14226460,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226461,"byte_end":14226491,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226492,"byte_end":14226505,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226506,"byte_end":14226515,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226516,"byte_end":14226521,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226522,"byte_end":14226529,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":9709},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227049,"byte_end":14227052,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226681,"byte_end":14226714,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226719,"byte_end":14226722,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226727,"byte_end":14226801,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226806,"byte_end":14226855,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226860,"byte_end":14226863,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226868,"byte_end":14226882,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226887,"byte_end":14226890,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226895,"byte_end":14226902,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226907,"byte_end":14226951,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226956,"byte_end":14226959,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226964,"byte_end":14227025,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227030,"byte_end":14227037,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9710},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227557,"byte_end":14227570,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227125,"byte_end":14227186,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227191,"byte_end":14227194,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227199,"byte_end":14227275,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227280,"byte_end":14227351,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227356,"byte_end":14227359,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227364,"byte_end":14227378,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227383,"byte_end":14227386,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227391,"byte_end":14227398,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227403,"byte_end":14227447,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227452,"byte_end":14227455,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227460,"byte_end":14227533,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227538,"byte_end":14227545,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9711},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228188,"byte_end":14228192,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227701,"byte_end":14227762,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227767,"byte_end":14227770,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227775,"byte_end":14227814,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227819,"byte_end":14227822,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227827,"byte_end":14227841,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227846,"byte_end":14227849,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227854,"byte_end":14227861,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227866,"byte_end":14227910,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227915,"byte_end":14227918,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227923,"byte_end":14227958,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227963,"byte_end":14227966,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14227971,"byte_end":14228009,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228014,"byte_end":14228045,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228050,"byte_end":14228081,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228086,"byte_end":14228089,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228094,"byte_end":14228121,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228126,"byte_end":14228154,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228159,"byte_end":14228164,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228169,"byte_end":14228176,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9714},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228776,"byte_end":14228782,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228285,"byte_end":14228340,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228345,"byte_end":14228348,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228353,"byte_end":14228392,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228397,"byte_end":14228400,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228405,"byte_end":14228419,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228424,"byte_end":14228427,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228432,"byte_end":14228439,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228444,"byte_end":14228488,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228493,"byte_end":14228496,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228501,"byte_end":14228536,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228541,"byte_end":14228544,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228549,"byte_end":14228587,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228592,"byte_end":14228623,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228628,"byte_end":14228659,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228664,"byte_end":14228667,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228672,"byte_end":14228704,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228709,"byte_end":14228742,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228747,"byte_end":14228752,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228757,"byte_end":14228764,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9717},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229382,"byte_end":14229392,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228875,"byte_end":14228938,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228943,"byte_end":14228946,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228951,"byte_end":14228994,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14228999,"byte_end":14229002,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229007,"byte_end":14229021,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229026,"byte_end":14229029,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229034,"byte_end":14229041,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229046,"byte_end":14229090,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229095,"byte_end":14229098,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229103,"byte_end":14229138,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229143,"byte_end":14229146,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229151,"byte_end":14229189,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229194,"byte_end":14229225,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229230,"byte_end":14229261,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229266,"byte_end":14229269,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229274,"byte_end":14229310,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229315,"byte_end":14229348,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229353,"byte_end":14229358,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229363,"byte_end":14229370,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9720},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229970,"byte_end":14229978,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229497,"byte_end":14229569,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229574,"byte_end":14229577,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229582,"byte_end":14229653,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229658,"byte_end":14229724,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229729,"byte_end":14229732,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229737,"byte_end":14229751,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229756,"byte_end":14229759,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229764,"byte_end":14229771,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229776,"byte_end":14229820,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229825,"byte_end":14229828,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229833,"byte_end":14229906,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229911,"byte_end":14229946,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14229951,"byte_end":14229958,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9721},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230354,"byte_end":14230357,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230040,"byte_end":14230085,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230090,"byte_end":14230093,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230098,"byte_end":14230112,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230117,"byte_end":14230120,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230125,"byte_end":14230132,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230137,"byte_end":14230181,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230186,"byte_end":14230189,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230194,"byte_end":14230227,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230232,"byte_end":14230259,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230264,"byte_end":14230298,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230303,"byte_end":14230330,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230335,"byte_end":14230342,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9722},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230708,"byte_end":14230716,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230414,"byte_end":14230465,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230470,"byte_end":14230473,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230478,"byte_end":14230492,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230497,"byte_end":14230500,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230505,"byte_end":14230512,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230517,"byte_end":14230551,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230556,"byte_end":14230559,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230564,"byte_end":14230595,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230600,"byte_end":14230626,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230631,"byte_end":14230652,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230657,"byte_end":14230684,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230689,"byte_end":14230696,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9723},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231128,"byte_end":14231133,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230777,"byte_end":14230847,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230852,"byte_end":14230873,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230878,"byte_end":14230881,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230886,"byte_end":14230900,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230905,"byte_end":14230908,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230913,"byte_end":14230920,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230925,"byte_end":14230969,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230974,"byte_end":14230977,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14230982,"byte_end":14231015,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231020,"byte_end":14231054,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231059,"byte_end":14231073,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231078,"byte_end":14231104,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231109,"byte_end":14231116,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9724},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231808,"byte_end":14231814,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231188,"byte_end":14231230,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231235,"byte_end":14231238,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231243,"byte_end":14231308,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231313,"byte_end":14231316,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231321,"byte_end":14231396,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231401,"byte_end":14231440,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231445,"byte_end":14231448,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231453,"byte_end":14231467,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231472,"byte_end":14231475,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231480,"byte_end":14231487,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231492,"byte_end":14231536,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231541,"byte_end":14231544,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231549,"byte_end":14231584,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231589,"byte_end":14231592,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231597,"byte_end":14231653,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231658,"byte_end":14231687,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231692,"byte_end":14231695,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231700,"byte_end":14231730,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231735,"byte_end":14231784,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231789,"byte_end":14231796,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9725},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232545,"byte_end":14232551,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14231993,"byte_end":14232094,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232099,"byte_end":14232102,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232107,"byte_end":14232181,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232186,"byte_end":14232250,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232255,"byte_end":14232258,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232263,"byte_end":14232277,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232282,"byte_end":14232285,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232290,"byte_end":14232297,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232302,"byte_end":14232346,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232351,"byte_end":14232354,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232359,"byte_end":14232394,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232399,"byte_end":14232435,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232440,"byte_end":14232478,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232483,"byte_end":14232521,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232526,"byte_end":14232533,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9727},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233385,"byte_end":14233397,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232853,"byte_end":14232923,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232928,"byte_end":14232931,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14232936,"byte_end":14233010,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233015,"byte_end":14233079,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233084,"byte_end":14233087,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233092,"byte_end":14233106,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233111,"byte_end":14233114,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233119,"byte_end":14233126,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233131,"byte_end":14233175,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233180,"byte_end":14233183,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233188,"byte_end":14233223,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233228,"byte_end":14233264,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233269,"byte_end":14233312,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233317,"byte_end":14233361,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233366,"byte_end":14233373,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":14359},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":14236337,"byte_end":14236341,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":14361},{"krate":0,"index":14362}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14314},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":14237903,"byte_end":14237912,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":14317},{"krate":0,"index":14318}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10036},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":14239716,"byte_end":14239723,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":10039}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":14239552,"byte_end":14239619,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":14239637,"byte_end":14239704,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":14277},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":14240572,"byte_end":14240576,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":14279},{"krate":0,"index":14280}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14228},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":14242419,"byte_end":14242428,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":14231},{"krate":0,"index":14232},{"krate":0,"index":14233}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14189},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":14273928,"byte_end":14273935,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":14191},{"krate":0,"index":14192},{"krate":0,"index":14193},{"krate":0,"index":14194}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":9931},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173101,"byte_end":14173110,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":9932},{"krate":0,"index":9933},{"krate":0,"index":9936},{"krate":0,"index":9939},{"krate":0,"index":9941},{"krate":0,"index":9943},{"krate":0,"index":9946},{"krate":0,"index":9947},{"krate":0,"index":9948},{"krate":0,"index":9950},{"krate":0,"index":9951},{"krate":0,"index":9953},{"krate":0,"index":9955},{"krate":0,"index":9957},{"krate":0,"index":9959},{"krate":0,"index":9962},{"krate":0,"index":9964}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14172990,"byte_end":14173064,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173065,"byte_end":14173090,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":9932},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174180,"byte_end":14174184,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173125,"byte_end":14173195,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173200,"byte_end":14173223,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173228,"byte_end":14173231,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173236,"byte_end":14173254,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173259,"byte_end":14173262,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173267,"byte_end":14173280,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173285,"byte_end":14173336,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173341,"byte_end":14173348,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173353,"byte_end":14173356,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173361,"byte_end":14173429,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173434,"byte_end":14173509,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173514,"byte_end":14173589,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173594,"byte_end":14173648,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173653,"byte_end":14173728,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173733,"byte_end":14173743,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173748,"byte_end":14173751,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173756,"byte_end":14173770,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173775,"byte_end":14173778,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173783,"byte_end":14173790,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173795,"byte_end":14173815,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173820,"byte_end":14173843,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173848,"byte_end":14173889,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173894,"byte_end":14173897,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173902,"byte_end":14173943,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173948,"byte_end":14173951,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173956,"byte_end":14174001,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174006,"byte_end":14174051,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174056,"byte_end":14174101,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174106,"byte_end":14174148,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174153,"byte_end":14174160,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174165,"byte_end":14174172,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9933},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175255,"byte_end":14175263,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174286,"byte_end":14174354,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174359,"byte_end":14174427,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174432,"byte_end":14174435,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174440,"byte_end":14174458,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174463,"byte_end":14174466,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174471,"byte_end":14174484,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174489,"byte_end":14174546,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174551,"byte_end":14174558,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174563,"byte_end":14174566,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174571,"byte_end":14174635,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174640,"byte_end":14174702,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174707,"byte_end":14174767,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174772,"byte_end":14174815,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174820,"byte_end":14174823,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174828,"byte_end":14174842,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174847,"byte_end":14174850,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174855,"byte_end":14174862,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174867,"byte_end":14174887,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174892,"byte_end":14174915,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174920,"byte_end":14174961,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174966,"byte_end":14174969,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14174974,"byte_end":14175041,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175046,"byte_end":14175049,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175054,"byte_end":14175107,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175112,"byte_end":14175165,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175170,"byte_end":14175223,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175228,"byte_end":14175235,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175240,"byte_end":14175247,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9936},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176331,"byte_end":14176334,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175407,"byte_end":14175482,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175487,"byte_end":14175510,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175515,"byte_end":14175518,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175523,"byte_end":14175595,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175600,"byte_end":14175664,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175669,"byte_end":14175706,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175711,"byte_end":14175714,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175719,"byte_end":14175795,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175800,"byte_end":14175871,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175876,"byte_end":14175897,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175902,"byte_end":14175905,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175910,"byte_end":14175924,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175929,"byte_end":14175932,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175937,"byte_end":14175944,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175949,"byte_end":14175969,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14175974,"byte_end":14175997,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176002,"byte_end":14176043,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176048,"byte_end":14176051,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176056,"byte_end":14176093,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176098,"byte_end":14176141,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176146,"byte_end":14176149,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176154,"byte_end":14176199,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176204,"byte_end":14176249,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176254,"byte_end":14176299,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176304,"byte_end":14176311,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176316,"byte_end":14176323,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9939},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178944,"byte_end":14178949,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176478,"byte_end":14176551,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176556,"byte_end":14176572,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176577,"byte_end":14176580,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176585,"byte_end":14176661,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176666,"byte_end":14176731,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176736,"byte_end":14176811,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176816,"byte_end":14176890,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176895,"byte_end":14176938,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176943,"byte_end":14176946,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14176951,"byte_end":14177026,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177031,"byte_end":14177097,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177102,"byte_end":14177145,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177150,"byte_end":14177153,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177158,"byte_end":14177229,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177234,"byte_end":14177237,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177242,"byte_end":14177285,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177290,"byte_end":14177293,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177298,"byte_end":14177312,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177317,"byte_end":14177320,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177325,"byte_end":14177332,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177337,"byte_end":14177370,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177375,"byte_end":14177401,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177406,"byte_end":14177426,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177431,"byte_end":14177434,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177439,"byte_end":14177467,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177472,"byte_end":14177475,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177480,"byte_end":14177488,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177493,"byte_end":14177511,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177516,"byte_end":14177524,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177529,"byte_end":14177566,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177571,"byte_end":14177592,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177597,"byte_end":14177617,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177622,"byte_end":14177669,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177674,"byte_end":14177721,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177726,"byte_end":14177729,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177734,"byte_end":14177770,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177775,"byte_end":14177778,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177783,"byte_end":14177816,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177821,"byte_end":14177864,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177869,"byte_end":14177908,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177913,"byte_end":14177952,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177957,"byte_end":14177960,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14177965,"byte_end":14178010,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178015,"byte_end":14178076,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178081,"byte_end":14178084,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178089,"byte_end":14178128,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178133,"byte_end":14178144,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178149,"byte_end":14178152,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178157,"byte_end":14178190,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178195,"byte_end":14178248,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178253,"byte_end":14178313,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178318,"byte_end":14178321,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178326,"byte_end":14178365,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178370,"byte_end":14178373,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178378,"byte_end":14178439,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178444,"byte_end":14178447,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178452,"byte_end":14178487,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178492,"byte_end":14178531,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178536,"byte_end":14178547,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178552,"byte_end":14178555,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178560,"byte_end":14178607,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178612,"byte_end":14178659,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178664,"byte_end":14178711,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178716,"byte_end":14178763,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178768,"byte_end":14178815,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178820,"byte_end":14178823,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178828,"byte_end":14178867,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178872,"byte_end":14178914,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178919,"byte_end":14178924,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14178929,"byte_end":14178936,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9941},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180254,"byte_end":14180260,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179105,"byte_end":14179177,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179182,"byte_end":14179196,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179201,"byte_end":14179204,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179209,"byte_end":14179284,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179289,"byte_end":14179335,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179340,"byte_end":14179412,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179417,"byte_end":14179466,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179471,"byte_end":14179529,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179534,"byte_end":14179537,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179542,"byte_end":14179618,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179623,"byte_end":14179695,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179700,"byte_end":14179721,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179726,"byte_end":14179729,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179734,"byte_end":14179748,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179753,"byte_end":14179756,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179761,"byte_end":14179768,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179773,"byte_end":14179793,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179798,"byte_end":14179821,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179826,"byte_end":14179867,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179872,"byte_end":14179875,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179880,"byte_end":14179917,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179922,"byte_end":14179972,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179977,"byte_end":14179980,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14179985,"byte_end":14180029,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180034,"byte_end":14180078,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180083,"byte_end":14180127,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180132,"byte_end":14180176,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180181,"byte_end":14180222,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180227,"byte_end":14180234,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180239,"byte_end":14180246,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9943},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181627,"byte_end":14181637,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180411,"byte_end":14180486,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180491,"byte_end":14180554,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180559,"byte_end":14180562,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180567,"byte_end":14180642,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180647,"byte_end":14180699,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180704,"byte_end":14180780,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180785,"byte_end":14180845,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180850,"byte_end":14180853,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180858,"byte_end":14180934,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14180939,"byte_end":14181015,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181020,"byte_end":14181041,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181046,"byte_end":14181049,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181054,"byte_end":14181068,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181073,"byte_end":14181080,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181085,"byte_end":14181105,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181110,"byte_end":14181133,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181138,"byte_end":14181179,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181184,"byte_end":14181187,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181192,"byte_end":14181229,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181234,"byte_end":14181277,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181282,"byte_end":14181333,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181338,"byte_end":14181345,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181350,"byte_end":14181353,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181358,"byte_end":14181402,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181407,"byte_end":14181451,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181456,"byte_end":14181500,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181505,"byte_end":14181549,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181554,"byte_end":14181595,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181600,"byte_end":14181607,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181612,"byte_end":14181619,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9946},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183769,"byte_end":14183773,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181801,"byte_end":14181856,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181861,"byte_end":14181864,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181869,"byte_end":14181942,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14181947,"byte_end":14182019,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182024,"byte_end":14182098,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182103,"byte_end":14182129,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182134,"byte_end":14182137,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182142,"byte_end":14182156,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182161,"byte_end":14182164,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182169,"byte_end":14182176,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182181,"byte_end":14182224,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182229,"byte_end":14182232,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182237,"byte_end":14182259,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182264,"byte_end":14182299,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182304,"byte_end":14182307,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182312,"byte_end":14182366,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182371,"byte_end":14182393,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182398,"byte_end":14182417,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182422,"byte_end":14182427,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182432,"byte_end":14182435,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182440,"byte_end":14182471,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182476,"byte_end":14182500,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182505,"byte_end":14182508,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182513,"byte_end":14182605,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182610,"byte_end":14182643,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182648,"byte_end":14182688,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182693,"byte_end":14182696,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182701,"byte_end":14182750,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182755,"byte_end":14182784,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182789,"byte_end":14182827,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182832,"byte_end":14182852,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182857,"byte_end":14182890,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182895,"byte_end":14182908,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182913,"byte_end":14182922,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182927,"byte_end":14182932,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182937,"byte_end":14182940,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182945,"byte_end":14182963,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182968,"byte_end":14182989,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14182994,"byte_end":14183042,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183047,"byte_end":14183050,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183055,"byte_end":14183096,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183101,"byte_end":14183150,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183155,"byte_end":14183201,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183206,"byte_end":14183255,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183260,"byte_end":14183306,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183311,"byte_end":14183314,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183319,"byte_end":14183355,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183360,"byte_end":14183399,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183404,"byte_end":14183407,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183412,"byte_end":14183461,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183466,"byte_end":14183512,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183517,"byte_end":14183520,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183525,"byte_end":14183586,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183591,"byte_end":14183637,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183642,"byte_end":14183688,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183693,"byte_end":14183739,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183744,"byte_end":14183749,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183754,"byte_end":14183761,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9947},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184509,"byte_end":14184513,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183866,"byte_end":14183937,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183942,"byte_end":14183945,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14183950,"byte_end":14184023,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184028,"byte_end":14184063,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184068,"byte_end":14184071,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184076,"byte_end":14184090,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184095,"byte_end":14184098,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184103,"byte_end":14184110,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184115,"byte_end":14184135,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184140,"byte_end":14184163,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184168,"byte_end":14184209,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184214,"byte_end":14184217,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184222,"byte_end":14184272,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184277,"byte_end":14184280,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184285,"byte_end":14184330,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184335,"byte_end":14184380,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184385,"byte_end":14184430,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184435,"byte_end":14184477,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184482,"byte_end":14184489,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184494,"byte_end":14184501,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9948},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185406,"byte_end":14185416,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184619,"byte_end":14184682,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184687,"byte_end":14184710,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184715,"byte_end":14184718,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184723,"byte_end":14184798,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184803,"byte_end":14184875,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184880,"byte_end":14184944,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184949,"byte_end":14184952,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184957,"byte_end":14184971,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184976,"byte_end":14184979,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184984,"byte_end":14184991,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14184996,"byte_end":14185016,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185021,"byte_end":14185044,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185049,"byte_end":14185090,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185095,"byte_end":14185098,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185103,"byte_end":14185169,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185174,"byte_end":14185177,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185182,"byte_end":14185227,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185232,"byte_end":14185277,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185282,"byte_end":14185327,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185332,"byte_end":14185374,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185379,"byte_end":14185386,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185391,"byte_end":14185398,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9950},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186113,"byte_end":14186117,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185573,"byte_end":14185639,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185644,"byte_end":14185666,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185671,"byte_end":14185674,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185679,"byte_end":14185693,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185698,"byte_end":14185701,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185706,"byte_end":14185713,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185718,"byte_end":14185738,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185743,"byte_end":14185766,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185771,"byte_end":14185812,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185817,"byte_end":14185820,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185825,"byte_end":14185875,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185880,"byte_end":14185883,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185888,"byte_end":14185933,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185938,"byte_end":14185983,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14185988,"byte_end":14186034,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186039,"byte_end":14186081,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186086,"byte_end":14186093,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186098,"byte_end":14186105,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9951},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187095,"byte_end":14187105,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186223,"byte_end":14186296,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186301,"byte_end":14186324,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186329,"byte_end":14186332,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186337,"byte_end":14186415,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186420,"byte_end":14186492,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186497,"byte_end":14186557,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186562,"byte_end":14186565,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186570,"byte_end":14186633,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186638,"byte_end":14186641,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186646,"byte_end":14186660,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186665,"byte_end":14186668,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186673,"byte_end":14186680,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186685,"byte_end":14186705,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186710,"byte_end":14186733,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186738,"byte_end":14186779,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186784,"byte_end":14186858,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186863,"byte_end":14186866,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186871,"byte_end":14186916,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186921,"byte_end":14186966,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14186971,"byte_end":14187016,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187021,"byte_end":14187063,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187068,"byte_end":14187075,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187080,"byte_end":14187087,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9953},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188684,"byte_end":14188687,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187262,"byte_end":14187323,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187328,"byte_end":14187331,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187336,"byte_end":14187406,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187411,"byte_end":14187481,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187486,"byte_end":14187551,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187556,"byte_end":14187608,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187613,"byte_end":14187616,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187621,"byte_end":14187693,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187698,"byte_end":14187772,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187777,"byte_end":14187813,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187818,"byte_end":14187821,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187826,"byte_end":14187861,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187866,"byte_end":14187869,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187874,"byte_end":14187888,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187893,"byte_end":14187896,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187901,"byte_end":14187917,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187922,"byte_end":14187925,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187930,"byte_end":14187937,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187942,"byte_end":14187962,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187967,"byte_end":14187990,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14187995,"byte_end":14188036,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188041,"byte_end":14188044,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188049,"byte_end":14188071,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188076,"byte_end":14188079,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188084,"byte_end":14188136,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188141,"byte_end":14188144,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188149,"byte_end":14188202,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188207,"byte_end":14188214,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188219,"byte_end":14188226,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188231,"byte_end":14188234,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188239,"byte_end":14188273,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188278,"byte_end":14188281,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188286,"byte_end":14188293,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188298,"byte_end":14188318,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188323,"byte_end":14188346,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188351,"byte_end":14188392,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188397,"byte_end":14188400,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188405,"byte_end":14188427,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188432,"byte_end":14188435,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188440,"byte_end":14188476,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188481,"byte_end":14188484,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188489,"byte_end":14188531,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188536,"byte_end":14188539,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188544,"byte_end":14188603,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188608,"byte_end":14188652,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188657,"byte_end":14188664,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188669,"byte_end":14188676,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9955},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190212,"byte_end":14190215,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188852,"byte_end":14188911,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188916,"byte_end":14188919,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188924,"byte_end":14188994,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14188999,"byte_end":14189072,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189077,"byte_end":14189141,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189146,"byte_end":14189166,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189171,"byte_end":14189174,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189179,"byte_end":14189251,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189256,"byte_end":14189329,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189334,"byte_end":14189369,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189374,"byte_end":14189377,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189382,"byte_end":14189418,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189423,"byte_end":14189426,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189431,"byte_end":14189447,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189452,"byte_end":14189455,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189460,"byte_end":14189467,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189472,"byte_end":14189492,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189497,"byte_end":14189520,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189525,"byte_end":14189566,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189571,"byte_end":14189574,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189579,"byte_end":14189601,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189606,"byte_end":14189609,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189614,"byte_end":14189666,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189671,"byte_end":14189674,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189679,"byte_end":14189732,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189737,"byte_end":14189744,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189749,"byte_end":14189756,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189761,"byte_end":14189764,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189769,"byte_end":14189802,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189807,"byte_end":14189810,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189815,"byte_end":14189822,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189827,"byte_end":14189847,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189852,"byte_end":14189875,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189880,"byte_end":14189921,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189926,"byte_end":14189929,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189934,"byte_end":14189956,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189961,"byte_end":14189964,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14189969,"byte_end":14190005,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190010,"byte_end":14190013,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190018,"byte_end":14190059,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190064,"byte_end":14190067,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190072,"byte_end":14190131,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190136,"byte_end":14190180,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190185,"byte_end":14190192,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190197,"byte_end":14190204,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9957},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191358,"byte_end":14191363,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190380,"byte_end":14190451,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190456,"byte_end":14190512,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190517,"byte_end":14190520,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190525,"byte_end":14190599,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190604,"byte_end":14190640,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190645,"byte_end":14190648,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190653,"byte_end":14190667,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190672,"byte_end":14190675,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190680,"byte_end":14190687,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190692,"byte_end":14190733,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190738,"byte_end":14190741,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190746,"byte_end":14190764,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190769,"byte_end":14190790,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190795,"byte_end":14190841,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190846,"byte_end":14190892,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190897,"byte_end":14190900,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190905,"byte_end":14190945,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190950,"byte_end":14190953,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14190958,"byte_end":14191007,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191012,"byte_end":14191061,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191066,"byte_end":14191115,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191120,"byte_end":14191169,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191174,"byte_end":14191223,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191228,"byte_end":14191277,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191282,"byte_end":14191328,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191333,"byte_end":14191338,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191343,"byte_end":14191350,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9959},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191956,"byte_end":14191960,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191519,"byte_end":14191588,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191593,"byte_end":14191629,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191634,"byte_end":14191637,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191642,"byte_end":14191656,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191661,"byte_end":14191677,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191682,"byte_end":14191689,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191694,"byte_end":14191714,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191719,"byte_end":14191742,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191747,"byte_end":14191780,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191785,"byte_end":14191788,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191793,"byte_end":14191835,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191840,"byte_end":14191888,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191893,"byte_end":14191896,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191901,"byte_end":14191924,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191929,"byte_end":14191936,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14191941,"byte_end":14191948,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9962},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194273,"byte_end":14194280,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192139,"byte_end":14192201,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192206,"byte_end":14192209,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192214,"byte_end":14192290,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192295,"byte_end":14192362,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192367,"byte_end":14192415,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192420,"byte_end":14192485,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192490,"byte_end":14192493,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192498,"byte_end":14192512,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192517,"byte_end":14192520,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192525,"byte_end":14192599,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192604,"byte_end":14192676,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192681,"byte_end":14192756,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192761,"byte_end":14192823,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192828,"byte_end":14192831,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192836,"byte_end":14192847,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192852,"byte_end":14192855,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192860,"byte_end":14192930,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192935,"byte_end":14192973,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192978,"byte_end":14192981,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14192986,"byte_end":14193000,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193005,"byte_end":14193008,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193013,"byte_end":14193029,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193034,"byte_end":14193037,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193042,"byte_end":14193049,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193054,"byte_end":14193095,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193100,"byte_end":14193103,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193108,"byte_end":14193126,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193131,"byte_end":14193152,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193157,"byte_end":14193188,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193193,"byte_end":14193232,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193237,"byte_end":14193268,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193273,"byte_end":14193299,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193304,"byte_end":14193327,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193332,"byte_end":14193335,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193340,"byte_end":14193383,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193388,"byte_end":14193393,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193398,"byte_end":14193405,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193410,"byte_end":14193413,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193418,"byte_end":14193460,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193465,"byte_end":14193468,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193473,"byte_end":14193480,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193485,"byte_end":14193526,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193531,"byte_end":14193534,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193539,"byte_end":14193557,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193562,"byte_end":14193583,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193588,"byte_end":14193653,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193658,"byte_end":14193702,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193707,"byte_end":14193758,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193763,"byte_end":14193789,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193794,"byte_end":14193817,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193822,"byte_end":14193825,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193830,"byte_end":14193876,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193881,"byte_end":14193884,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193889,"byte_end":14193961,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14193966,"byte_end":14194038,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194043,"byte_end":14194046,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194051,"byte_end":14194095,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194100,"byte_end":14194133,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194138,"byte_end":14194164,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194169,"byte_end":14194192,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194197,"byte_end":14194200,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194205,"byte_end":14194243,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194248,"byte_end":14194253,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194258,"byte_end":14194265,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9964},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196935,"byte_end":14196942,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":9931},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194420,"byte_end":14194472,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194477,"byte_end":14194480,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194485,"byte_end":14194557,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194562,"byte_end":14194632,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194637,"byte_end":14194640,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194645,"byte_end":14194721,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194726,"byte_end":14194803,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194808,"byte_end":14194884,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194889,"byte_end":14194932,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194937,"byte_end":14194940,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194945,"byte_end":14194956,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194961,"byte_end":14194964,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14194969,"byte_end":14195035,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195040,"byte_end":14195066,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195071,"byte_end":14195074,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195079,"byte_end":14195154,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195159,"byte_end":14195193,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195198,"byte_end":14195201,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195206,"byte_end":14195220,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195225,"byte_end":14195228,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195233,"byte_end":14195307,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195312,"byte_end":14195315,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195320,"byte_end":14195327,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195332,"byte_end":14195352,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195357,"byte_end":14195380,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195385,"byte_end":14195426,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195431,"byte_end":14195459,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195464,"byte_end":14195507,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195512,"byte_end":14195515,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195520,"byte_end":14195588,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195593,"byte_end":14195596,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195601,"byte_end":14195668,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195673,"byte_end":14195730,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195735,"byte_end":14195792,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195797,"byte_end":14195854,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195859,"byte_end":14195913,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195918,"byte_end":14195921,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14195926,"byte_end":14196011,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196016,"byte_end":14196092,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196097,"byte_end":14196154,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196159,"byte_end":14196209,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196214,"byte_end":14196271,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196276,"byte_end":14196333,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196338,"byte_end":14196392,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196397,"byte_end":14196400,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196405,"byte_end":14196476,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196481,"byte_end":14196544,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196549,"byte_end":14196621,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196626,"byte_end":14196688,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196693,"byte_end":14196696,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196701,"byte_end":14196758,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196763,"byte_end":14196817,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196822,"byte_end":14196829,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196834,"byte_end":14196841,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14196846,"byte_end":14196875,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":10095},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":10096},{"krate":0,"index":10110},{"krate":0,"index":10111},{"krate":0,"index":10114},{"krate":0,"index":10117},{"krate":0,"index":10344},{"krate":0,"index":10921},{"krate":0,"index":11023},{"krate":0,"index":11024},{"krate":0,"index":11027},{"krate":0,"index":11030},{"krate":0,"index":11033},{"krate":0,"index":11036},{"krate":0,"index":11111},{"krate":0,"index":11114},{"krate":0,"index":11269},{"krate":0,"index":11390},{"krate":0,"index":11568},{"krate":0,"index":11597},{"krate":0,"index":11598},{"krate":0,"index":11601},{"krate":0,"index":11604},{"krate":0,"index":11607},{"krate":0,"index":11722},{"krate":0,"index":11723},{"krate":0,"index":11726},{"krate":0,"index":11729},{"krate":0,"index":11732},{"krate":0,"index":11795},{"krate":0,"index":11798}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275474,"byte_end":14275538,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275539,"byte_end":14275542,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275543,"byte_end":14275618,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275619,"byte_end":14275699,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275700,"byte_end":14275779,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275780,"byte_end":14275814,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275815,"byte_end":14275818,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275819,"byte_end":14275843,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275844,"byte_end":14275847,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275848,"byte_end":14275869,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275870,"byte_end":14275873,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275874,"byte_end":14275947,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14275948,"byte_end":14276027,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276028,"byte_end":14276097,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276098,"byte_end":14276101,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276102,"byte_end":14276181,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276182,"byte_end":14276259,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276260,"byte_end":14276335,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276336,"byte_end":14276408,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276409,"byte_end":14276481,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276482,"byte_end":14276559,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ messages.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276560,"byte_end":14276573,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276574,"byte_end":14276577,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276578,"byte_end":14276656,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276657,"byte_end":14276718,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276719,"byte_end":14276722,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276723,"byte_end":14276747,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276748,"byte_end":14276751,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276752,"byte_end":14276831,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276832,"byte_end":14276910,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276911,"byte_end":14276955,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276956,"byte_end":14276959,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14276960,"byte_end":14277040,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277041,"byte_end":14277057,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277058,"byte_end":14277061,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277062,"byte_end":14277069,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277070,"byte_end":14277099,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277100,"byte_end":14277103,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277104,"byte_end":14277147,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277148,"byte_end":14277210,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277211,"byte_end":14277216,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277217,"byte_end":14277220,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277221,"byte_end":14277239,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277240,"byte_end":14277261,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277262,"byte_end":14277304,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277305,"byte_end":14277308,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277309,"byte_end":14277342,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277343,"byte_end":14277390,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277391,"byte_end":14277425,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277426,"byte_end":14277437,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277438,"byte_end":14277441,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277442,"byte_end":14277519,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277520,"byte_end":14277523,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277524,"byte_end":14277566,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277567,"byte_end":14277603,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277604,"byte_end":14277609,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277610,"byte_end":14277617,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277618,"byte_end":14277621,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277622,"byte_end":14277686,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277687,"byte_end":14277751,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277752,"byte_end":14277814,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277815,"byte_end":14277885,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277886,"byte_end":14277951,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277952,"byte_end":14277962,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277963,"byte_end":14277966,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277967,"byte_end":14277983,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277984,"byte_end":14277987,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277988,"byte_end":14277995,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14277996,"byte_end":14278039,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278040,"byte_end":14278091,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278092,"byte_end":14278097,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278098,"byte_end":14278101,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278102,"byte_end":14278120,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278121,"byte_end":14278142,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278143,"byte_end":14278194,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278195,"byte_end":14278231,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278232,"byte_end":14278243,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278244,"byte_end":14278247,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278248,"byte_end":14278325,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278326,"byte_end":14278329,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278330,"byte_end":14278372,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278373,"byte_end":14278418,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278419,"byte_end":14278424,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278425,"byte_end":14278432,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278433,"byte_end":14278436,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278437,"byte_end":14278459,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278460,"byte_end":14278503,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278504,"byte_end":14278507,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278508,"byte_end":14278529,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278530,"byte_end":14278533,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278534,"byte_end":14278611,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278612,"byte_end":14278692,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278693,"byte_end":14278748,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278749,"byte_end":14278752,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278753,"byte_end":14278831,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278832,"byte_end":14278852,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278853,"byte_end":14278856,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278857,"byte_end":14278864,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278865,"byte_end":14278891,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278892,"byte_end":14278895,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278896,"byte_end":14278949,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14278950,"byte_end":14279004,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279005,"byte_end":14279010,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279011,"byte_end":14279014,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279015,"byte_end":14279033,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279034,"byte_end":14279055,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279056,"byte_end":14279106,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279107,"byte_end":14279110,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279111,"byte_end":14279144,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279145,"byte_end":14279173,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279174,"byte_end":14279226,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279227,"byte_end":14279271,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279272,"byte_end":14279285,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279286,"byte_end":14279297,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279298,"byte_end":14279301,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279302,"byte_end":14279349,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279350,"byte_end":14279388,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279389,"byte_end":14279398,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279399,"byte_end":14279404,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279405,"byte_end":14279412,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279413,"byte_end":14279416,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279417,"byte_end":14279497,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279498,"byte_end":14279575,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279576,"byte_end":14279649,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279650,"byte_end":14279725,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279726,"byte_end":14279739,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279740,"byte_end":14279743,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279744,"byte_end":14279819,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279820,"byte_end":14279899,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279900,"byte_end":14279978,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14279979,"byte_end":14280058,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280059,"byte_end":14280139,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280140,"byte_end":14280205,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280206,"byte_end":14280209,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280210,"byte_end":14280290,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280291,"byte_end":14280303,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280304,"byte_end":14280307,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280308,"byte_end":14280321,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280322,"byte_end":14280363,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280364,"byte_end":14280394,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280395,"byte_end":14280421,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280422,"byte_end":14280425,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280426,"byte_end":14280444,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280445,"byte_end":14280484,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280485,"byte_end":14280560,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280561,"byte_end":14280607,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280608,"byte_end":14280611,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280612,"byte_end":14280636,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280637,"byte_end":14280716,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280717,"byte_end":14280748,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let mut tx = tx.clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280749,"byte_end":14280785,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280786,"byte_end":14280789,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280790,"byte_end":14280827,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280828,"byte_end":14280890,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280891,"byte_end":14280906,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280907,"byte_end":14280916,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280917,"byte_end":14280920,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14280921,"byte_end":14281000,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281001,"byte_end":14281076,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281077,"byte_end":14281155,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281156,"byte_end":14281203,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281204,"byte_end":14281221,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281222,"byte_end":14281225,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281226,"byte_end":14281273,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281274,"byte_end":14281315,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281316,"byte_end":14281325,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281326,"byte_end":14281329,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281330,"byte_end":14281344,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281345,"byte_end":14281350,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281351,"byte_end":14281358,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281359,"byte_end":14281362,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281363,"byte_end":14281438,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281439,"byte_end":14281514,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281515,"byte_end":14281594,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281595,"byte_end":14281660,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281661,"byte_end":14281738,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281739,"byte_end":14281742,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281743,"byte_end":14281821,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281822,"byte_end":14281902,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281903,"byte_end":14281948,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281949,"byte_end":14281952,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281953,"byte_end":14281960,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281961,"byte_end":14281998,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14281999,"byte_end":14282026,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282027,"byte_end":14282030,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282031,"byte_end":14282049,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282050,"byte_end":14282068,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282069,"byte_end":14282112,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282113,"byte_end":14282118,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282119,"byte_end":14282122,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282123,"byte_end":14282141,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282142,"byte_end":14282163,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282164,"byte_end":14282253,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282254,"byte_end":14282257,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282258,"byte_end":14282303,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282304,"byte_end":14282337,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282338,"byte_end":14282375,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282376,"byte_end":14282379,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282380,"byte_end":14282447,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282448,"byte_end":14282475,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282476,"byte_end":14282510,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282511,"byte_end":14282554,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282555,"byte_end":14282592,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282593,"byte_end":14282646,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282647,"byte_end":14282668,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282669,"byte_end":14282686,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282687,"byte_end":14282700,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282701,"byte_end":14282712,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282713,"byte_end":14282716,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282717,"byte_end":14282755,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282756,"byte_end":14282759,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282760,"byte_end":14282820,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282821,"byte_end":14282845,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282846,"byte_end":14282890,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282891,"byte_end":14282894,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282895,"byte_end":14282950,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14282951,"byte_end":14283011,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283012,"byte_end":14283015,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283016,"byte_end":14283086,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283087,"byte_end":14283136,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283137,"byte_end":14283140,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283141,"byte_end":14283194,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283195,"byte_end":14283211,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283212,"byte_end":14283221,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283222,"byte_end":14283225,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283226,"byte_end":14283267,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283268,"byte_end":14283319,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283320,"byte_end":14283359,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283360,"byte_end":14283369,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283370,"byte_end":14283375,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283376,"byte_end":14283383,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283384,"byte_end":14283387,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283388,"byte_end":14283404,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283405,"byte_end":14283408,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283409,"byte_end":14283435,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283436,"byte_end":14283439,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283440,"byte_end":14283507,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283508,"byte_end":14283580,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283581,"byte_end":14283654,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283655,"byte_end":14283708,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283709,"byte_end":14283712,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283713,"byte_end":14283793,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283794,"byte_end":14283816,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283817,"byte_end":14283820,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283821,"byte_end":14283836,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283837,"byte_end":14283840,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283841,"byte_end":14283848,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283849,"byte_end":14283880,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283881,"byte_end":14283884,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283885,"byte_end":14283903,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283904,"byte_end":14283925,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283926,"byte_end":14283977,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14283978,"byte_end":14284015,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284016,"byte_end":14284019,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284020,"byte_end":14284053,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284054,"byte_end":14284108,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284109,"byte_end":14284163,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284164,"byte_end":14284175,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284176,"byte_end":14284179,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284180,"byte_end":14284213,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284214,"byte_end":14284268,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284269,"byte_end":14284323,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284324,"byte_end":14284335,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284336,"byte_end":14284339,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284340,"byte_end":14284369,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284370,"byte_end":14284399,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284400,"byte_end":14284405,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284406,"byte_end":14284413,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284414,"byte_end":14284417,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284418,"byte_end":14284467,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284468,"byte_end":14284471,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284472,"byte_end":14284494,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284495,"byte_end":14284498,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284499,"byte_end":14284575,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284576,"byte_end":14284654,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284655,"byte_end":14284734,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284735,"byte_end":14284800,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284801,"byte_end":14284804,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284805,"byte_end":14284885,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284886,"byte_end":14284889,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284890,"byte_end":14284964,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14284965,"byte_end":14285038,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285039,"byte_end":14285052,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285053,"byte_end":14285056,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285057,"byte_end":14285130,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285131,"byte_end":14285211,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285212,"byte_end":14285287,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285288,"byte_end":14285291,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285292,"byte_end":14285299,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285300,"byte_end":14285327,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285328,"byte_end":14285375,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285376,"byte_end":14285379,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285380,"byte_end":14285396,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285397,"byte_end":14285400,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285401,"byte_end":14285443,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285444,"byte_end":14285463,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285464,"byte_end":14285490,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285491,"byte_end":14285496,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285497,"byte_end":14285500,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285501,"byte_end":14285518,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285519,"byte_end":14285576,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285577,"byte_end":14285635,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285636,"byte_end":14285688,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285689,"byte_end":14285698,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285699,"byte_end":14285704,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285705,"byte_end":14285708,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285709,"byte_end":14285744,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285745,"byte_end":14285773,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285774,"byte_end":14285779,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285780,"byte_end":14285783,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285784,"byte_end":14285802,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285803,"byte_end":14285824,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285825,"byte_end":14285868,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285869,"byte_end":14285934,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285935,"byte_end":14285938,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14285939,"byte_end":14286017,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286018,"byte_end":14286072,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286073,"byte_end":14286076,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286077,"byte_end":14286121,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286122,"byte_end":14286155,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286156,"byte_end":14286174,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286175,"byte_end":14286224,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286225,"byte_end":14286288,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286289,"byte_end":14286292,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286293,"byte_end":14286339,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286340,"byte_end":14286413,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286414,"byte_end":14286417,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286418,"byte_end":14286492,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286493,"byte_end":14286533,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286534,"byte_end":14286575,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286576,"byte_end":14286638,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/                 config = new_config;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286639,"byte_end":14286679,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286680,"byte_end":14286697,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286698,"byte_end":14286711,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286712,"byte_end":14286723,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286724,"byte_end":14286727,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286728,"byte_end":14286761,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286762,"byte_end":14286765,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286766,"byte_end":14286844,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286845,"byte_end":14286899,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286900,"byte_end":14286910,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286911,"byte_end":14286988,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14286989,"byte_end":14287067,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287068,"byte_end":14287103,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287104,"byte_end":14287127,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287128,"byte_end":14287191,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287192,"byte_end":14287228,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287229,"byte_end":14287232,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287233,"byte_end":14287283,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287284,"byte_end":14287363,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287364,"byte_end":14287439,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287440,"byte_end":14287493,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287494,"byte_end":14287540,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287541,"byte_end":14287573,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287574,"byte_end":14287577,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Receive the **initial** configuration value. As this is the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287578,"byte_end":14287656,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"/             // first time the config is received from the watch, it will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287657,"byte_end":14287733,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"/             // always complete immediatedly.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287734,"byte_end":14287782,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"/             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287783,"byte_end":14287839,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287840,"byte_end":14287843,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287844,"byte_end":14287894,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"/             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287895,"byte_end":14287970,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287971,"byte_end":14287974,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287975,"byte_end":14287997,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14287998,"byte_end":14288034,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut delay => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288035,"byte_end":14288078,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288079,"byte_end":14288143,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288144,"byte_end":14288201,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288202,"byte_end":14288205,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288206,"byte_end":14288261,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288262,"byte_end":14288316,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288317,"byte_end":14288320,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288321,"byte_end":14288371,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288372,"byte_end":14288451,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/                     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288452,"byte_end":14288477,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/                     new_conf = rx.recv() => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288478,"byte_end":14288527,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/                         conf = new_conf.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288528,"byte_end":14288581,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288582,"byte_end":14288585,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288586,"byte_end":14288663,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"/                         // `delay` using the new `timeout` value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288664,"byte_end":14288733,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/                         delay.reset(op_start + conf.timeout);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288734,"byte_end":14288799,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"/                     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288800,"byte_end":14288825,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288826,"byte_end":14288866,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288867,"byte_end":14288922,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288923,"byte_end":14288957,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288958,"byte_end":14288983,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14288984,"byte_end":14289005,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289006,"byte_end":14289023,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289024,"byte_end":14289039,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289040,"byte_end":14289043,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289044,"byte_end":14289077,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289078,"byte_end":14289087,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289088,"byte_end":14289091,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289092,"byte_end":14289133,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289134,"byte_end":14289168,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289169,"byte_end":14289178,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289179,"byte_end":14289184,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289185,"byte_end":14289192,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289193,"byte_end":14289196,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289197,"byte_end":14289242,"line_start":402,"line_end":402,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289243,"byte_end":14289296,"line_start":403,"line_end":403,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289297,"byte_end":14289300,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289301,"byte_end":14289328,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289329,"byte_end":14289332,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289333,"byte_end":14289407,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289408,"byte_end":14289482,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289483,"byte_end":14289559,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289560,"byte_end":14289610,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289611,"byte_end":14289614,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289615,"byte_end":14289692,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289693,"byte_end":14289770,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289771,"byte_end":14289774,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289775,"byte_end":14289852,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289853,"byte_end":14289908,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289909,"byte_end":14289912,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289913,"byte_end":14289992,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14289993,"byte_end":14290071,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290072,"byte_end":14290097,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290098,"byte_end":14290101,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290102,"byte_end":14290177,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290178,"byte_end":14290254,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290255,"byte_end":14290322,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290323,"byte_end":14290326,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290327,"byte_end":14290403,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290404,"byte_end":14290480,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290481,"byte_end":14290555,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290556,"byte_end":14290583,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":11920},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292717,"byte_end":14292724,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":11921},{"krate":0,"index":11922},{"krate":0,"index":11923}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14291764,"byte_end":14291852,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14291853,"byte_end":14291856,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14291857,"byte_end":14291864,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14291865,"byte_end":14291885,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14291886,"byte_end":14291909,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14291910,"byte_end":14291939,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14291940,"byte_end":14291943,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14291944,"byte_end":14291978,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14291979,"byte_end":14292002,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292003,"byte_end":14292006,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292007,"byte_end":14292052,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292053,"byte_end":14292098,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292099,"byte_end":14292119,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292120,"byte_end":14292152,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292153,"byte_end":14292207,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292208,"byte_end":14292253,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292254,"byte_end":14292287,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292288,"byte_end":14292324,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292325,"byte_end":14292361,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292362,"byte_end":14292397,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292398,"byte_end":14292412,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292413,"byte_end":14292424,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292425,"byte_end":14292430,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292431,"byte_end":14292505,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292506,"byte_end":14292544,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292545,"byte_end":14292600,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292601,"byte_end":14292672,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292673,"byte_end":14292680,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292681,"byte_end":14292688,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":10104},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293187,"byte_end":14293190,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292947,"byte_end":14293014,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293019,"byte_end":14293022,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293027,"byte_end":14293115,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293120,"byte_end":14293175,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":10105},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14294263,"byte_end":14294267,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293789,"byte_end":14293849,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293854,"byte_end":14293857,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293862,"byte_end":14293938,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293943,"byte_end":14293968,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293973,"byte_end":14293976,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14293981,"byte_end":14294074,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14294079,"byte_end":14294172,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14294177,"byte_end":14294245,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":11932},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14296189,"byte_end":14296206,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14296053,"byte_end":14296153,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":10109},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14296454,"byte_end":14296463,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14296244,"byte_end":14296311,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14296316,"byte_end":14296319,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14296324,"byte_end":14296416,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14296421,"byte_end":14296442,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":10117},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":10118},{"krate":0,"index":10121},{"krate":0,"index":10124},{"krate":0,"index":10125},{"krate":0,"index":10128},{"krate":0,"index":10131},{"krate":0,"index":10134},{"krate":0,"index":10137},{"krate":0,"index":10138},{"krate":0,"index":10141},{"krate":0,"index":10144},{"krate":0,"index":10147},{"krate":0,"index":10150},{"krate":0,"index":10151},{"krate":0,"index":10153},{"krate":0,"index":10156},{"krate":0,"index":10159},{"krate":0,"index":10160},{"krate":0,"index":10162},{"krate":0,"index":10163},{"krate":0,"index":10166},{"krate":0,"index":10169},{"krate":0,"index":10172},{"krate":0,"index":10175},{"krate":0,"index":10178},{"krate":0,"index":11939},{"krate":0,"index":11943},{"krate":0,"index":11946},{"krate":0,"index":11952},{"krate":0,"index":11954},{"krate":0,"index":11955},{"krate":0,"index":11958},{"krate":0,"index":11966},{"krate":0,"index":11968},{"krate":0,"index":11969},{"krate":0,"index":10183},{"krate":0,"index":10189},{"krate":0,"index":10194},{"krate":0,"index":10200},{"krate":0,"index":10205},{"krate":0,"index":10209},{"krate":0,"index":10215},{"krate":0,"index":10219},{"krate":0,"index":10222},{"krate":0,"index":10226},{"krate":0,"index":10229},{"krate":0,"index":10232},{"krate":0,"index":10233},{"krate":0,"index":10235},{"krate":0,"index":10237},{"krate":0,"index":10239},{"krate":0,"index":10241},{"krate":0,"index":10243},{"krate":0,"index":10252},{"krate":0,"index":10254},{"krate":0,"index":10257},{"krate":0,"index":10260},{"krate":0,"index":10264},{"krate":0,"index":10288},{"krate":0,"index":10293},{"krate":0,"index":10298},{"krate":0,"index":10303},{"krate":0,"index":11972},{"krate":0,"index":11975},{"krate":0,"index":11979},{"krate":0,"index":10308},{"krate":0,"index":10314},{"krate":0,"index":10320},{"krate":0,"index":10323},{"krate":0,"index":10326},{"krate":0,"index":10331},{"krate":0,"index":10336},{"krate":0,"index":10338},{"krate":0,"index":10339},{"krate":0,"index":10341},{"krate":0,"index":10342}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296505,"byte_end":14296585,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296586,"byte_end":14296604,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296605,"byte_end":14296608,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296609,"byte_end":14296687,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296688,"byte_end":14296763,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296764,"byte_end":14296842,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296843,"byte_end":14296897,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296898,"byte_end":14296901,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296902,"byte_end":14296978,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14296979,"byte_end":14297059,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297060,"byte_end":14297137,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297138,"byte_end":14297188,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297189,"byte_end":14297192,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297193,"byte_end":14297271,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297272,"byte_end":14297329,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297330,"byte_end":14297333,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297334,"byte_end":14297412,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297413,"byte_end":14297485,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297486,"byte_end":14297502,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297503,"byte_end":14297506,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297507,"byte_end":14297521,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297522,"byte_end":14297525,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297526,"byte_end":14297606,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297607,"byte_end":14297686,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297687,"byte_end":14297764,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297765,"byte_end":14297843,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297844,"byte_end":14297851,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297852,"byte_end":14297855,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297856,"byte_end":14297933,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14297934,"byte_end":14298009,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298010,"byte_end":14298090,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298091,"byte_end":14298094,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298095,"byte_end":14298167,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298168,"byte_end":14298246,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298247,"byte_end":14298323,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298324,"byte_end":14298383,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298384,"byte_end":14298387,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298388,"byte_end":14298466,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298467,"byte_end":14298541,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298542,"byte_end":14298578,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298579,"byte_end":14298582,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298583,"byte_end":14298662,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298663,"byte_end":14298740,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298741,"byte_end":14298816,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298817,"byte_end":14298848,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298849,"byte_end":14298852,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298853,"byte_end":14298867,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298868,"byte_end":14298871,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298872,"byte_end":14298947,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14298948,"byte_end":14299026,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299027,"byte_end":14299104,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299105,"byte_end":14299136,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299137,"byte_end":14299140,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299141,"byte_end":14299187,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299188,"byte_end":14299256,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299257,"byte_end":14299307,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299308,"byte_end":14299356,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299357,"byte_end":14299425,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299426,"byte_end":14299494,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299495,"byte_end":14299547,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299548,"byte_end":14299551,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299552,"byte_end":14299566,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299567,"byte_end":14299570,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299571,"byte_end":14299586,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299587,"byte_end":14299590,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299591,"byte_end":14299598,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299599,"byte_end":14299630,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299631,"byte_end":14299634,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299635,"byte_end":14299653,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299654,"byte_end":14299675,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299676,"byte_end":14299727,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299728,"byte_end":14299765,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299766,"byte_end":14299769,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299770,"byte_end":14299803,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299804,"byte_end":14299858,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299859,"byte_end":14299913,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299914,"byte_end":14299925,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299926,"byte_end":14299929,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299930,"byte_end":14299963,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14299964,"byte_end":14300018,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300019,"byte_end":14300073,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300074,"byte_end":14300085,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300086,"byte_end":14300089,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300090,"byte_end":14300119,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300120,"byte_end":14300149,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300150,"byte_end":14300155,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300156,"byte_end":14300163,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300164,"byte_end":14300167,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300168,"byte_end":14300184,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300185,"byte_end":14300188,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300189,"byte_end":14300196,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300197,"byte_end":14300228,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300229,"byte_end":14300232,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300233,"byte_end":14300251,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300252,"byte_end":14300273,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300274,"byte_end":14300323,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300324,"byte_end":14300327,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300328,"byte_end":14300357,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300358,"byte_end":14300387,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300388,"byte_end":14300417,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300418,"byte_end":14300421,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300422,"byte_end":14300459,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300460,"byte_end":14300502,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300503,"byte_end":14300506,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300507,"byte_end":14300576,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300577,"byte_end":14300580,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300581,"byte_end":14300630,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300631,"byte_end":14300680,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14300681,"byte_end":14300686,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":10175},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301883,"byte_end":14301889,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":10177}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301090,"byte_end":14301136,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301137,"byte_end":14301140,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301141,"byte_end":14301201,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301202,"byte_end":14301229,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301230,"byte_end":14301233,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301234,"byte_end":14301248,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301249,"byte_end":14301252,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301253,"byte_end":14301260,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301261,"byte_end":14301292,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301293,"byte_end":14301296,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301297,"byte_end":14301315,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301316,"byte_end":14301337,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301338,"byte_end":14301389,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301390,"byte_end":14301427,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301428,"byte_end":14301431,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301432,"byte_end":14301465,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301466,"byte_end":14301520,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301521,"byte_end":14301575,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301576,"byte_end":14301587,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301588,"byte_end":14301591,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301592,"byte_end":14301625,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301626,"byte_end":14301680,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301681,"byte_end":14301735,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301736,"byte_end":14301747,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301748,"byte_end":14301751,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301752,"byte_end":14301781,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301782,"byte_end":14301811,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301812,"byte_end":14301817,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301818,"byte_end":14301825,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301826,"byte_end":14301829,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301830,"byte_end":14301871,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":10178},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302729,"byte_end":14302737,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":10180},{"krate":0,"index":10181},{"krate":0,"index":10182}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301926,"byte_end":14301974,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301975,"byte_end":14301978,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14301979,"byte_end":14302045,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302046,"byte_end":14302075,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302076,"byte_end":14302079,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302080,"byte_end":14302094,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302095,"byte_end":14302098,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302099,"byte_end":14302106,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302107,"byte_end":14302138,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302139,"byte_end":14302142,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302143,"byte_end":14302161,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302162,"byte_end":14302183,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302184,"byte_end":14302235,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302236,"byte_end":14302273,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302274,"byte_end":14302277,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302278,"byte_end":14302311,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302312,"byte_end":14302366,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302367,"byte_end":14302421,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302422,"byte_end":14302433,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302434,"byte_end":14302437,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302438,"byte_end":14302471,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302472,"byte_end":14302526,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302527,"byte_end":14302581,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302582,"byte_end":14302593,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302594,"byte_end":14302597,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302598,"byte_end":14302627,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302628,"byte_end":14302657,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302658,"byte_end":14302663,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302664,"byte_end":14302671,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302672,"byte_end":14302675,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302676,"byte_end":14302717,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":11939},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303280,"byte_end":14303289,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14302983,"byte_end":14303036,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303037,"byte_end":14303040,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303041,"byte_end":14303113,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303114,"byte_end":14303191,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303192,"byte_end":14303251,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":11942},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303293,"byte_end":14303298,"line_start":208,"line_end":208,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::broadcast::SendError::0","value":"T","parent":{"krate":0,"index":11939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11947},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303628,"byte_end":14303634,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":11946},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303531,"byte_end":14303606,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303611,"byte_end":14303623,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11949},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303840,"byte_end":14303846,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":11946},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303641,"byte_end":14303713,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303718,"byte_end":14303778,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303783,"byte_end":14303786,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303791,"byte_end":14303835,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":11946},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303515,"byte_end":14303524,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"pub enum RecvError { Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":11947},{"krate":0,"index":11949}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303302,"byte_end":14303369,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303370,"byte_end":14303373,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303374,"byte_end":14303426,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303427,"byte_end":14303477,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11959},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304233,"byte_end":14304238,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":11958},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304100,"byte_end":14304158,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304163,"byte_end":14304228,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11961},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304342,"byte_end":14304348,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":11958},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304245,"byte_end":14304320,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304325,"byte_end":14304337,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11963},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304597,"byte_end":14304603,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":11958},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304355,"byte_end":14304429,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304434,"byte_end":14304502,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304507,"byte_end":14304535,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304540,"byte_end":14304543,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304548,"byte_end":14304592,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":11958},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14304081,"byte_end":14304093,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":11959},{"krate":0,"index":11961},{"krate":0,"index":11963}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303856,"byte_end":14303927,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303928,"byte_end":14303931,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303932,"byte_end":14303992,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14303993,"byte_end":14304043,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":10233},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308904,"byte_end":14308911,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307292,"byte_end":14307368,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307369,"byte_end":14307418,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307419,"byte_end":14307422,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307423,"byte_end":14307492,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307493,"byte_end":14307543,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307544,"byte_end":14307547,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307548,"byte_end":14307622,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307623,"byte_end":14307698,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307699,"byte_end":14307767,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307768,"byte_end":14307771,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307772,"byte_end":14307848,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307849,"byte_end":14307930,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307931,"byte_end":14307970,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307971,"byte_end":14307974,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307975,"byte_end":14308021,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308022,"byte_end":14308090,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308091,"byte_end":14308141,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308142,"byte_end":14308194,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308195,"byte_end":14308247,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308248,"byte_end":14308300,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308301,"byte_end":14308304,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308305,"byte_end":14308319,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308320,"byte_end":14308323,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308324,"byte_end":14308331,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308332,"byte_end":14308363,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308364,"byte_end":14308367,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308368,"byte_end":14308386,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308387,"byte_end":14308408,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308409,"byte_end":14308460,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308461,"byte_end":14308498,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308499,"byte_end":14308502,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308503,"byte_end":14308536,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308537,"byte_end":14308591,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308592,"byte_end":14308646,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308647,"byte_end":14308658,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308659,"byte_end":14308662,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308663,"byte_end":14308696,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308697,"byte_end":14308751,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308752,"byte_end":14308806,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308807,"byte_end":14308818,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308819,"byte_end":14308822,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308823,"byte_end":14308852,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308853,"byte_end":14308882,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308883,"byte_end":14308888,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14308889,"byte_end":14308896,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":10245},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311978,"byte_end":14311982,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310128,"byte_end":14310202,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310207,"byte_end":14310243,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310248,"byte_end":14310251,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310256,"byte_end":14310331,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310336,"byte_end":14310402,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310407,"byte_end":14310458,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310463,"byte_end":14310466,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310471,"byte_end":14310483,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310488,"byte_end":14310491,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310496,"byte_end":14310570,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310575,"byte_end":14310651,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310656,"byte_end":14310709,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310714,"byte_end":14310717,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310722,"byte_end":14310732,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310737,"byte_end":14310740,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310745,"byte_end":14310817,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310822,"byte_end":14310897,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310902,"byte_end":14310963,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310968,"byte_end":14310971,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310976,"byte_end":14311049,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311054,"byte_end":14311119,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311124,"byte_end":14311142,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311147,"byte_end":14311150,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311155,"byte_end":14311205,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311210,"byte_end":14311270,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311275,"byte_end":14311278,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311283,"byte_end":14311297,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311302,"byte_end":14311305,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311310,"byte_end":14311317,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311322,"byte_end":14311353,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311358,"byte_end":14311361,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311366,"byte_end":14311384,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311389,"byte_end":14311410,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311415,"byte_end":14311466,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311471,"byte_end":14311508,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311513,"byte_end":14311516,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311521,"byte_end":14311554,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311559,"byte_end":14311613,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311618,"byte_end":14311672,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311677,"byte_end":14311688,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311693,"byte_end":14311696,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311701,"byte_end":14311734,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311739,"byte_end":14311793,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311798,"byte_end":14311852,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311857,"byte_end":14311868,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311873,"byte_end":14311876,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311881,"byte_end":14311910,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311915,"byte_end":14311944,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311949,"byte_end":14311954,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14311959,"byte_end":14311966,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10247},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312742,"byte_end":14312751,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312147,"byte_end":14312224,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312229,"byte_end":14312258,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312263,"byte_end":14312266,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312271,"byte_end":14312285,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312290,"byte_end":14312293,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312298,"byte_end":14312305,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312310,"byte_end":14312341,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312346,"byte_end":14312349,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312354,"byte_end":14312372,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312377,"byte_end":14312398,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312403,"byte_end":14312450,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312455,"byte_end":14312458,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312463,"byte_end":14312490,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312495,"byte_end":14312524,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312529,"byte_end":14312532,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312537,"byte_end":14312573,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312578,"byte_end":14312581,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312586,"byte_end":14312615,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312620,"byte_end":14312623,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312628,"byte_end":14312673,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312678,"byte_end":14312708,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312713,"byte_end":14312718,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14312723,"byte_end":14312730,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10248},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314338,"byte_end":14314352,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313186,"byte_end":14313228,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313233,"byte_end":14313236,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313241,"byte_end":14313317,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313322,"byte_end":14313395,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313400,"byte_end":14313420,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313425,"byte_end":14313428,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313433,"byte_end":14313443,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313448,"byte_end":14313451,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313456,"byte_end":14313526,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313531,"byte_end":14313599,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313604,"byte_end":14313617,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313622,"byte_end":14313625,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313630,"byte_end":14313682,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313687,"byte_end":14313737,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313742,"byte_end":14313788,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313793,"byte_end":14313853,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313858,"byte_end":14313906,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313911,"byte_end":14313914,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313919,"byte_end":14313933,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313938,"byte_end":14313941,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313946,"byte_end":14313953,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313958,"byte_end":14313989,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14313994,"byte_end":14313997,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314002,"byte_end":14314020,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314025,"byte_end":14314046,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314051,"byte_end":14314099,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314104,"byte_end":14314107,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314112,"byte_end":14314155,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314160,"byte_end":14314163,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314168,"byte_end":14314206,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314211,"byte_end":14314214,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314219,"byte_end":14314262,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314267,"byte_end":14314270,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314275,"byte_end":14314304,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314309,"byte_end":14314314,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14314319,"byte_end":14314326,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10266},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14323066,"byte_end":14323074,"line_start":831,"line_end":831,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321407,"byte_end":14321480,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321485,"byte_end":14321488,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321493,"byte_end":14321565,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321570,"byte_end":14321594,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321599,"byte_end":14321602,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321607,"byte_end":14321687,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321692,"byte_end":14321766,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321771,"byte_end":14321774,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321779,"byte_end":14321852,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321857,"byte_end":14321931,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321936,"byte_end":14321939,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321944,"byte_end":14322020,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322025,"byte_end":14322101,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322106,"byte_end":14322177,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322182,"byte_end":14322255,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322260,"byte_end":14322333,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322338,"byte_end":14322409,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322414,"byte_end":14322466,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322471,"byte_end":14322474,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322479,"byte_end":14322531,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322536,"byte_end":14322596,"line_start":811,"line_end":811,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322601,"byte_end":14322651,"line_start":812,"line_end":812,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322656,"byte_end":14322659,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322664,"byte_end":14322678,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322683,"byte_end":14322686,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322691,"byte_end":14322698,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322703,"byte_end":14322734,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322739,"byte_end":14322742,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322747,"byte_end":14322765,"line_start":819,"line_end":819,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322770,"byte_end":14322791,"line_start":820,"line_end":820,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322796,"byte_end":14322846,"line_start":821,"line_end":821,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322851,"byte_end":14322854,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322859,"byte_end":14322899,"line_start":823,"line_end":823,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322904,"byte_end":14322907,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322912,"byte_end":14322941,"line_start":825,"line_end":825,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322946,"byte_end":14322949,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14322954,"byte_end":14322997,"line_start":827,"line_end":827,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14323002,"byte_end":14323032,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14323037,"byte_end":14323042,"line_start":829,"line_end":829,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14323047,"byte_end":14323054,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10267},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14323316,"byte_end":14323325,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14323243,"byte_end":14323304,"line_start":837,"line_end":837,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10285},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327356,"byte_end":14327360,"line_start":952,"line_end":952,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325140,"byte_end":14325186,"line_start":888,"line_end":888,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325191,"byte_end":14325194,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325199,"byte_end":14325267,"line_start":890,"line_end":890,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325272,"byte_end":14325304,"line_start":891,"line_end":891,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325309,"byte_end":14325312,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325317,"byte_end":14325387,"line_start":893,"line_end":893,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325392,"byte_end":14325466,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325471,"byte_end":14325474,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325479,"byte_end":14325555,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325560,"byte_end":14325636,"line_start":897,"line_end":897,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325641,"byte_end":14325709,"line_start":898,"line_end":898,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325714,"byte_end":14325787,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325792,"byte_end":14325861,"line_start":900,"line_end":900,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325866,"byte_end":14325911,"line_start":901,"line_end":901,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325916,"byte_end":14325919,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325924,"byte_end":14325974,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14325979,"byte_end":14326031,"line_start":904,"line_end":904,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326036,"byte_end":14326039,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326044,"byte_end":14326058,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326063,"byte_end":14326066,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326071,"byte_end":14326078,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326083,"byte_end":14326114,"line_start":909,"line_end":909,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326119,"byte_end":14326122,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326127,"byte_end":14326145,"line_start":911,"line_end":911,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326150,"byte_end":14326171,"line_start":912,"line_end":912,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326176,"byte_end":14326227,"line_start":913,"line_end":913,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326232,"byte_end":14326269,"line_start":914,"line_end":914,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326274,"byte_end":14326277,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326282,"byte_end":14326315,"line_start":916,"line_end":916,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326320,"byte_end":14326374,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326379,"byte_end":14326433,"line_start":918,"line_end":918,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326438,"byte_end":14326449,"line_start":919,"line_end":919,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326454,"byte_end":14326457,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326462,"byte_end":14326495,"line_start":921,"line_end":921,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326500,"byte_end":14326554,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326559,"byte_end":14326613,"line_start":923,"line_end":923,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326618,"byte_end":14326629,"line_start":924,"line_end":924,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326634,"byte_end":14326637,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326642,"byte_end":14326671,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326676,"byte_end":14326705,"line_start":927,"line_end":927,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326710,"byte_end":14326715,"line_start":928,"line_end":928,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326720,"byte_end":14326727,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326732,"byte_end":14326735,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326740,"byte_end":14326756,"line_start":931,"line_end":931,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326761,"byte_end":14326764,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326769,"byte_end":14326776,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326781,"byte_end":14326812,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326817,"byte_end":14326820,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326825,"byte_end":14326843,"line_start":936,"line_end":936,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326848,"byte_end":14326869,"line_start":937,"line_end":937,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326874,"byte_end":14326923,"line_start":938,"line_end":938,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326928,"byte_end":14326931,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326936,"byte_end":14326965,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14326970,"byte_end":14326999,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327004,"byte_end":14327033,"line_start":942,"line_end":942,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327038,"byte_end":14327041,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327046,"byte_end":14327083,"line_start":944,"line_end":944,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327088,"byte_end":14327130,"line_start":945,"line_end":945,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327135,"byte_end":14327138,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327143,"byte_end":14327212,"line_start":947,"line_end":947,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327217,"byte_end":14327220,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327225,"byte_end":14327274,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327279,"byte_end":14327328,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327333,"byte_end":14327338,"line_start":951,"line_end":951,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":11977},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14331952,"byte_end":14331963,"line_start":1110,"line_end":1110,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"pub fn into_stream(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10344},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":10345},{"krate":0,"index":10444},{"krate":0,"index":10528},{"krate":0,"index":10529},{"krate":0,"index":10532},{"krate":0,"index":10535},{"krate":0,"index":10538},{"krate":0,"index":10748},{"krate":0,"index":10816},{"krate":0,"index":10879},{"krate":0,"index":10880},{"krate":0,"index":10883},{"krate":0,"index":10886},{"krate":0,"index":10889},{"krate":0,"index":10920}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14335617,"byte_end":14335686,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14335687,"byte_end":14335710,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14335711,"byte_end":14335714,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14335715,"byte_end":14335790,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14335791,"byte_end":14335869,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ out of the channel. If there is no message to read, the current task will be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14335870,"byte_end":14335950,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14335951,"byte_end":14336029,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ is rejected and the task will be notified when additional capacity is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336030,"byte_end":14336103,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ available. In other words, the channel provides backpressure.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336104,"byte_end":14336169,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336170,"byte_end":14336173,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336174,"byte_end":14336254,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336255,"byte_end":14336333,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336334,"byte_end":14336410,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336411,"byte_end":14336490,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336491,"byte_end":14336570,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336571,"byte_end":14336642,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336643,"byte_end":14336665,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336666,"byte_end":14336669,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336670,"byte_end":14336689,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336690,"byte_end":14336693,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336694,"byte_end":14336760,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336761,"byte_end":14336841,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336842,"byte_end":14336919,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336920,"byte_end":14336923,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336924,"byte_end":14336994,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14336995,"byte_end":14337074,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337075,"byte_end":14337098,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337099,"byte_end":14337102,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337103,"byte_end":14337123,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337124,"byte_end":14337127,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337128,"byte_end":14337208,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337209,"byte_end":14337289,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337290,"byte_end":14337368,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337369,"byte_end":14337441,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337442,"byte_end":14337516,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337517,"byte_end":14337529,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337530,"byte_end":14337533,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337534,"byte_end":14337581,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337582,"byte_end":14337585,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337586,"byte_end":14337667,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337668,"byte_end":14337703,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337704,"byte_end":14337707,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337708,"byte_end":14337788,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337789,"byte_end":14337869,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337870,"byte_end":14337948,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14337949,"byte_end":14338027,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338028,"byte_end":14338107,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ need to wait for additional capacity to become available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338108,"byte_end":14338169,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338170,"byte_end":14338173,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338174,"byte_end":14338254,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338255,"byte_end":14338333,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338334,"byte_end":14338400,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338401,"byte_end":14338483,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338484,"byte_end":14338548,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338549,"byte_end":14338552,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338553,"byte_end":14338594,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338595,"byte_end":14338640,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338641,"byte_end":14338694,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338695,"byte_end":14338750,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338751,"byte_end":14338810,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338811,"byte_end":14338871,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338872,"byte_end":14338917,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14338918,"byte_end":14339008,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":10474},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14352873,"byte_end":14352879,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":10476}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14352748,"byte_end":14352793,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14352794,"byte_end":14352797,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14352798,"byte_end":14352861,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10483},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353388,"byte_end":14353396,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":10485}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353260,"byte_end":14353308,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353309,"byte_end":14353312,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353313,"byte_end":14353376,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":10489},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354784,"byte_end":14354791,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353677,"byte_end":14353757,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353758,"byte_end":14353799,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353800,"byte_end":14353803,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353804,"byte_end":14353881,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353882,"byte_end":14353907,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353908,"byte_end":14353911,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353912,"byte_end":14353991,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353992,"byte_end":14354040,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354041,"byte_end":14354044,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354045,"byte_end":14354124,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354125,"byte_end":14354200,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354201,"byte_end":14354267,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354268,"byte_end":14354271,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354272,"byte_end":14354286,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354287,"byte_end":14354290,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354291,"byte_end":14354302,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354303,"byte_end":14354329,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354330,"byte_end":14354333,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354334,"byte_end":14354352,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354353,"byte_end":14354374,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354375,"byte_end":14354425,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354426,"byte_end":14354429,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354430,"byte_end":14354463,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354464,"byte_end":14354492,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354493,"byte_end":14354543,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354544,"byte_end":14354593,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354594,"byte_end":14354621,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354622,"byte_end":14354639,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354640,"byte_end":14354653,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354654,"byte_end":14354665,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354666,"byte_end":14354669,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354670,"byte_end":14354715,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354716,"byte_end":14354752,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354753,"byte_end":14354762,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354763,"byte_end":14354768,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14354769,"byte_end":14354776,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":10495},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356473,"byte_end":14356477,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355391,"byte_end":14355437,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355442,"byte_end":14355445,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355450,"byte_end":14355522,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355527,"byte_end":14355581,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355586,"byte_end":14355589,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355594,"byte_end":14355608,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355613,"byte_end":14355616,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355621,"byte_end":14355628,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355633,"byte_end":14355659,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355664,"byte_end":14355667,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355672,"byte_end":14355690,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355695,"byte_end":14355716,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355721,"byte_end":14355771,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355776,"byte_end":14355779,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355784,"byte_end":14355817,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355822,"byte_end":14355866,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355871,"byte_end":14355882,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355887,"byte_end":14355890,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355895,"byte_end":14355946,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355951,"byte_end":14355993,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355998,"byte_end":14356003,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356008,"byte_end":14356015,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356020,"byte_end":14356023,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356028,"byte_end":14356052,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356057,"byte_end":14356060,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356065,"byte_end":14356072,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356077,"byte_end":14356103,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356108,"byte_end":14356111,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356116,"byte_end":14356134,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356139,"byte_end":14356160,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356165,"byte_end":14356215,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356220,"byte_end":14356223,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356228,"byte_end":14356268,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356273,"byte_end":14356313,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356318,"byte_end":14356321,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356326,"byte_end":14356377,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356382,"byte_end":14356433,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356438,"byte_end":14356443,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356448,"byte_end":14356455,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10502},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356643,"byte_end":14356652,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10503},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357308,"byte_end":14357316,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356745,"byte_end":14356818,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356823,"byte_end":14356826,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356831,"byte_end":14356903,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356908,"byte_end":14356979,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14356984,"byte_end":14357037,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357042,"byte_end":14357045,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357050,"byte_end":14357122,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357127,"byte_end":14357151,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357156,"byte_end":14357159,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357164,"byte_end":14357234,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357239,"byte_end":14357296,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":10504},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357634,"byte_end":14357639,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357397,"byte_end":14357461,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357466,"byte_end":14357469,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357474,"byte_end":14357549,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357554,"byte_end":14357622,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":10510},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359729,"byte_end":14359733,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358085,"byte_end":14358136,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358141,"byte_end":14358144,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358149,"byte_end":14358225,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358230,"byte_end":14358306,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358311,"byte_end":14358385,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358390,"byte_end":14358465,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358470,"byte_end":14358539,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358544,"byte_end":14358616,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358621,"byte_end":14358652,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358657,"byte_end":14358660,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358665,"byte_end":14358677,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358682,"byte_end":14358685,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358690,"byte_end":14358763,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358768,"byte_end":14358842,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358847,"byte_end":14358907,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358912,"byte_end":14358915,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358920,"byte_end":14358950,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358955,"byte_end":14358981,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358986,"byte_end":14358989,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14358994,"byte_end":14359008,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359013,"byte_end":14359016,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359021,"byte_end":14359091,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359096,"byte_end":14359135,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359140,"byte_end":14359143,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359148,"byte_end":14359159,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359164,"byte_end":14359190,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359195,"byte_end":14359198,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359203,"byte_end":14359221,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359226,"byte_end":14359247,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359252,"byte_end":14359300,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359305,"byte_end":14359308,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359313,"byte_end":14359346,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359351,"byte_end":14359379,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359384,"byte_end":14359434,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359439,"byte_end":14359488,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359493,"byte_end":14359520,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359525,"byte_end":14359542,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359547,"byte_end":14359560,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359565,"byte_end":14359576,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359581,"byte_end":14359584,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359589,"byte_end":14359634,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359639,"byte_end":14359675,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359680,"byte_end":14359689,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359694,"byte_end":14359699,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14359704,"byte_end":14359711,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10517},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362466,"byte_end":14362474,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360154,"byte_end":14360213,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360218,"byte_end":14360221,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360226,"byte_end":14360305,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360310,"byte_end":14360385,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360390,"byte_end":14360468,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360473,"byte_end":14360515,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360520,"byte_end":14360523,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360528,"byte_end":14360600,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360605,"byte_end":14360656,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360661,"byte_end":14360664,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360669,"byte_end":14360681,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360686,"byte_end":14360689,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360694,"byte_end":14360765,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360770,"byte_end":14360846,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360851,"byte_end":14360873,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360878,"byte_end":14360881,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360886,"byte_end":14360959,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14360964,"byte_end":14361038,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361043,"byte_end":14361103,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361108,"byte_end":14361111,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361116,"byte_end":14361142,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361147,"byte_end":14361185,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361190,"byte_end":14361214,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361219,"byte_end":14361249,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361254,"byte_end":14361257,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361262,"byte_end":14361276,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361281,"byte_end":14361284,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361289,"byte_end":14361296,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361301,"byte_end":14361327,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361332,"byte_end":14361335,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361340,"byte_end":14361358,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361363,"byte_end":14361384,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361389,"byte_end":14361435,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361440,"byte_end":14361489,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361494,"byte_end":14361528,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361533,"byte_end":14361536,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361541,"byte_end":14361574,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361579,"byte_end":14361618,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361623,"byte_end":14361662,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361667,"byte_end":14361729,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361734,"byte_end":14361745,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361750,"byte_end":14361753,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361758,"byte_end":14361791,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361796,"byte_end":14361845,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361850,"byte_end":14361897,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361902,"byte_end":14361938,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361943,"byte_end":14361954,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361959,"byte_end":14361962,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361967,"byte_end":14361987,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14361992,"byte_end":14362031,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362036,"byte_end":14362081,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362086,"byte_end":14362089,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362094,"byte_end":14362133,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362138,"byte_end":14362183,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362188,"byte_end":14362191,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362196,"byte_end":14362245,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362250,"byte_end":14362281,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362286,"byte_end":14362348,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362353,"byte_end":14362418,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362423,"byte_end":14362432,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362437,"byte_end":14362442,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362447,"byte_end":14362454,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10518},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14364291,"byte_end":14364303,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ mut Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362595,"byte_end":14362675,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362680,"byte_end":14362683,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362688,"byte_end":14362765,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362770,"byte_end":14362848,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362853,"byte_end":14362901,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362906,"byte_end":14362909,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362914,"byte_end":14362940,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362945,"byte_end":14362948,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362953,"byte_end":14362965,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362970,"byte_end":14362973,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14362978,"byte_end":14363051,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363056,"byte_end":14363113,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363118,"byte_end":14363199,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363204,"byte_end":14363207,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363212,"byte_end":14363242,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363247,"byte_end":14363273,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363278,"byte_end":14363281,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363286,"byte_end":14363300,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363305,"byte_end":14363308,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363313,"byte_end":14363391,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363396,"byte_end":14363467,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363472,"byte_end":14363475,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363480,"byte_end":14363491,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363496,"byte_end":14363522,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363527,"byte_end":14363570,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363575,"byte_end":14363578,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363583,"byte_end":14363601,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363606,"byte_end":14363627,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363632,"byte_end":14363680,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363685,"byte_end":14363688,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363693,"byte_end":14363726,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363731,"byte_end":14363759,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363764,"byte_end":14363850,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363855,"byte_end":14363908,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363913,"byte_end":14363940,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363945,"byte_end":14363962,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363967,"byte_end":14363980,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14363985,"byte_end":14363996,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14364001,"byte_end":14364004,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14364009,"byte_end":14364054,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14364059,"byte_end":14364095,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14364100,"byte_end":14364156,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14364161,"byte_end":14364170,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14364175,"byte_end":14364180,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14364185,"byte_end":14364192,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14364197,"byte_end":14364221,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":10525},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366087,"byte_end":14366097,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365006,"byte_end":14365088,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365093,"byte_end":14365096,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365101,"byte_end":14365193,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365198,"byte_end":14365225,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365230,"byte_end":14365233,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365238,"byte_end":14365331,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365336,"byte_end":14365431,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365436,"byte_end":14365529,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365534,"byte_end":14365629,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365634,"byte_end":14365681,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365686,"byte_end":14365689,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365694,"byte_end":14365788,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365793,"byte_end":14365861,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365866,"byte_end":14365869,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365874,"byte_end":14365958,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14365963,"byte_end":14366056,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366061,"byte_end":14366075,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":10527},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368653,"byte_end":14368659,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"pub fn disarm(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366242,"byte_end":14366285,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366290,"byte_end":14366293,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366298,"byte_end":14366388,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366393,"byte_end":14366486,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366491,"byte_end":14366582,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366587,"byte_end":14366675,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366680,"byte_end":14366683,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366688,"byte_end":14366780,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366785,"byte_end":14366832,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366837,"byte_end":14366840,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366845,"byte_end":14366861,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366866,"byte_end":14366869,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366874,"byte_end":14366969,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14366974,"byte_end":14367068,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367073,"byte_end":14367167,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367172,"byte_end":14367246,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367251,"byte_end":14367254,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367259,"byte_end":14367277,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367282,"byte_end":14367292,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367297,"byte_end":14367330,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367335,"byte_end":14367387,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367392,"byte_end":14367419,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367424,"byte_end":14367438,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367443,"byte_end":14367457,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367462,"byte_end":14367469,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367474,"byte_end":14367479,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367484,"byte_end":14367491,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367496,"byte_end":14367499,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367504,"byte_end":14367597,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367602,"byte_end":14367697,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367702,"byte_end":14367788,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367793,"byte_end":14367888,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367893,"byte_end":14367957,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367962,"byte_end":14367965,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14367970,"byte_end":14368064,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368069,"byte_end":14368134,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368139,"byte_end":14368142,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368147,"byte_end":14368165,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368170,"byte_end":14368180,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368185,"byte_end":14368218,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368223,"byte_end":14368257,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368262,"byte_end":14368302,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368307,"byte_end":14368369,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368374,"byte_end":14368388,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368393,"byte_end":14368455,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368460,"byte_end":14368480,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368485,"byte_end":14368492,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368497,"byte_end":14368537,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368542,"byte_end":14368569,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368574,"byte_end":14368588,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368593,"byte_end":14368607,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368612,"byte_end":14368619,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368624,"byte_end":14368629,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14368634,"byte_end":14368641,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":10616},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14370651,"byte_end":14370657,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":10615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10840},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394550,"byte_end":14394565,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":10842}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394392,"byte_end":14394446,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394447,"byte_end":14394450,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394451,"byte_end":14394483,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394484,"byte_end":14394538,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":10849},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395143,"byte_end":14395160,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":10851}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394982,"byte_end":14395039,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395040,"byte_end":14395043,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395044,"byte_end":14395076,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395077,"byte_end":14395131,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":10855},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395971,"byte_end":14395988,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395459,"byte_end":14395535,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395536,"byte_end":14395546,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395547,"byte_end":14395550,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395551,"byte_end":14395631,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395632,"byte_end":14395711,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395712,"byte_end":14395725,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395726,"byte_end":14395729,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395730,"byte_end":14395809,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395810,"byte_end":14395886,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395887,"byte_end":14395963,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":10861},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396436,"byte_end":14396445,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10862},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397608,"byte_end":14397612,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396538,"byte_end":14396584,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396589,"byte_end":14396592,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396597,"byte_end":14396669,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396674,"byte_end":14396728,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396733,"byte_end":14396736,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396741,"byte_end":14396755,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396760,"byte_end":14396763,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396768,"byte_end":14396775,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396780,"byte_end":14396806,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396811,"byte_end":14396814,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396819,"byte_end":14396837,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396842,"byte_end":14396863,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396868,"byte_end":14396921,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396926,"byte_end":14396929,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396934,"byte_end":14396967,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396972,"byte_end":14397010,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397015,"byte_end":14397026,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397031,"byte_end":14397034,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397039,"byte_end":14397090,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397095,"byte_end":14397137,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397142,"byte_end":14397147,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397152,"byte_end":14397159,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397164,"byte_end":14397167,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397172,"byte_end":14397196,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397201,"byte_end":14397204,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397209,"byte_end":14397216,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397221,"byte_end":14397247,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397252,"byte_end":14397255,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397260,"byte_end":14397278,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397283,"byte_end":14397304,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397309,"byte_end":14397362,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397367,"byte_end":14397370,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397375,"byte_end":14397409,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397414,"byte_end":14397448,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397453,"byte_end":14397456,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397461,"byte_end":14397512,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397517,"byte_end":14397568,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397573,"byte_end":14397578,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397583,"byte_end":14397590,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10869},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398297,"byte_end":14398305,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397734,"byte_end":14397807,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397812,"byte_end":14397815,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397820,"byte_end":14397892,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397897,"byte_end":14397968,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14397973,"byte_end":14398026,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398031,"byte_end":14398034,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398039,"byte_end":14398111,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398116,"byte_end":14398140,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398145,"byte_end":14398148,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398153,"byte_end":14398223,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398228,"byte_end":14398285,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":10870},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398623,"byte_end":14398628,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398386,"byte_end":14398450,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398455,"byte_end":14398458,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398463,"byte_end":14398538,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398543,"byte_end":14398611,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":10878},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399751,"byte_end":14399755,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399063,"byte_end":14399137,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399142,"byte_end":14399145,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399150,"byte_end":14399235,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399240,"byte_end":14399321,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399326,"byte_end":14399394,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399399,"byte_end":14399402,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399407,"byte_end":14399480,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399485,"byte_end":14399556,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399561,"byte_end":14399638,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399643,"byte_end":14399646,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399651,"byte_end":14399690,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14399695,"byte_end":14399739,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":10889},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":10890},{"krate":0,"index":10893},{"krate":0,"index":12009},{"krate":0,"index":12013},{"krate":0,"index":10896},{"krate":0,"index":10899},{"krate":0,"index":12016},{"krate":0,"index":12024},{"krate":0,"index":10901},{"krate":0,"index":10903},{"krate":0,"index":10906},{"krate":0,"index":12027},{"krate":0,"index":12030},{"krate":0,"index":10909},{"krate":0,"index":10911},{"krate":0,"index":12032},{"krate":0,"index":12037},{"krate":0,"index":12039},{"krate":0,"index":12040},{"krate":0,"index":10912},{"krate":0,"index":10914},{"krate":0,"index":12042},{"krate":0,"index":12045},{"krate":0,"index":10915},{"krate":0,"index":10917},{"krate":0,"index":10919},{"krate":0,"index":12052},{"krate":0,"index":12060},{"krate":0,"index":12047},{"krate":0,"index":12049}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14399873,"byte_end":14399896,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12009},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400000,"byte_end":14400009,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14399936,"byte_end":14399971,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":12012},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400013,"byte_end":14400018,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":12009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12018},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400562,"byte_end":14400566,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":12016},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400430,"byte_end":14400498,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400503,"byte_end":14400557,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12021},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400667,"byte_end":14400673,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":12016},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400576,"byte_end":14400645,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400650,"byte_end":14400662,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":12016},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400408,"byte_end":14400420,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":12018},{"krate":0,"index":12021}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400262,"byte_end":14400333,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400334,"byte_end":14400381,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":12027},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401311,"byte_end":14401320,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401249,"byte_end":14401282,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12033},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401825,"byte_end":14401830,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":12032},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401697,"byte_end":14401764,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401769,"byte_end":14401820,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12035},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401950,"byte_end":14401956,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":12032},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401836,"byte_end":14401898,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401903,"byte_end":14401945,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":12032},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401678,"byte_end":14401690,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":12033},{"krate":0,"index":12035}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401531,"byte_end":14401601,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401602,"byte_end":14401640,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":12042},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402447,"byte_end":14402458,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402346,"byte_end":14402418,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12054},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14403064,"byte_end":14403071,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12057},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14403184,"byte_end":14403190,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12052},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402902,"byte_end":14402918,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> { Timeout(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":12054},{"krate":0,"index":12057}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":10944},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408104,"byte_end":14408109,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":10946},{"krate":0,"index":10947}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14403851,"byte_end":14403889,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14403890,"byte_end":14403893,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14403894,"byte_end":14403972,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14403973,"byte_end":14404049,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404050,"byte_end":14404074,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404075,"byte_end":14404078,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404079,"byte_end":14404120,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404121,"byte_end":14404124,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404125,"byte_end":14404205,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404206,"byte_end":14404285,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404286,"byte_end":14404349,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404350,"byte_end":14404353,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404354,"byte_end":14404433,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404434,"byte_end":14404514,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404515,"byte_end":14404593,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404594,"byte_end":14404673,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404674,"byte_end":14404752,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404753,"byte_end":14404833,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404834,"byte_end":14404847,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404848,"byte_end":14404851,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404852,"byte_end":14404931,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14404932,"byte_end":14405008,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405009,"byte_end":14405086,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405087,"byte_end":14405120,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405121,"byte_end":14405124,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405125,"byte_end":14405200,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405201,"byte_end":14405279,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405280,"byte_end":14405322,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405323,"byte_end":14405326,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405327,"byte_end":14405354,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405355,"byte_end":14405403,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405404,"byte_end":14405482,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405483,"byte_end":14405486,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405487,"byte_end":14405502,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405503,"byte_end":14405506,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405507,"byte_end":14405525,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405526,"byte_end":14405553,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405554,"byte_end":14405577,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405578,"byte_end":14405581,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405582,"byte_end":14405600,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405601,"byte_end":14405622,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405623,"byte_end":14405667,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405668,"byte_end":14405707,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405708,"byte_end":14405711,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405712,"byte_end":14405745,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405746,"byte_end":14405792,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405793,"byte_end":14405816,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405817,"byte_end":14405828,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405829,"byte_end":14405832,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405833,"byte_end":14405875,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405876,"byte_end":14405895,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405896,"byte_end":14405901,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405902,"byte_end":14405909,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405910,"byte_end":14405913,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405914,"byte_end":14405917,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405918,"byte_end":14405936,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405937,"byte_end":14405964,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405965,"byte_end":14405988,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405989,"byte_end":14405992,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14405993,"byte_end":14406011,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406012,"byte_end":14406033,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406034,"byte_end":14406078,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406079,"byte_end":14406082,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406083,"byte_end":14406106,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406107,"byte_end":14406153,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406154,"byte_end":14406191,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406192,"byte_end":14406224,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406225,"byte_end":14406282,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406283,"byte_end":14406314,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406315,"byte_end":14406356,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406357,"byte_end":14406374,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406375,"byte_end":14406390,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406391,"byte_end":14406400,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406401,"byte_end":14406404,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406405,"byte_end":14406419,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406420,"byte_end":14406462,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406463,"byte_end":14406485,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406486,"byte_end":14406499,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406500,"byte_end":14406509,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406510,"byte_end":14406544,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406545,"byte_end":14406550,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406551,"byte_end":14406558,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406559,"byte_end":14406635,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406636,"byte_end":14406709,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406710,"byte_end":14406725,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406726,"byte_end":14406801,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406802,"byte_end":14406878,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406879,"byte_end":14406931,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406932,"byte_end":14406935,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14406936,"byte_end":14407014,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407015,"byte_end":14407095,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407096,"byte_end":14407172,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407173,"byte_end":14407250,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407251,"byte_end":14407329,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407330,"byte_end":14407410,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407411,"byte_end":14407491,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407492,"byte_end":14407561,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407562,"byte_end":14407565,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407566,"byte_end":14407645,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407646,"byte_end":14407725,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407726,"byte_end":14407804,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407805,"byte_end":14407866,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407867,"byte_end":14407870,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407871,"byte_end":14407898,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407899,"byte_end":14407936,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407937,"byte_end":14407971,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14407972,"byte_end":14408021,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408022,"byte_end":14408059,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408060,"byte_end":14408092,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":10948},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408538,"byte_end":14408548,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":10951}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408177,"byte_end":14408208,"line_start":123,"line_end":123,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408209,"byte_end":14408212,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408213,"byte_end":14408292,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408293,"byte_end":14408368,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408369,"byte_end":14408402,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408403,"byte_end":14408406,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408407,"byte_end":14408485,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408486,"byte_end":14408526,"line_start":130,"line_end":130,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":10952},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409335,"byte_end":14409350,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":10954}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408593,"byte_end":14408631,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408632,"byte_end":14408635,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408636,"byte_end":14408717,"line_start":137,"line_end":137,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408718,"byte_end":14408798,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408799,"byte_end":14408873,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408874,"byte_end":14408935,"line_start":140,"line_end":140,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408936,"byte_end":14408939,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14408940,"byte_end":14409019,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409020,"byte_end":14409098,"line_start":143,"line_end":143,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409099,"byte_end":14409167,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409168,"byte_end":14409171,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409172,"byte_end":14409250,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409251,"byte_end":14409291,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409292,"byte_end":14409295,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409296,"byte_end":14409323,"line_start":149,"line_end":149,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":12063},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14410058,"byte_end":14410070,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409850,"byte_end":14409907,"line_start":162,"line_end":162,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409908,"byte_end":14409911,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409912,"byte_end":14409984,"line_start":164,"line_end":164,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409985,"byte_end":14409988,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409989,"byte_end":14410029,"line_start":166,"line_end":166,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":10968},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411286,"byte_end":14411289,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411083,"byte_end":14411141,"line_start":203,"line_end":203,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411146,"byte_end":14411149,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411154,"byte_end":14411168,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411173,"byte_end":14411176,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411181,"byte_end":14411188,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411193,"byte_end":14411220,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411225,"byte_end":14411228,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411233,"byte_end":14411262,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411267,"byte_end":14411274,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10969},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411914,"byte_end":14411918,"line_start":239,"line_end":239,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411454,"byte_end":14411500,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411505,"byte_end":14411551,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411556,"byte_end":14411627,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411632,"byte_end":14411635,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411640,"byte_end":14411654,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411659,"byte_end":14411662,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411667,"byte_end":14411674,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411679,"byte_end":14411706,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411711,"byte_end":14411714,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411719,"byte_end":14411737,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411742,"byte_end":14411763,"line_start":232,"line_end":232,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411768,"byte_end":14411802,"line_start":233,"line_end":233,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411807,"byte_end":14411810,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411815,"byte_end":14411854,"line_start":235,"line_end":235,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411859,"byte_end":14411874,"line_start":236,"line_end":236,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411879,"byte_end":14411884,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411889,"byte_end":14411896,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10972},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412945,"byte_end":14412955,"line_start":270,"line_end":270,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412024,"byte_end":14412098,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412103,"byte_end":14412170,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412175,"byte_end":14412199,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412204,"byte_end":14412207,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412212,"byte_end":14412285,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412290,"byte_end":14412363,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412368,"byte_end":14412439,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412444,"byte_end":14412519,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412524,"byte_end":14412566,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412571,"byte_end":14412574,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412579,"byte_end":14412593,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412598,"byte_end":14412601,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412606,"byte_end":14412613,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412618,"byte_end":14412645,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412650,"byte_end":14412673,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412678,"byte_end":14412681,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412686,"byte_end":14412704,"line_start":260,"line_end":260,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412709,"byte_end":14412730,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412735,"byte_end":14412779,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412784,"byte_end":14412787,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412792,"byte_end":14412845,"line_start":264,"line_end":264,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412850,"byte_end":14412865,"line_start":265,"line_end":265,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412870,"byte_end":14412875,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412880,"byte_end":14412887,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412892,"byte_end":14412895,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14412900,"byte_end":14412927,"line_start":269,"line_end":269,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":10979},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413832,"byte_end":14413840,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413364,"byte_end":14413433,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413438,"byte_end":14413480,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413485,"byte_end":14413488,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413493,"byte_end":14413527,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413532,"byte_end":14413546,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413551,"byte_end":14413554,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413559,"byte_end":14413566,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413571,"byte_end":14413598,"line_start":290,"line_end":290,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413603,"byte_end":14413666,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413671,"byte_end":14413674,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413679,"byte_end":14413709,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413714,"byte_end":14413717,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413722,"byte_end":14413752,"line_start":295,"line_end":295,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413757,"byte_end":14413779,"line_start":296,"line_end":296,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413784,"byte_end":14413796,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413801,"byte_end":14413808,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14413813,"byte_end":14413820,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10980},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414961,"byte_end":14414975,"line_start":331,"line_end":331,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414049,"byte_end":14414123,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414128,"byte_end":14414165,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414170,"byte_end":14414173,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414178,"byte_end":14414246,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414251,"byte_end":14414324,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414329,"byte_end":14414405,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414410,"byte_end":14414484,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414489,"byte_end":14414537,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414542,"byte_end":14414545,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414550,"byte_end":14414584,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414589,"byte_end":14414616,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414621,"byte_end":14414635,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414640,"byte_end":14414643,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414648,"byte_end":14414655,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414660,"byte_end":14414687,"line_start":321,"line_end":321,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414692,"byte_end":14414715,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414720,"byte_end":14414783,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414788,"byte_end":14414791,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414796,"byte_end":14414836,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414841,"byte_end":14414844,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414849,"byte_end":14414893,"line_start":327,"line_end":327,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414898,"byte_end":14414920,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414925,"byte_end":14414937,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14414942,"byte_end":14414949,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10981},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415533,"byte_end":14415543,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415200,"byte_end":14415254,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415259,"byte_end":14415273,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415278,"byte_end":14415281,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415286,"byte_end":14415293,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415298,"byte_end":14415325,"line_start":342,"line_end":342,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415330,"byte_end":14415333,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415338,"byte_end":14415356,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415361,"byte_end":14415382,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415387,"byte_end":14415421,"line_start":346,"line_end":346,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415426,"byte_end":14415429,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415434,"byte_end":14415469,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415474,"byte_end":14415499,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415504,"byte_end":14415509,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415514,"byte_end":14415521,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12068},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420948,"byte_end":14420954,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":12069},{"krate":0,"index":12070}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418138,"byte_end":14418174,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418175,"byte_end":14418178,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418179,"byte_end":14418255,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418256,"byte_end":14418336,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418337,"byte_end":14418378,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418379,"byte_end":14418382,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418383,"byte_end":14418457,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418458,"byte_end":14418539,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418540,"byte_end":14418606,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418607,"byte_end":14418610,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418611,"byte_end":14418669,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418670,"byte_end":14418750,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418751,"byte_end":14418831,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418832,"byte_end":14418911,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418912,"byte_end":14418962,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418963,"byte_end":14418966,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14418967,"byte_end":14419046,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419047,"byte_end":14419122,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419123,"byte_end":14419193,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419194,"byte_end":14419197,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419198,"byte_end":14419278,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419279,"byte_end":14419352,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419353,"byte_end":14419424,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419425,"byte_end":14419428,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419429,"byte_end":14419443,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419444,"byte_end":14419447,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419448,"byte_end":14419464,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419465,"byte_end":14419468,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419469,"byte_end":14419476,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419477,"byte_end":14419505,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419506,"byte_end":14419529,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419530,"byte_end":14419533,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419534,"byte_end":14419552,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419553,"byte_end":14419574,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419575,"byte_end":14419620,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419621,"byte_end":14419658,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419659,"byte_end":14419662,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419663,"byte_end":14419696,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419697,"byte_end":14419734,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419735,"byte_end":14419781,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419782,"byte_end":14419793,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419794,"byte_end":14419797,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419798,"byte_end":14419839,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419840,"byte_end":14419864,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419865,"byte_end":14419870,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419871,"byte_end":14419878,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419879,"byte_end":14419882,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419883,"byte_end":14419908,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419909,"byte_end":14419912,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419913,"byte_end":14419920,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419921,"byte_end":14419949,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419950,"byte_end":14419953,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419954,"byte_end":14419989,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14419990,"byte_end":14420015,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420016,"byte_end":14420019,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420020,"byte_end":14420043,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420044,"byte_end":14420079,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420080,"byte_end":14420103,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420104,"byte_end":14420109,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420110,"byte_end":14420113,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420114,"byte_end":14420138,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420139,"byte_end":14420177,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420178,"byte_end":14420217,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420218,"byte_end":14420252,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420253,"byte_end":14420256,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420257,"byte_end":14420312,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420313,"byte_end":14420346,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420347,"byte_end":14420356,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420357,"byte_end":14420360,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420361,"byte_end":14420400,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420401,"byte_end":14420419,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420420,"byte_end":14420451,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420452,"byte_end":14420530,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420531,"byte_end":14420564,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420565,"byte_end":14420582,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420583,"byte_end":14420586,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420587,"byte_end":14420637,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420638,"byte_end":14420683,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420684,"byte_end":14420697,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420698,"byte_end":14420707,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420708,"byte_end":14420713,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420714,"byte_end":14420721,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420722,"byte_end":14420725,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420726,"byte_end":14420755,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420756,"byte_end":14420797,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420798,"byte_end":14420842,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420843,"byte_end":14420877,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14420878,"byte_end":14420919,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":11086},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422186,"byte_end":14422189,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14421982,"byte_end":14422038,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422043,"byte_end":14422046,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422051,"byte_end":14422065,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422070,"byte_end":14422073,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422078,"byte_end":14422085,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422090,"byte_end":14422118,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422123,"byte_end":14422126,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422131,"byte_end":14422162,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422167,"byte_end":14422174,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11087},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423261,"byte_end":14423269,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"pub async fn notified<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422331,"byte_end":14422359,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422364,"byte_end":14422367,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422372,"byte_end":14422448,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422453,"byte_end":14422527,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422532,"byte_end":14422607,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422612,"byte_end":14422681,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422686,"byte_end":14422689,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422694,"byte_end":14422726,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422731,"byte_end":14422734,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422739,"byte_end":14422753,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422758,"byte_end":14422761,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422766,"byte_end":14422773,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422778,"byte_end":14422806,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422811,"byte_end":14422834,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422839,"byte_end":14422842,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422847,"byte_end":14422865,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422870,"byte_end":14422891,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422896,"byte_end":14422941,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422946,"byte_end":14422983,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422988,"byte_end":14422991,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14422996,"byte_end":14423029,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423034,"byte_end":14423071,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423076,"byte_end":14423122,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423127,"byte_end":14423138,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423143,"byte_end":14423146,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423151,"byte_end":14423192,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423197,"byte_end":14423221,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423226,"byte_end":14423231,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423236,"byte_end":14423243,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11090},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424765,"byte_end":14424771,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423606,"byte_end":14423633,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423638,"byte_end":14423641,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423646,"byte_end":14423717,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423722,"byte_end":14423790,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423795,"byte_end":14423871,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423876,"byte_end":14423917,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423922,"byte_end":14423925,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14423930,"byte_end":14424004,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424009,"byte_end":14424083,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424088,"byte_end":14424160,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424165,"byte_end":14424179,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424184,"byte_end":14424187,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424192,"byte_end":14424236,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424241,"byte_end":14424244,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424249,"byte_end":14424263,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424268,"byte_end":14424271,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424276,"byte_end":14424283,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424288,"byte_end":14424316,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424321,"byte_end":14424344,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424349,"byte_end":14424352,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424357,"byte_end":14424375,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424380,"byte_end":14424401,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424406,"byte_end":14424451,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424456,"byte_end":14424493,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424498,"byte_end":14424501,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424506,"byte_end":14424539,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424544,"byte_end":14424581,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424586,"byte_end":14424632,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424637,"byte_end":14424648,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424653,"byte_end":14424656,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424661,"byte_end":14424702,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424707,"byte_end":14424731,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424736,"byte_end":14424741,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14424746,"byte_end":14424753,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":11114},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":11115},{"krate":0,"index":11118},{"krate":0,"index":11121},{"krate":0,"index":11124},{"krate":0,"index":11127},{"krate":0,"index":11130},{"krate":0,"index":11133},{"krate":0,"index":11136},{"krate":0,"index":11137},{"krate":0,"index":11140},{"krate":0,"index":11141},{"krate":0,"index":11143},{"krate":0,"index":11144},{"krate":0,"index":11146},{"krate":0,"index":11147},{"krate":0,"index":11148},{"krate":0,"index":11150},{"krate":0,"index":11151},{"krate":0,"index":11153},{"krate":0,"index":11154},{"krate":0,"index":11157},{"krate":0,"index":11160},{"krate":0,"index":12097},{"krate":0,"index":12100},{"krate":0,"index":12103},{"krate":0,"index":12106},{"krate":0,"index":11163},{"krate":0,"index":11173},{"krate":0,"index":11174},{"krate":0,"index":12134},{"krate":0,"index":12137},{"krate":0,"index":12139},{"krate":0,"index":11180},{"krate":0,"index":11182},{"krate":0,"index":11197},{"krate":0,"index":11200},{"krate":0,"index":11204},{"krate":0,"index":11207},{"krate":0,"index":11211},{"krate":0,"index":11235},{"krate":0,"index":11237},{"krate":0,"index":11239},{"krate":0,"index":11243},{"krate":0,"index":11249},{"krate":0,"index":11250},{"krate":0,"index":11251},{"krate":0,"index":11252},{"krate":0,"index":11253},{"krate":0,"index":11267}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14436547,"byte_end":14436617,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":12097},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437096,"byte_end":14437102,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":12099}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14436949,"byte_end":14436996,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14436997,"byte_end":14437000,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437001,"byte_end":14437067,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":12103},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437294,"byte_end":14437302,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":12105}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437145,"byte_end":14437194,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437195,"byte_end":14437198,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437199,"byte_end":14437265,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":11163},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437353,"byte_end":14437358,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":11164},{"krate":0,"index":12109},{"krate":0,"index":12112},{"krate":0,"index":12114},{"krate":0,"index":12115},{"krate":0,"index":12117},{"krate":0,"index":12118},{"krate":0,"index":12121},{"krate":0,"index":12126},{"krate":0,"index":12128},{"krate":0,"index":12129},{"krate":0,"index":12131},{"krate":0,"index":12132},{"krate":0,"index":11167},{"krate":0,"index":11169},{"krate":0,"index":11170},{"krate":0,"index":11172}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437365,"byte_end":14437388,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":12109},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437530,"byte_end":14437539,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437413,"byte_end":14437478,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12122},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437761,"byte_end":14437766,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":12121},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437694,"byte_end":14437752,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12124},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437855,"byte_end":14437861,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":12121},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437777,"byte_end":14437846,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":12121},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437671,"byte_end":14437683,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":12122},{"krate":0,"index":12124}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437561,"byte_end":14437621,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":11180},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439858,"byte_end":14439865,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439043,"byte_end":14439122,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439123,"byte_end":14439133,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439134,"byte_end":14439137,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439138,"byte_end":14439214,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439215,"byte_end":14439293,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439294,"byte_end":14439340,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439341,"byte_end":14439344,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439345,"byte_end":14439391,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439392,"byte_end":14439395,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439396,"byte_end":14439410,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439411,"byte_end":14439414,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439415,"byte_end":14439422,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439423,"byte_end":14439452,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439453,"byte_end":14439456,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439457,"byte_end":14439475,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439476,"byte_end":14439497,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439498,"byte_end":14439540,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439541,"byte_end":14439544,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439545,"byte_end":14439578,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439579,"byte_end":14439619,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439620,"byte_end":14439669,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439670,"byte_end":14439683,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439684,"byte_end":14439695,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439696,"byte_end":14439699,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439700,"byte_end":14439724,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439725,"byte_end":14439772,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439773,"byte_end":14439826,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439827,"byte_end":14439836,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439837,"byte_end":14439842,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14439843,"byte_end":14439850,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":11184},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441901,"byte_end":14441905,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440330,"byte_end":14440405,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440410,"byte_end":14440426,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440431,"byte_end":14440434,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440439,"byte_end":14440518,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440523,"byte_end":14440598,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440603,"byte_end":14440679,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440684,"byte_end":14440756,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440761,"byte_end":14440774,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440779,"byte_end":14440782,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440787,"byte_end":14440863,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440868,"byte_end":14440944,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440949,"byte_end":14441021,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441026,"byte_end":14441099,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441104,"byte_end":14441178,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441183,"byte_end":14441255,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441260,"byte_end":14441297,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441302,"byte_end":14441305,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441310,"byte_end":14441324,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441329,"byte_end":14441332,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441337,"byte_end":14441369,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441374,"byte_end":14441377,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441382,"byte_end":14441389,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441394,"byte_end":14441423,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441428,"byte_end":14441431,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441436,"byte_end":14441454,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441459,"byte_end":14441480,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441485,"byte_end":14441527,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441532,"byte_end":14441535,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441540,"byte_end":14441573,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441578,"byte_end":14441618,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441623,"byte_end":14441672,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441677,"byte_end":14441690,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441695,"byte_end":14441706,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441711,"byte_end":14441714,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441719,"byte_end":14441743,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441748,"byte_end":14441795,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441800,"byte_end":14441853,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441858,"byte_end":14441867,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441872,"byte_end":14441877,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14441882,"byte_end":14441889,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11187},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14442306,"byte_end":14442317,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11189},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445559,"byte_end":14445565,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14443674,"byte_end":14443732,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14443737,"byte_end":14443740,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14443745,"byte_end":14443819,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14443824,"byte_end":14443858,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14443863,"byte_end":14443866,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14443871,"byte_end":14443936,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14443941,"byte_end":14444013,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444018,"byte_end":14444021,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444026,"byte_end":14444038,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444043,"byte_end":14444046,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444051,"byte_end":14444099,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444104,"byte_end":14444107,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444112,"byte_end":14444138,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444143,"byte_end":14444173,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444178,"byte_end":14444181,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444186,"byte_end":14444200,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444205,"byte_end":14444208,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444213,"byte_end":14444228,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444233,"byte_end":14444236,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444241,"byte_end":14444248,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444253,"byte_end":14444282,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444287,"byte_end":14444290,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444295,"byte_end":14444313,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444318,"byte_end":14444339,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444344,"byte_end":14444396,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444401,"byte_end":14444404,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444409,"byte_end":14444442,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444447,"byte_end":14444468,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444473,"byte_end":14444484,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444489,"byte_end":14444492,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444497,"byte_end":14444523,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444528,"byte_end":14444569,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444574,"byte_end":14444579,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444584,"byte_end":14444591,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444596,"byte_end":14444599,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444604,"byte_end":14444626,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444631,"byte_end":14444634,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444639,"byte_end":14444646,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444651,"byte_end":14444680,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444685,"byte_end":14444723,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444728,"byte_end":14444731,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444736,"byte_end":14444773,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444778,"byte_end":14444781,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444786,"byte_end":14444820,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444825,"byte_end":14444876,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444881,"byte_end":14444906,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444911,"byte_end":14444916,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444921,"byte_end":14444924,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444929,"byte_end":14444947,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444952,"byte_end":14444973,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14444978,"byte_end":14445024,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445029,"byte_end":14445032,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445037,"byte_end":14445070,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445075,"byte_end":14445096,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445101,"byte_end":14445144,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445149,"byte_end":14445224,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445229,"byte_end":14445246,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445251,"byte_end":14445296,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445301,"byte_end":14445344,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445349,"byte_end":14445366,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445371,"byte_end":14445384,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445389,"byte_end":14445400,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445405,"byte_end":14445408,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445413,"byte_end":14445449,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445454,"byte_end":14445519,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445524,"byte_end":14445529,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445534,"byte_end":14445541,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11196},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446435,"byte_end":14446444,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445676,"byte_end":14445750,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445755,"byte_end":14445758,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445763,"byte_end":14445837,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445842,"byte_end":14445876,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445881,"byte_end":14445884,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445889,"byte_end":14445964,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445969,"byte_end":14445972,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14445977,"byte_end":14446003,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446008,"byte_end":14446038,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446043,"byte_end":14446046,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446051,"byte_end":14446065,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446070,"byte_end":14446073,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446078,"byte_end":14446085,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446090,"byte_end":14446119,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446124,"byte_end":14446127,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446132,"byte_end":14446150,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446155,"byte_end":14446176,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446181,"byte_end":14446223,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446228,"byte_end":14446231,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446236,"byte_end":14446269,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446274,"byte_end":14446277,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446282,"byte_end":14446299,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446304,"byte_end":14446307,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446312,"byte_end":14446344,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446349,"byte_end":14446401,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446406,"byte_end":14446411,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446416,"byte_end":14446423,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11202},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448422,"byte_end":14448427,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446784,"byte_end":14446851,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446856,"byte_end":14446859,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446864,"byte_end":14446938,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446943,"byte_end":14447011,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447016,"byte_end":14447082,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447087,"byte_end":14447101,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447106,"byte_end":14447109,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447114,"byte_end":14447190,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447195,"byte_end":14447258,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447263,"byte_end":14447266,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447271,"byte_end":14447293,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447298,"byte_end":14447334,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447339,"byte_end":14447342,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447347,"byte_end":14447361,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447366,"byte_end":14447369,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447374,"byte_end":14447409,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447414,"byte_end":14447417,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447422,"byte_end":14447429,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447434,"byte_end":14447463,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447468,"byte_end":14447518,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447523,"byte_end":14447526,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447531,"byte_end":14447549,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447554,"byte_end":14447575,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447580,"byte_end":14447626,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447631,"byte_end":14447634,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447639,"byte_end":14447672,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447677,"byte_end":14447680,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447685,"byte_end":14447704,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447709,"byte_end":14447712,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447717,"byte_end":14447749,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447754,"byte_end":14447806,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447811,"byte_end":14447814,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447819,"byte_end":14447848,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447853,"byte_end":14447896,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447901,"byte_end":14447933,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447938,"byte_end":14447947,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447952,"byte_end":14447957,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447962,"byte_end":14447969,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447974,"byte_end":14447977,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14447982,"byte_end":14448033,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448038,"byte_end":14448041,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448046,"byte_end":14448053,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448058,"byte_end":14448087,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448092,"byte_end":14448095,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448100,"byte_end":14448118,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448123,"byte_end":14448144,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448149,"byte_end":14448195,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448200,"byte_end":14448203,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448208,"byte_end":14448257,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448262,"byte_end":14448265,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448270,"byte_end":14448289,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448294,"byte_end":14448297,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448302,"byte_end":14448343,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448348,"byte_end":14448388,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448393,"byte_end":14448398,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448403,"byte_end":14448410,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11203},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450410,"byte_end":14450418,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448525,"byte_end":14448557,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448562,"byte_end":14448565,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448570,"byte_end":14448643,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448648,"byte_end":14448714,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448719,"byte_end":14448743,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448748,"byte_end":14448751,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448756,"byte_end":14448822,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448827,"byte_end":14448849,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448854,"byte_end":14448857,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448862,"byte_end":14448874,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448879,"byte_end":14448882,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448887,"byte_end":14448938,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14448943,"byte_end":14449006,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449011,"byte_end":14449086,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449091,"byte_end":14449105,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449110,"byte_end":14449113,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449118,"byte_end":14449132,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449137,"byte_end":14449140,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449145,"byte_end":14449195,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449200,"byte_end":14449203,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449208,"byte_end":14449215,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449220,"byte_end":14449249,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449254,"byte_end":14449304,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449309,"byte_end":14449312,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449317,"byte_end":14449335,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449340,"byte_end":14449361,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449366,"byte_end":14449412,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449417,"byte_end":14449420,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449425,"byte_end":14449454,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449459,"byte_end":14449504,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449509,"byte_end":14449551,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449556,"byte_end":14449588,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449593,"byte_end":14449602,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449607,"byte_end":14449610,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449615,"byte_end":14449638,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449643,"byte_end":14449677,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449682,"byte_end":14449685,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449690,"byte_end":14449719,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449724,"byte_end":14449776,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449781,"byte_end":14449813,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449818,"byte_end":14449827,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449832,"byte_end":14449837,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449842,"byte_end":14449849,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449854,"byte_end":14449857,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449862,"byte_end":14449923,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449928,"byte_end":14449931,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449936,"byte_end":14449943,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449948,"byte_end":14449977,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14449982,"byte_end":14450032,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450037,"byte_end":14450040,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450045,"byte_end":14450063,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450068,"byte_end":14450089,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450094,"byte_end":14450146,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450151,"byte_end":14450154,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450159,"byte_end":14450176,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450181,"byte_end":14450184,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450189,"byte_end":14450218,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450223,"byte_end":14450277,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450282,"byte_end":14450325,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450330,"byte_end":14450362,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450367,"byte_end":14450376,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450381,"byte_end":14450386,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14450391,"byte_end":14450398,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12201},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518983,"byte_end":14518992,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":12202}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518332,"byte_end":14518397,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518398,"byte_end":14518401,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518402,"byte_end":14518477,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518478,"byte_end":14518554,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518555,"byte_end":14518635,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518636,"byte_end":14518645,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518646,"byte_end":14518649,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518650,"byte_end":14518723,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518724,"byte_end":14518803,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518804,"byte_end":14518882,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14518883,"byte_end":14518954,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":12205},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519241,"byte_end":14519256,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":12207},{"krate":0,"index":12208}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519057,"byte_end":14519089,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519090,"byte_end":14519093,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519094,"byte_end":14519145,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519146,"byte_end":14519149,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519150,"byte_end":14519200,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519201,"byte_end":14519212,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12212},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519517,"byte_end":14519537,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":12213},{"krate":0,"index":12214}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519308,"byte_end":14519347,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519348,"byte_end":14519351,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519352,"byte_end":14519409,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519410,"byte_end":14519413,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519414,"byte_end":14519476,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519477,"byte_end":14519488,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12217},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519833,"byte_end":14519848,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519586,"byte_end":14519650,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519651,"byte_end":14519654,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519655,"byte_end":14519732,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519733,"byte_end":14519745,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519746,"byte_end":14519749,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14519750,"byte_end":14519804,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":11576},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520402,"byte_end":14520405,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520327,"byte_end":14520390,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":11577},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520581,"byte_end":14520598,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520517,"byte_end":14520569,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":11578},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520845,"byte_end":14520856,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520668,"byte_end":14520710,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520715,"byte_end":14520718,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520723,"byte_end":14520833,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":11579},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520976,"byte_end":14520983,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520919,"byte_end":14520958,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":11582},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521219,"byte_end":14521230,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521158,"byte_end":14521207,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":11583},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521691,"byte_end":14521704,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521513,"byte_end":14521552,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521557,"byte_end":14521560,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521565,"byte_end":14521633,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521638,"byte_end":14521641,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521646,"byte_end":14521673,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":11586},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522084,"byte_end":14522101,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521902,"byte_end":14521951,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521956,"byte_end":14521959,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14521964,"byte_end":14522032,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522037,"byte_end":14522040,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522045,"byte_end":14522072,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":11589},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522616,"byte_end":14522622,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522441,"byte_end":14522511,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522516,"byte_end":14522585,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522590,"byte_end":14522604,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":11591},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522877,"byte_end":14522883,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522702,"byte_end":14522772,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522777,"byte_end":14522846,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522851,"byte_end":14522865,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":12222},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525935,"byte_end":14525941,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":12224},{"krate":0,"index":12225}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523405,"byte_end":14523443,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523444,"byte_end":14523447,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523448,"byte_end":14523525,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523526,"byte_end":14523605,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523606,"byte_end":14523685,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523686,"byte_end":14523744,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523745,"byte_end":14523748,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523749,"byte_end":14523827,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523828,"byte_end":14523906,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523907,"byte_end":14523985,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14523986,"byte_end":14524051,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524052,"byte_end":14524055,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524056,"byte_end":14524120,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524121,"byte_end":14524193,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524194,"byte_end":14524274,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524275,"byte_end":14524355,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524356,"byte_end":14524436,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524437,"byte_end":14524506,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524507,"byte_end":14524577,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524578,"byte_end":14524616,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524617,"byte_end":14524620,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524621,"byte_end":14524698,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524699,"byte_end":14524784,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524785,"byte_end":14524865,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524866,"byte_end":14524913,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524914,"byte_end":14524986,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524987,"byte_end":14524990,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14524991,"byte_end":14525005,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525006,"byte_end":14525009,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525010,"byte_end":14525017,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525018,"byte_end":14525046,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525047,"byte_end":14525050,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525051,"byte_end":14525069,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525070,"byte_end":14525091,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525092,"byte_end":14525126,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525127,"byte_end":14525130,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525131,"byte_end":14525179,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525180,"byte_end":14525189,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525190,"byte_end":14525229,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525230,"byte_end":14525269,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525270,"byte_end":14525301,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525302,"byte_end":14525333,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525334,"byte_end":14525383,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525384,"byte_end":14525387,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525388,"byte_end":14525439,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525440,"byte_end":14525449,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525450,"byte_end":14525493,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525494,"byte_end":14525514,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525515,"byte_end":14525545,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525546,"byte_end":14525585,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525586,"byte_end":14525591,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525592,"byte_end":14525599,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525600,"byte_end":14525603,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525604,"byte_end":14525638,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525639,"byte_end":14525668,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525669,"byte_end":14525716,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525717,"byte_end":14525766,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525767,"byte_end":14525804,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14525805,"byte_end":14525906,"line_start":72,"line_end":72,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":11627},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526316,"byte_end":14526331,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":11630},{"krate":0,"index":11631},{"krate":0,"index":11632}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526075,"byte_end":14526147,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526148,"byte_end":14526160,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526161,"byte_end":14526164,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526165,"byte_end":14526220,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526221,"byte_end":14526236,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526237,"byte_end":14526240,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526241,"byte_end":14526274,"line_start":88,"line_end":88,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526275,"byte_end":14526304,"line_start":89,"line_end":89,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":11636},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527649,"byte_end":14527652,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526475,"byte_end":14526543,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526548,"byte_end":14526551,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526556,"byte_end":14526629,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526634,"byte_end":14526654,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526659,"byte_end":14526662,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526667,"byte_end":14526718,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526723,"byte_end":14526793,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526798,"byte_end":14526862,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526867,"byte_end":14526870,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526875,"byte_end":14526947,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526952,"byte_end":14526978,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526983,"byte_end":14526986,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526991,"byte_end":14527100,"line_start":109,"line_end":109,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527105,"byte_end":14527168,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527173,"byte_end":14527176,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527181,"byte_end":14527195,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527200,"byte_end":14527203,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527208,"byte_end":14527215,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527220,"byte_end":14527267,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527272,"byte_end":14527275,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527280,"byte_end":14527328,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527333,"byte_end":14527353,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527358,"byte_end":14527361,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527366,"byte_end":14527386,"line_start":120,"line_end":120,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527391,"byte_end":14527414,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527419,"byte_end":14527454,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527459,"byte_end":14527462,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527467,"byte_end":14527501,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527506,"byte_end":14527560,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527565,"byte_end":14527568,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527573,"byte_end":14527599,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527604,"byte_end":14527611,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527616,"byte_end":14527623,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14527628,"byte_end":14527637,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11639},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529347,"byte_end":14529354,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528030,"byte_end":14528099,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528104,"byte_end":14528174,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528179,"byte_end":14528190,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528195,"byte_end":14528198,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528203,"byte_end":14528276,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528281,"byte_end":14528301,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528306,"byte_end":14528309,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528314,"byte_end":14528373,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528378,"byte_end":14528458,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528463,"byte_end":14528512,"line_start":155,"line_end":155,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528517,"byte_end":14528520,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528525,"byte_end":14528601,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528606,"byte_end":14528632,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528637,"byte_end":14528640,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528645,"byte_end":14528762,"line_start":160,"line_end":160,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528767,"byte_end":14528830,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528835,"byte_end":14528838,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528843,"byte_end":14528857,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528862,"byte_end":14528865,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528870,"byte_end":14528877,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528882,"byte_end":14528929,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528934,"byte_end":14528937,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528942,"byte_end":14528990,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14528995,"byte_end":14529015,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529020,"byte_end":14529023,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529028,"byte_end":14529048,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529053,"byte_end":14529076,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529081,"byte_end":14529116,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529121,"byte_end":14529124,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529129,"byte_end":14529163,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529168,"byte_end":14529258,"line_start":176,"line_end":176,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529263,"byte_end":14529266,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529271,"byte_end":14529297,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529302,"byte_end":14529309,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529314,"byte_end":14529321,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529326,"byte_end":14529335,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11654},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530603,"byte_end":14530619,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":11657},{"krate":0,"index":11658},{"krate":0,"index":11659}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530351,"byte_end":14530427,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530428,"byte_end":14530440,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530441,"byte_end":14530444,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530445,"byte_end":14530502,"line_start":228,"line_end":228,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530503,"byte_end":14530521,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530522,"byte_end":14530525,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530526,"byte_end":14530561,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530562,"byte_end":14530591,"line_start":232,"line_end":232,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":11663},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532004,"byte_end":14532007,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockWriteGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockWriteGuard` for a component of the locked data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530774,"byte_end":14530843,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530848,"byte_end":14530851,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530856,"byte_end":14530930,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530935,"byte_end":14530955,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530960,"byte_end":14530963,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530968,"byte_end":14531027,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531032,"byte_end":14531105,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531110,"byte_end":14531163,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531168,"byte_end":14531171,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531176,"byte_end":14531249,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531254,"byte_end":14531280,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531285,"byte_end":14531288,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531293,"byte_end":14531404,"line_start":252,"line_end":252,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531409,"byte_end":14531472,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531477,"byte_end":14531480,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531485,"byte_end":14531499,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531504,"byte_end":14531507,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531512,"byte_end":14531519,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531524,"byte_end":14531572,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531577,"byte_end":14531580,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531585,"byte_end":14531633,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531638,"byte_end":14531658,"line_start":261,"line_end":261,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531663,"byte_end":14531666,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531671,"byte_end":14531691,"line_start":263,"line_end":263,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531696,"byte_end":14531719,"line_start":264,"line_end":264,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531724,"byte_end":14531759,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531764,"byte_end":14531767,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531772,"byte_end":14531777,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531782,"byte_end":14531863,"line_start":268,"line_end":268,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531868,"byte_end":14531888,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531893,"byte_end":14531898,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531903,"byte_end":14531906,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531911,"byte_end":14531954,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531959,"byte_end":14531966,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531971,"byte_end":14531978,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14531983,"byte_end":14531992,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11666},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533806,"byte_end":14533813,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockWriteGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockWriteGuard`] for a component of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532401,"byte_end":14532468,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532473,"byte_end":14532547,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532552,"byte_end":14532563,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532568,"byte_end":14532571,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532576,"byte_end":14532650,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532655,"byte_end":14532675,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532680,"byte_end":14532683,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532688,"byte_end":14532739,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532744,"byte_end":14532819,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532824,"byte_end":14532888,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532893,"byte_end":14532896,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532901,"byte_end":14532974,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14532979,"byte_end":14533009,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533014,"byte_end":14533017,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533022,"byte_end":14533141,"line_start":305,"line_end":305,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533146,"byte_end":14533209,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533214,"byte_end":14533217,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533222,"byte_end":14533236,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533241,"byte_end":14533244,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533249,"byte_end":14533256,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533261,"byte_end":14533309,"line_start":311,"line_end":311,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533314,"byte_end":14533317,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533322,"byte_end":14533370,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533375,"byte_end":14533395,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533400,"byte_end":14533403,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533408,"byte_end":14533428,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533433,"byte_end":14533456,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533461,"byte_end":14533496,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533501,"byte_end":14533504,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533509,"byte_end":14533514,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533519,"byte_end":14533558,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533563,"byte_end":14533666,"line_start":322,"line_end":322,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533671,"byte_end":14533690,"line_start":323,"line_end":323,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533695,"byte_end":14533700,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533705,"byte_end":14533708,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533713,"byte_end":14533756,"line_start":326,"line_end":326,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533761,"byte_end":14533768,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533773,"byte_end":14533780,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14533785,"byte_end":14533794,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11695},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536916,"byte_end":14536919,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536706,"byte_end":14536769,"line_start":417,"line_end":417,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536774,"byte_end":14536777,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536782,"byte_end":14536796,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536801,"byte_end":14536804,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536809,"byte_end":14536816,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536821,"byte_end":14536849,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536854,"byte_end":14536857,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536862,"byte_end":14536892,"line_start":424,"line_end":424,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536897,"byte_end":14536904,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11696},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538134,"byte_end":14538138,"line_start":467,"line_end":467,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537096,"byte_end":14537167,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537172,"byte_end":14537218,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537223,"byte_end":14537226,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537231,"byte_end":14537300,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537305,"byte_end":14537381,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537386,"byte_end":14537410,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537415,"byte_end":14537418,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537423,"byte_end":14537437,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537442,"byte_end":14537445,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537450,"byte_end":14537457,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537462,"byte_end":14537485,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537490,"byte_end":14537518,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537523,"byte_end":14537526,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537531,"byte_end":14537549,"line_start":449,"line_end":449,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537554,"byte_end":14537575,"line_start":450,"line_end":450,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537580,"byte_end":14537624,"line_start":451,"line_end":451,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537629,"byte_end":14537663,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537668,"byte_end":14537671,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537676,"byte_end":14537710,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537715,"byte_end":14537741,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537746,"byte_end":14537749,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537754,"byte_end":14537787,"line_start":457,"line_end":457,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537792,"byte_end":14537862,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537867,"byte_end":14537907,"line_start":459,"line_end":459,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537912,"byte_end":14537942,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14537947,"byte_end":14538003,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538008,"byte_end":14538011,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538016,"byte_end":14538074,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538079,"byte_end":14538095,"line_start":464,"line_end":464,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538100,"byte_end":14538104,"line_start":465,"line_end":465,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538109,"byte_end":14538116,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11700},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539226,"byte_end":14539231,"line_start":502,"line_end":502,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538585,"byte_end":14538660,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538665,"byte_end":14538711,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538716,"byte_end":14538719,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538724,"byte_end":14538794,"line_start":483,"line_end":483,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538799,"byte_end":14538837,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538842,"byte_end":14538845,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538850,"byte_end":14538923,"line_start":486,"line_end":486,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538928,"byte_end":14538945,"line_start":487,"line_end":487,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538950,"byte_end":14538953,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538958,"byte_end":14538972,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538977,"byte_end":14538980,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538985,"byte_end":14538992,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14538997,"byte_end":14539025,"line_start":492,"line_end":492,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539030,"byte_end":14539033,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539038,"byte_end":14539056,"line_start":494,"line_end":494,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539061,"byte_end":14539082,"line_start":495,"line_end":495,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539087,"byte_end":14539119,"line_start":496,"line_end":496,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539124,"byte_end":14539127,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539132,"byte_end":14539169,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539174,"byte_end":14539187,"line_start":499,"line_end":499,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539192,"byte_end":14539196,"line_start":500,"line_end":500,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539201,"byte_end":14539208,"line_start":501,"line_end":501,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11704},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539760,"byte_end":14539770,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539695,"byte_end":14539748,"line_start":515,"line_end":515,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":11798},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":11799},{"krate":0,"index":11802},{"krate":0,"index":11805},{"krate":0,"index":11808},{"krate":0,"index":11811},{"krate":0,"index":11814},{"krate":0,"index":11815},{"krate":0,"index":11816},{"krate":0,"index":11818},{"krate":0,"index":11819},{"krate":0,"index":11821},{"krate":0,"index":11822},{"krate":0,"index":11825},{"krate":0,"index":11828},{"krate":0,"index":11831},{"krate":0,"index":11834},{"krate":0,"index":11837},{"krate":0,"index":11838},{"krate":0,"index":11839},{"krate":0,"index":11841},{"krate":0,"index":11842},{"krate":0,"index":11844},{"krate":0,"index":11845},{"krate":0,"index":11848},{"krate":0,"index":12229},{"krate":0,"index":12233},{"krate":0,"index":12236},{"krate":0,"index":12239},{"krate":0,"index":12242},{"krate":0,"index":12246},{"krate":0,"index":11851},{"krate":0,"index":12256},{"krate":0,"index":12262},{"krate":0,"index":11860},{"krate":0,"index":12265},{"krate":0,"index":12268},{"krate":0,"index":12270},{"krate":0,"index":12272},{"krate":0,"index":12275},{"krate":0,"index":11861},{"krate":0,"index":11862},{"krate":0,"index":11866},{"krate":0,"index":11871},{"krate":0,"index":11878},{"krate":0,"index":11883},{"krate":0,"index":11886},{"krate":0,"index":11889},{"krate":0,"index":11897},{"krate":0,"index":11899},{"krate":0,"index":11902},{"krate":0,"index":11906},{"krate":0,"index":11909},{"krate":0,"index":11911},{"krate":0,"index":11913},{"krate":0,"index":11914},{"krate":0,"index":11917}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553269,"byte_end":14553348,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553349,"byte_end":14553359,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553360,"byte_end":14553363,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553364,"byte_end":14553440,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553441,"byte_end":14553515,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553516,"byte_end":14553519,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553520,"byte_end":14553531,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553532,"byte_end":14553535,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553536,"byte_end":14553603,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ the producer and sender halves of the channel. The channel is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553604,"byte_end":14553669,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553670,"byte_end":14553735,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ be ready upon creation and will yield either this initial value or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553736,"byte_end":14553806,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ the latest value that has been sent by `Sender`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553807,"byte_end":14553859,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553860,"byte_end":14553863,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553864,"byte_end":14553931,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553932,"byte_end":14553935,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553936,"byte_end":14553950,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553951,"byte_end":14553954,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553955,"byte_end":14553962,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553963,"byte_end":14553990,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553991,"byte_end":14553994,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14553995,"byte_end":14554059,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554060,"byte_end":14554111,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554112,"byte_end":14554115,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554116,"byte_end":14554149,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554150,"byte_end":14554203,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554204,"byte_end":14554255,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554256,"byte_end":14554269,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554270,"byte_end":14554281,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554282,"byte_end":14554285,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554286,"byte_end":14554317,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554318,"byte_end":14554330,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554331,"byte_end":14554338,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554339,"byte_end":14554346,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554347,"byte_end":14554350,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554351,"byte_end":14554364,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554365,"byte_end":14554368,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554369,"byte_end":14554443,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ handles have been dropped. This indicates that there is no further interest","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554444,"byte_end":14554523,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ in the values being produced and work can be stopped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554524,"byte_end":14554581,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554582,"byte_end":14554585,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554586,"byte_end":14554605,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554606,"byte_end":14554609,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554610,"byte_end":14554690,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554691,"byte_end":14554770,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554771,"byte_end":14554843,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554844,"byte_end":14554847,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554848,"byte_end":14554890,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554891,"byte_end":14554937,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554938,"byte_end":14554996,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14554997,"byte_end":14555041,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555042,"byte_end":14555100,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":12229},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555588,"byte_end":14555596,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":12231},{"krate":0,"index":12232}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555422,"byte_end":14555488,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555489,"byte_end":14555492,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555493,"byte_end":14555559,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":12236},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555903,"byte_end":14555909,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":12238}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555738,"byte_end":14555803,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555804,"byte_end":14555807,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555808,"byte_end":14555874,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":12242},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556230,"byte_end":14556233,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":12245}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555947,"byte_end":14555989,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555990,"byte_end":14555993,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14555994,"byte_end":14556070,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556071,"byte_end":14556150,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556151,"byte_end":14556201,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":11851},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556289,"byte_end":14556294,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":11852},{"krate":0,"index":12250},{"krate":0,"index":12253},{"krate":0,"index":11855},{"krate":0,"index":11858}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556301,"byte_end":14556322,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":12250},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556430,"byte_end":14556439,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":12252}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556347,"byte_end":14556393,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":11862},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558218,"byte_end":14558225,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T: Clone>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557450,"byte_end":14557526,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557527,"byte_end":14557530,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557531,"byte_end":14557613,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557614,"byte_end":14557690,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557691,"byte_end":14557727,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557728,"byte_end":14557731,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557732,"byte_end":14557746,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557747,"byte_end":14557750,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557751,"byte_end":14557758,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557759,"byte_end":14557786,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557787,"byte_end":14557790,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557791,"byte_end":14557855,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557856,"byte_end":14557907,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557908,"byte_end":14557911,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557912,"byte_end":14557945,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14557946,"byte_end":14557999,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558000,"byte_end":14558051,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558052,"byte_end":14558065,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558066,"byte_end":14558077,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558078,"byte_end":14558081,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558082,"byte_end":14558113,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558114,"byte_end":14558126,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558127,"byte_end":14558134,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558135,"byte_end":14558142,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558143,"byte_end":14558146,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558147,"byte_end":14558176,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558177,"byte_end":14558210,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":11868},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559394,"byte_end":14559400,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558932,"byte_end":14558987,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558992,"byte_end":14558995,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559000,"byte_end":14559076,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559081,"byte_end":14559157,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559162,"byte_end":14559193,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559198,"byte_end":14559201,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559206,"byte_end":14559220,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559225,"byte_end":14559228,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559233,"byte_end":14559240,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559245,"byte_end":14559272,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559277,"byte_end":14559280,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559285,"byte_end":14559327,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559332,"byte_end":14559370,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559375,"byte_end":14559382,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11869},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14559560,"byte_end":14559573,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"pub fn poll_recv_ref<'a>(&'a mut Self, &mut Context) -> Poll<Option<Ref>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11873},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561294,"byte_end":14561298,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560212,"byte_end":14560272,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560277,"byte_end":14560280,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560285,"byte_end":14560353,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560358,"byte_end":14560432,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560437,"byte_end":14560510,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560515,"byte_end":14560554,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560559,"byte_end":14560562,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560567,"byte_end":14560622,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560627,"byte_end":14560630,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560635,"byte_end":14560649,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560654,"byte_end":14560657,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560662,"byte_end":14560669,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560674,"byte_end":14560701,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560706,"byte_end":14560709,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560714,"byte_end":14560732,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560737,"byte_end":14560758,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560763,"byte_end":14560814,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560819,"byte_end":14560822,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560827,"byte_end":14560868,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560873,"byte_end":14560904,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560909,"byte_end":14560912,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560917,"byte_end":14560950,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560955,"byte_end":14561000,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561005,"byte_end":14561016,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561021,"byte_end":14561024,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561029,"byte_end":14561091,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561096,"byte_end":14561137,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561142,"byte_end":14561175,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561180,"byte_end":14561183,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561188,"byte_end":14561220,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561225,"byte_end":14561254,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561259,"byte_end":14561264,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561269,"byte_end":14561276,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11891},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14562364,"byte_end":14562373,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"pub fn broadcast(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14562284,"byte_end":14562352,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":11892},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14563204,"byte_end":14563210,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14562993,"byte_end":14563039,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14563044,"byte_end":14563047,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14563052,"byte_end":14563126,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14563131,"byte_end":14563186,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":12277},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":12281},{"krate":0,"index":12285},{"krate":0,"index":12294},{"krate":0,"index":12297},{"krate":0,"index":12298},{"krate":0,"index":12301},{"krate":0,"index":12304},{"krate":0,"index":12314},{"krate":0,"index":12317},{"krate":0,"index":12331},{"krate":0,"index":12344},{"krate":0,"index":12456},{"krate":0,"index":12457},{"krate":0,"index":12460},{"krate":0,"index":12463},{"krate":0,"index":12542}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21598,"byte_end":21625,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14564956,"byte_end":14564987,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14564988,"byte_end":14564991,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14564992,"byte_end":14565014,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565015,"byte_end":14565018,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565019,"byte_end":14565100,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565101,"byte_end":14565181,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565182,"byte_end":14565262,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565263,"byte_end":14565337,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565338,"byte_end":14565413,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565414,"byte_end":14565436,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565437,"byte_end":14565440,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565441,"byte_end":14565476,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565477,"byte_end":14565480,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565481,"byte_end":14565555,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565556,"byte_end":14565635,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565636,"byte_end":14565708,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565709,"byte_end":14565784,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565785,"byte_end":14565838,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565839,"byte_end":14565842,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565843,"byte_end":14565920,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565921,"byte_end":14565994,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14565995,"byte_end":14566074,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566075,"byte_end":14566153,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566154,"byte_end":14566226,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566227,"byte_end":14566302,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566303,"byte_end":14566377,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566378,"byte_end":14566453,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566454,"byte_end":14566484,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566485,"byte_end":14566488,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566489,"byte_end":14566567,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566568,"byte_end":14566643,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566644,"byte_end":14566721,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566722,"byte_end":14566801,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566802,"byte_end":14566880,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566881,"byte_end":14566956,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14566957,"byte_end":14567032,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567033,"byte_end":14567094,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567095,"byte_end":14567098,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567099,"byte_end":14567123,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567124,"byte_end":14567188,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567189,"byte_end":14567249,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567250,"byte_end":14567339,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567340,"byte_end":14567428,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567429,"byte_end":14567432,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567433,"byte_end":14567458,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567459,"byte_end":14567462,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567463,"byte_end":14567530,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567531,"byte_end":14567534,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567535,"byte_end":14567551,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567552,"byte_end":14567555,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567556,"byte_end":14567635,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567636,"byte_end":14567715,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567716,"byte_end":14567795,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567796,"byte_end":14567863,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567864,"byte_end":14567867,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567868,"byte_end":14567875,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567876,"byte_end":14567896,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567897,"byte_end":14567900,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567901,"byte_end":14567923,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567924,"byte_end":14567947,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567948,"byte_end":14567984,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567985,"byte_end":14567992,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14567993,"byte_end":14568000,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568001,"byte_end":14568008,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568009,"byte_end":14568012,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568013,"byte_end":14568092,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568093,"byte_end":14568171,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568172,"byte_end":14568206,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568207,"byte_end":14568210,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568211,"byte_end":14568218,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568219,"byte_end":14568239,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568240,"byte_end":14568243,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568244,"byte_end":14568324,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568325,"byte_end":14568359,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568360,"byte_end":14568374,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568375,"byte_end":14568397,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568398,"byte_end":14568405,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568406,"byte_end":14568409,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568410,"byte_end":14568420,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568421,"byte_end":14568424,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568425,"byte_end":14568469,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568470,"byte_end":14568499,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568500,"byte_end":14568539,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568540,"byte_end":14568552,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568553,"byte_end":14568560,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568561,"byte_end":14568568,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568569,"byte_end":14568572,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568573,"byte_end":14568653,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568654,"byte_end":14568730,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568731,"byte_end":14568743,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568744,"byte_end":14568747,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568748,"byte_end":14568755,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568756,"byte_end":14568776,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568777,"byte_end":14568780,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568781,"byte_end":14568819,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568820,"byte_end":14568854,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568855,"byte_end":14568896,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568897,"byte_end":14568904,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568905,"byte_end":14568908,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568909,"byte_end":14568967,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14568968,"byte_end":14569001,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569002,"byte_end":14569009,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569010,"byte_end":14569017,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569018,"byte_end":14569021,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569022,"byte_end":14569095,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569096,"byte_end":14569124,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569125,"byte_end":14569128,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569129,"byte_end":14569170,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569171,"byte_end":14569204,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569205,"byte_end":14569251,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569252,"byte_end":14569295,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569296,"byte_end":14569338,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569339,"byte_end":14569380,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569381,"byte_end":14569384,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569385,"byte_end":14569414,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569415,"byte_end":14569418,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569419,"byte_end":14569499,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569500,"byte_end":14569579,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569580,"byte_end":14569659,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569660,"byte_end":14569700,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569701,"byte_end":14569704,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569705,"byte_end":14569779,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569780,"byte_end":14569860,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569861,"byte_end":14569864,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569865,"byte_end":14569888,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569889,"byte_end":14569892,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569893,"byte_end":14569973,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14569974,"byte_end":14570040,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570041,"byte_end":14570108,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570109,"byte_end":14570183,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570184,"byte_end":14570196,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570197,"byte_end":14570200,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570201,"byte_end":14570208,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570209,"byte_end":14570229,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570230,"byte_end":14570233,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570234,"byte_end":14570257,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570258,"byte_end":14570287,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570288,"byte_end":14570350,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570351,"byte_end":14570358,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570359,"byte_end":14570366,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570367,"byte_end":14570374,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570375,"byte_end":14570378,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570379,"byte_end":14570453,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570454,"byte_end":14570521,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570522,"byte_end":14570525,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570526,"byte_end":14570537,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570538,"byte_end":14570560,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570561,"byte_end":14570625,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570626,"byte_end":14570666,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570667,"byte_end":14570729,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570730,"byte_end":14570758,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570759,"byte_end":14570766,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570767,"byte_end":14570770,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570771,"byte_end":14570800,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570801,"byte_end":14570846,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570847,"byte_end":14570859,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570860,"byte_end":14570867,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570868,"byte_end":14570875,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570876,"byte_end":14570879,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570880,"byte_end":14570903,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570904,"byte_end":14570907,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570908,"byte_end":14570988,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14570989,"byte_end":14571063,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571064,"byte_end":14571140,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571141,"byte_end":14571215,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571216,"byte_end":14571295,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571296,"byte_end":14571378,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571379,"byte_end":14571400,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571401,"byte_end":14571404,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571405,"byte_end":14571421,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571422,"byte_end":14571425,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571426,"byte_end":14571433,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571434,"byte_end":14571454,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571455,"byte_end":14571458,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571459,"byte_end":14571482,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571483,"byte_end":14571525,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571526,"byte_end":14571588,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571589,"byte_end":14571617,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571618,"byte_end":14571625,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571626,"byte_end":14571629,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571630,"byte_end":14571675,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571676,"byte_end":14571683,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571684,"byte_end":14571691,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571692,"byte_end":14571695,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571696,"byte_end":14571714,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571715,"byte_end":14571718,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571719,"byte_end":14571793,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571794,"byte_end":14571872,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571873,"byte_end":14571949,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14571950,"byte_end":14572007,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572008,"byte_end":14572086,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572087,"byte_end":14572115,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572116,"byte_end":14572119,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572120,"byte_end":14572131,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572132,"byte_end":14572152,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572153,"byte_end":14572156,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572157,"byte_end":14572195,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572196,"byte_end":14572207,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572208,"byte_end":14572235,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572236,"byte_end":14572254,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572255,"byte_end":14572297,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572298,"byte_end":14572309,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572310,"byte_end":14572313,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572314,"byte_end":14572381,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572382,"byte_end":14572414,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572415,"byte_end":14572451,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572452,"byte_end":14572457,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572458,"byte_end":14572471,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572472,"byte_end":14572479,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572480,"byte_end":14572487,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572488,"byte_end":14572491,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572492,"byte_end":14572549,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572550,"byte_end":14572607,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572608,"byte_end":14572667,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572668,"byte_end":14572717,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":14572718,"byte_end":14572767,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":12288},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/blocking.rs","byte_start":14575367,"byte_end":14575381,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22068,"byte_end":22099,"line_start":272,"line_end":272,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":12291},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/blocking.rs","byte_start":14578270,"byte_end":14578284,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":16603,"byte_end":16631,"line_start":15,"line_end":15,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":12334},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/spawn.rs","byte_start":14582456,"byte_end":14582461,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":12336},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":14583542,"byte_end":14583551,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":14583461,"byte_end":14583524,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12545},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14587949,"byte_end":14587957,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":12546},{"krate":0,"index":12547},{"krate":0,"index":12548}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22281,"byte_end":22308,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":12554},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14589969,"byte_end":14589980,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22281,"byte_end":22308,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":12409},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14590877,"byte_end":14590880,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14590832,"byte_end":14590865,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":12410},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592585,"byte_end":14592596,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591422,"byte_end":14591472,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591477,"byte_end":14591480,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591485,"byte_end":14591545,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591550,"byte_end":14591553,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591558,"byte_end":14591630,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591635,"byte_end":14591705,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591710,"byte_end":14591721,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591726,"byte_end":14591746,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591751,"byte_end":14591754,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591759,"byte_end":14591777,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591782,"byte_end":14591803,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591808,"byte_end":14591850,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591855,"byte_end":14591858,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591863,"byte_end":14591935,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591940,"byte_end":14591993,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14591998,"byte_end":14592031,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592036,"byte_end":14592053,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592058,"byte_end":14592069,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592074,"byte_end":14592077,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592082,"byte_end":14592116,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592121,"byte_end":14592157,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592162,"byte_end":14592180,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592185,"byte_end":14592202,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592207,"byte_end":14592210,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592215,"byte_end":14592286,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592291,"byte_end":14592341,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592346,"byte_end":14592379,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592384,"byte_end":14592401,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592406,"byte_end":14592417,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592422,"byte_end":14592425,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592430,"byte_end":14592466,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592471,"byte_end":14592489,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592494,"byte_end":14592511,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592516,"byte_end":14592521,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592526,"byte_end":14592533,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592538,"byte_end":14592573,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":12412},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595331,"byte_end":14595339,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14592939,"byte_end":14593013,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593018,"byte_end":14593077,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593082,"byte_end":14593085,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593090,"byte_end":14593157,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593162,"byte_end":14593235,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593240,"byte_end":14593316,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593321,"byte_end":14593401,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593406,"byte_end":14593425,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593430,"byte_end":14593433,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593438,"byte_end":14593504,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593509,"byte_end":14593512,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593517,"byte_end":14593529,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593534,"byte_end":14593537,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593542,"byte_end":14593614,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593619,"byte_end":14593692,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593697,"byte_end":14593700,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593705,"byte_end":14593716,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593721,"byte_end":14593724,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593729,"byte_end":14593803,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593808,"byte_end":14593883,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593888,"byte_end":14593963,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14593968,"byte_end":14594045,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594050,"byte_end":14594053,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594058,"byte_end":14594091,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594096,"byte_end":14594115,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594120,"byte_end":14594152,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594157,"byte_end":14594177,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594182,"byte_end":14594185,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594190,"byte_end":14594231,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594236,"byte_end":14594274,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594279,"byte_end":14594314,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594319,"byte_end":14594363,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594368,"byte_end":14594427,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594432,"byte_end":14594454,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594459,"byte_end":14594474,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594479,"byte_end":14594497,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594502,"byte_end":14594513,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594518,"byte_end":14594546,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594551,"byte_end":14594557,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594562,"byte_end":14594569,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594574,"byte_end":14594608,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594613,"byte_end":14594620,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594625,"byte_end":14594657,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594662,"byte_end":14594682,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594687,"byte_end":14594690,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594695,"byte_end":14594736,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594741,"byte_end":14594779,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594784,"byte_end":14594819,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594824,"byte_end":14594868,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594873,"byte_end":14594932,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594937,"byte_end":14594959,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594964,"byte_end":14594985,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14594990,"byte_end":14595008,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595013,"byte_end":14595024,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595029,"byte_end":14595057,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595062,"byte_end":14595068,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595073,"byte_end":14595080,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595085,"byte_end":14595088,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595093,"byte_end":14595128,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595133,"byte_end":14595200,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595205,"byte_end":14595260,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595265,"byte_end":14595319,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":12414},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596590,"byte_end":14596599,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595498,"byte_end":14595568,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595573,"byte_end":14595576,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595581,"byte_end":14595651,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595656,"byte_end":14595732,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595737,"byte_end":14595805,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595810,"byte_end":14595890,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595895,"byte_end":14595967,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14595972,"byte_end":14596047,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596052,"byte_end":14596108,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596113,"byte_end":14596116,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596121,"byte_end":14596135,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596140,"byte_end":14596143,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596148,"byte_end":14596159,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596164,"byte_end":14596184,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596189,"byte_end":14596192,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596197,"byte_end":14596215,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596220,"byte_end":14596241,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596246,"byte_end":14596293,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596298,"byte_end":14596340,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596345,"byte_end":14596367,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596372,"byte_end":14596402,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596407,"byte_end":14596425,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596430,"byte_end":14596447,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596452,"byte_end":14596457,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596462,"byte_end":14596469,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596474,"byte_end":14596477,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596482,"byte_end":14596517,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14596522,"byte_end":14596572,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":12495},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605670,"byte_end":14605678,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":12497}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14604760,"byte_end":14604790,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14604791,"byte_end":14604794,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14604795,"byte_end":14604849,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14604850,"byte_end":14604853,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14604854,"byte_end":14604920,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14604921,"byte_end":14604988,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14604989,"byte_end":14605046,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605047,"byte_end":14605116,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605117,"byte_end":14605120,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605121,"byte_end":14605135,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605136,"byte_end":14605139,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605140,"byte_end":14605147,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605148,"byte_end":14605170,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605171,"byte_end":14605195,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605196,"byte_end":14605223,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605224,"byte_end":14605229,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605230,"byte_end":14605233,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605234,"byte_end":14605266,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605267,"byte_end":14605303,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605304,"byte_end":14605317,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605318,"byte_end":14605321,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605322,"byte_end":14605354,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605355,"byte_end":14605391,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605392,"byte_end":14605395,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605396,"byte_end":14605432,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605433,"byte_end":14605473,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605474,"byte_end":14605491,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605492,"byte_end":14605505,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605506,"byte_end":14605513,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605514,"byte_end":14605521,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605522,"byte_end":14605581,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":12497},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605720,"byte_end":14605725,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":12495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12500},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606253,"byte_end":14606258,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605803,"byte_end":14605867,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605872,"byte_end":14605875,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605880,"byte_end":14605941,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605946,"byte_end":14605949,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605954,"byte_end":14605970,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605975,"byte_end":14605978,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605983,"byte_end":14605990,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605995,"byte_end":14606017,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606022,"byte_end":14606046,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606051,"byte_end":14606078,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606083,"byte_end":14606088,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606093,"byte_end":14606096,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606101,"byte_end":14606133,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606138,"byte_end":14606193,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606198,"byte_end":14606211,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606216,"byte_end":14606223,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606228,"byte_end":14606235,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12504},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606732,"byte_end":14606736,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606483,"byte_end":14606549,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606554,"byte_end":14606557,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606562,"byte_end":14606574,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606579,"byte_end":14606582,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606587,"byte_end":14606648,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606653,"byte_end":14606720,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":12507},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607224,"byte_end":14607232,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14606977,"byte_end":14607043,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607048,"byte_end":14607051,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607056,"byte_end":14607122,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607127,"byte_end":14607192,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607197,"byte_end":14607212,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":12513},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607692,"byte_end":14607695,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607587,"byte_end":14607629,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607634,"byte_end":14607680,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":12557},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609184,"byte_end":14609195,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":12558}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609059,"byte_end":14609134,"line_start":224,"line_end":224,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":12569},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":12570},{"krate":0,"index":12571},{"krate":0,"index":12574},{"krate":0,"index":12687},{"krate":0,"index":12690},{"krate":0,"index":12724},{"krate":0,"index":12725},{"krate":0,"index":12728},{"krate":0,"index":12731},{"krate":0,"index":12734},{"krate":0,"index":13042},{"krate":0,"index":13063},{"krate":0,"index":13066},{"krate":0,"index":13110},{"krate":0,"index":13113},{"krate":0,"index":13154},{"krate":0,"index":13155},{"krate":0,"index":13158},{"krate":0,"index":13161},{"krate":0,"index":13164},{"krate":0,"index":13218},{"krate":0,"index":13219},{"krate":0,"index":13222},{"krate":0,"index":13225},{"krate":0,"index":13228},{"krate":0,"index":13494},{"krate":0,"index":13538},{"krate":0,"index":13539},{"krate":0,"index":13542},{"krate":0,"index":13231},{"krate":0,"index":13311},{"krate":0,"index":13314},{"krate":0,"index":13319}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609568,"byte_end":14609600,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609601,"byte_end":14609604,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609605,"byte_end":14609685,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609686,"byte_end":14609698,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609699,"byte_end":14609702,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609703,"byte_end":14609784,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609785,"byte_end":14609799,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609800,"byte_end":14609803,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609804,"byte_end":14609874,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609875,"byte_end":14609955,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609956,"byte_end":14609970,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609971,"byte_end":14609974,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14609975,"byte_end":14610054,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610055,"byte_end":14610127,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610128,"byte_end":14610197,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610198,"byte_end":14610201,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610202,"byte_end":14610279,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610280,"byte_end":14610298,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610299,"byte_end":14610302,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610303,"byte_end":14610374,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610375,"byte_end":14610394,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610395,"byte_end":14610398,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610399,"byte_end":14610469,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610470,"byte_end":14610473,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610474,"byte_end":14610488,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610489,"byte_end":14610492,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610493,"byte_end":14610539,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610540,"byte_end":14610543,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610544,"byte_end":14610551,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610552,"byte_end":14610583,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610584,"byte_end":14610587,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610588,"byte_end":14610616,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610617,"byte_end":14610620,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610621,"byte_end":14610624,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610625,"byte_end":14610643,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610644,"byte_end":14610665,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610666,"byte_end":14610718,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610719,"byte_end":14610759,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610760,"byte_end":14610765,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610766,"byte_end":14610773,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610774,"byte_end":14610777,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610778,"byte_end":14610857,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610858,"byte_end":14610936,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610937,"byte_end":14610949,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610950,"byte_end":14610953,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610954,"byte_end":14610961,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14610962,"byte_end":14611003,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611004,"byte_end":14611007,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611008,"byte_end":14611036,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611037,"byte_end":14611060,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611061,"byte_end":14611066,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611067,"byte_end":14611070,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611071,"byte_end":14611093,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611094,"byte_end":14611161,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611162,"byte_end":14611165,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611166,"byte_end":14611187,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611188,"byte_end":14611228,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611229,"byte_end":14611234,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611235,"byte_end":14611242,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611243,"byte_end":14611250,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611251,"byte_end":14611254,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611255,"byte_end":14611331,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611332,"byte_end":14611335,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611336,"byte_end":14611404,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611405,"byte_end":14611477,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611478,"byte_end":14611553,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611554,"byte_end":14611632,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611633,"byte_end":14611636,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611637,"byte_end":14611715,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611716,"byte_end":14611786,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611787,"byte_end":14611799,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611800,"byte_end":14611803,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611804,"byte_end":14611811,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611812,"byte_end":14611832,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611833,"byte_end":14611836,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611837,"byte_end":14611878,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611879,"byte_end":14611905,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611906,"byte_end":14611965,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611966,"byte_end":14611971,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611972,"byte_end":14611975,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611976,"byte_end":14611994,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14611995,"byte_end":14612016,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612017,"byte_end":14612089,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612090,"byte_end":14612114,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612115,"byte_end":14612149,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612150,"byte_end":14612195,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612196,"byte_end":14612205,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612206,"byte_end":14612211,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612212,"byte_end":14612219,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612220,"byte_end":14612223,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612224,"byte_end":14612267,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612268,"byte_end":14612309,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":12574},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":12575},{"krate":0,"index":12576},{"krate":0,"index":12579},{"krate":0,"index":12582},{"krate":0,"index":12583},{"krate":0,"index":12586},{"krate":0,"index":12589},{"krate":0,"index":12592},{"krate":0,"index":12595},{"krate":0,"index":12598},{"krate":0,"index":12601},{"krate":0,"index":12604},{"krate":0,"index":12607},{"krate":0,"index":12608},{"krate":0,"index":12610},{"krate":0,"index":12613},{"krate":0,"index":12614},{"krate":0,"index":12617},{"krate":0,"index":13340},{"krate":0,"index":13348},{"krate":0,"index":13351},{"krate":0,"index":13356},{"krate":0,"index":13359},{"krate":0,"index":13361},{"krate":0,"index":13363},{"krate":0,"index":13365},{"krate":0,"index":13369},{"krate":0,"index":13372},{"krate":0,"index":13379},{"krate":0,"index":12620},{"krate":0,"index":12621},{"krate":0,"index":12657},{"krate":0,"index":12659},{"krate":0,"index":12662},{"krate":0,"index":12666},{"krate":0,"index":12676},{"krate":0,"index":12679},{"krate":0,"index":12681}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618460,"byte_end":14618492,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618493,"byte_end":14618496,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618497,"byte_end":14618537,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618538,"byte_end":14618541,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618542,"byte_end":14618579,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":13340},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622890,"byte_end":14622900,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":13342},{"krate":0,"index":13343},{"krate":0,"index":13344},{"krate":0,"index":13345},{"krate":0,"index":13346},{"krate":0,"index":13347}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618820,"byte_end":14618852,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618853,"byte_end":14618856,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618857,"byte_end":14618934,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618935,"byte_end":14618975,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618976,"byte_end":14618979,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618980,"byte_end":14618991,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618992,"byte_end":14618995,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14618996,"byte_end":14619063,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619064,"byte_end":14619144,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619145,"byte_end":14619223,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619224,"byte_end":14619260,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619261,"byte_end":14619264,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619265,"byte_end":14619335,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619336,"byte_end":14619422,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619423,"byte_end":14619496,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619497,"byte_end":14619566,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619567,"byte_end":14619570,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619571,"byte_end":14619600,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619601,"byte_end":14619604,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619605,"byte_end":14619695,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619696,"byte_end":14619776,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619777,"byte_end":14619853,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619854,"byte_end":14619866,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619867,"byte_end":14619870,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619871,"byte_end":14619950,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14619951,"byte_end":14620028,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620029,"byte_end":14620105,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620106,"byte_end":14620139,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620140,"byte_end":14620143,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620144,"byte_end":14620222,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620223,"byte_end":14620299,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620300,"byte_end":14620378,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620379,"byte_end":14620418,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620419,"byte_end":14620422,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620423,"byte_end":14620443,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620444,"byte_end":14620447,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620448,"byte_end":14620546,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620547,"byte_end":14620644,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620645,"byte_end":14620686,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620687,"byte_end":14620690,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620691,"byte_end":14620791,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620792,"byte_end":14620857,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620858,"byte_end":14620861,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620862,"byte_end":14620944,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620945,"byte_end":14620972,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620973,"byte_end":14620976,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620977,"byte_end":14620988,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620989,"byte_end":14620992,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14620993,"byte_end":14621040,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621041,"byte_end":14621044,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621045,"byte_end":14621063,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621064,"byte_end":14621118,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621119,"byte_end":14621122,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621123,"byte_end":14621146,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621147,"byte_end":14621181,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621182,"byte_end":14621217,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621218,"byte_end":14621246,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621247,"byte_end":14621276,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621277,"byte_end":14621303,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621304,"byte_end":14621307,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621308,"byte_end":14621326,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621327,"byte_end":14621389,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621390,"byte_end":14621432,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621433,"byte_end":14621438,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621439,"byte_end":14621442,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621443,"byte_end":14621472,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621473,"byte_end":14621476,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621477,"byte_end":14621493,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621494,"byte_end":14621553,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621554,"byte_end":14621594,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621595,"byte_end":14621663,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621664,"byte_end":14621667,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621668,"byte_end":14621721,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621722,"byte_end":14621731,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621732,"byte_end":14621735,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621736,"byte_end":14621793,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621794,"byte_end":14621827,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621828,"byte_end":14621865,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621866,"byte_end":14621875,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621876,"byte_end":14621879,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621880,"byte_end":14621926,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621927,"byte_end":14621995,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14621996,"byte_end":14622048,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622049,"byte_end":14622062,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622063,"byte_end":14622072,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622073,"byte_end":14622076,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622077,"byte_end":14622160,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622161,"byte_end":14622238,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622239,"byte_end":14622272,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622273,"byte_end":14622326,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622327,"byte_end":14622340,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622341,"byte_end":14622344,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622345,"byte_end":14622376,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622377,"byte_end":14622386,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622387,"byte_end":14622392,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622393,"byte_end":14622400,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622401,"byte_end":14622404,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622405,"byte_end":14622440,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622441,"byte_end":14622482,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622483,"byte_end":14622506,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622507,"byte_end":14622583,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622584,"byte_end":14622631,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622632,"byte_end":14622687,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622688,"byte_end":14622725,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622726,"byte_end":14622764,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622765,"byte_end":14622783,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622784,"byte_end":14622823,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14622824,"byte_end":14622861,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":13351},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623615,"byte_end":14623622,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":13353},{"krate":0,"index":13354},{"krate":0,"index":13355}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623397,"byte_end":14623455,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623456,"byte_end":14623459,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623460,"byte_end":14623516,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623517,"byte_end":14623520,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623521,"byte_end":14623586,"line_start":151,"line_end":151,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":13359},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624090,"byte_end":14624093,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":13360}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623790,"byte_end":14623836,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623837,"byte_end":14623840,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623841,"byte_end":14623922,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623923,"byte_end":14623958,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623959,"byte_end":14623962,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14623963,"byte_end":14624000,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624001,"byte_end":14624054,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":12623},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625071,"byte_end":14625074,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624771,"byte_end":14624809,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624814,"byte_end":14624817,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624822,"byte_end":14624895,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624900,"byte_end":14624903,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624908,"byte_end":14624922,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624927,"byte_end":14624930,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624935,"byte_end":14624946,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624951,"byte_end":14624985,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624990,"byte_end":14625047,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625052,"byte_end":14625059,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12624},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625992,"byte_end":14626005,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625144,"byte_end":14625211,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625216,"byte_end":14625219,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625224,"byte_end":14625295,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625300,"byte_end":14625369,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625374,"byte_end":14625386,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625391,"byte_end":14625394,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625399,"byte_end":14625413,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625418,"byte_end":14625421,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625426,"byte_end":14625437,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625442,"byte_end":14625476,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625481,"byte_end":14625511,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625516,"byte_end":14625519,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625524,"byte_end":14625544,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625549,"byte_end":14625572,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625577,"byte_end":14625637,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625642,"byte_end":14625645,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625650,"byte_end":14625713,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625718,"byte_end":14625742,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625747,"byte_end":14625805,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625810,"byte_end":14625819,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625824,"byte_end":14625827,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625832,"byte_end":14625895,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625900,"byte_end":14625956,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625961,"byte_end":14625968,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14625973,"byte_end":14625980,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12625},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14628073,"byte_end":14628082,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626304,"byte_end":14626377,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626382,"byte_end":14626391,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626396,"byte_end":14626399,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626404,"byte_end":14626478,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626483,"byte_end":14626503,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626508,"byte_end":14626511,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626516,"byte_end":14626591,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626596,"byte_end":14626674,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626679,"byte_end":14626743,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626748,"byte_end":14626751,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626756,"byte_end":14626831,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626836,"byte_end":14626911,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626916,"byte_end":14626994,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14626999,"byte_end":14627072,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627077,"byte_end":14627153,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627158,"byte_end":14627192,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627197,"byte_end":14627200,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627205,"byte_end":14627257,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627262,"byte_end":14627265,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627270,"byte_end":14627282,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627287,"byte_end":14627290,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627295,"byte_end":14627355,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627360,"byte_end":14627363,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627368,"byte_end":14627382,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627387,"byte_end":14627390,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627395,"byte_end":14627410,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627415,"byte_end":14627418,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627423,"byte_end":14627434,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627439,"byte_end":14627492,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627497,"byte_end":14627500,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627505,"byte_end":14627525,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627530,"byte_end":14627553,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627558,"byte_end":14627606,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627611,"byte_end":14627651,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627656,"byte_end":14627716,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627721,"byte_end":14627724,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627729,"byte_end":14627756,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627761,"byte_end":14627805,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627810,"byte_end":14627853,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627858,"byte_end":14627865,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627870,"byte_end":14627877,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627882,"byte_end":14627885,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627890,"byte_end":14627937,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627942,"byte_end":14627977,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14627982,"byte_end":14628015,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14628020,"byte_end":14628043,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14628048,"byte_end":14628061,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":12626},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14629442,"byte_end":14629454,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14629234,"byte_end":14629309,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14629314,"byte_end":14629390,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14629395,"byte_end":14629430,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":12629},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631858,"byte_end":14631864,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630071,"byte_end":14630148,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630153,"byte_end":14630165,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630170,"byte_end":14630173,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630178,"byte_end":14630247,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630252,"byte_end":14630280,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630285,"byte_end":14630288,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630293,"byte_end":14630368,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630373,"byte_end":14630451,"line_start":370,"line_end":370,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630456,"byte_end":14630520,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630525,"byte_end":14630528,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630533,"byte_end":14630608,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630613,"byte_end":14630688,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630693,"byte_end":14630771,"line_start":375,"line_end":375,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630776,"byte_end":14630849,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630854,"byte_end":14630930,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630935,"byte_end":14630969,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630974,"byte_end":14630977,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14630982,"byte_end":14631034,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631039,"byte_end":14631042,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631047,"byte_end":14631059,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631064,"byte_end":14631067,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631072,"byte_end":14631147,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631152,"byte_end":14631165,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631170,"byte_end":14631173,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631178,"byte_end":14631192,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631197,"byte_end":14631200,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631205,"byte_end":14631220,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631225,"byte_end":14631228,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631233,"byte_end":14631244,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631249,"byte_end":14631281,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631286,"byte_end":14631314,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631319,"byte_end":14631322,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631327,"byte_end":14631347,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631352,"byte_end":14631375,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631380,"byte_end":14631428,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631433,"byte_end":14631501,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631506,"byte_end":14631509,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631514,"byte_end":14631541,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631546,"byte_end":14631590,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631595,"byte_end":14631638,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631643,"byte_end":14631650,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631655,"byte_end":14631662,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631667,"byte_end":14631670,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631675,"byte_end":14631722,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631727,"byte_end":14631762,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631767,"byte_end":14631800,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631805,"byte_end":14631828,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14631833,"byte_end":14631846,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":12642},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633941,"byte_end":14633947,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633087,"byte_end":14633145,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633150,"byte_end":14633153,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633158,"byte_end":14633231,"line_start":448,"line_end":448,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633236,"byte_end":14633309,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633314,"byte_end":14633331,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633336,"byte_end":14633339,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633344,"byte_end":14633356,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633361,"byte_end":14633364,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633369,"byte_end":14633432,"line_start":454,"line_end":454,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633437,"byte_end":14633440,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633445,"byte_end":14633459,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633464,"byte_end":14633467,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633472,"byte_end":14633487,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633492,"byte_end":14633495,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633500,"byte_end":14633511,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633516,"byte_end":14633548,"line_start":461,"line_end":461,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633553,"byte_end":14633581,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633586,"byte_end":14633589,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633594,"byte_end":14633614,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633619,"byte_end":14633642,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633647,"byte_end":14633695,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633700,"byte_end":14633768,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633773,"byte_end":14633776,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633781,"byte_end":14633808,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633813,"byte_end":14633857,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633862,"byte_end":14633905,"line_start":471,"line_end":471,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633910,"byte_end":14633917,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14633922,"byte_end":14633929,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12643},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635355,"byte_end":14635363,"line_start":518,"line_end":518,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634241,"byte_end":14634314,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634319,"byte_end":14634322,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634327,"byte_end":14634402,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634407,"byte_end":14634424,"line_start":488,"line_end":488,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634429,"byte_end":14634432,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634437,"byte_end":14634512,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634517,"byte_end":14634593,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634598,"byte_end":14634613,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634618,"byte_end":14634621,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634626,"byte_end":14634638,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634643,"byte_end":14634646,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634651,"byte_end":14634725,"line_start":496,"line_end":496,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634730,"byte_end":14634761,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634766,"byte_end":14634769,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634774,"byte_end":14634788,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634793,"byte_end":14634796,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634801,"byte_end":14634816,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634821,"byte_end":14634824,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634829,"byte_end":14634840,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634845,"byte_end":14634898,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634903,"byte_end":14634906,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634911,"byte_end":14634931,"line_start":506,"line_end":506,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634936,"byte_end":14634959,"line_start":507,"line_end":507,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14634964,"byte_end":14635012,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635017,"byte_end":14635085,"line_start":509,"line_end":509,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635090,"byte_end":14635093,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635098,"byte_end":14635155,"line_start":511,"line_end":511,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635160,"byte_end":14635163,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635168,"byte_end":14635245,"line_start":513,"line_end":513,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635250,"byte_end":14635253,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635258,"byte_end":14635319,"line_start":515,"line_end":515,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635324,"byte_end":14635331,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14635336,"byte_end":14635343,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12646},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637231,"byte_end":14637236,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636081,"byte_end":14636149,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636154,"byte_end":14636168,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636173,"byte_end":14636176,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636181,"byte_end":14636256,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636261,"byte_end":14636281,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636286,"byte_end":14636289,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636294,"byte_end":14636364,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636369,"byte_end":14636439,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636444,"byte_end":14636472,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636477,"byte_end":14636480,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636485,"byte_end":14636497,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636502,"byte_end":14636505,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636510,"byte_end":14636585,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636590,"byte_end":14636645,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636650,"byte_end":14636653,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636658,"byte_end":14636672,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636677,"byte_end":14636680,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636685,"byte_end":14636700,"line_start":557,"line_end":557,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636705,"byte_end":14636708,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636713,"byte_end":14636724,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636729,"byte_end":14636761,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636766,"byte_end":14636794,"line_start":561,"line_end":561,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636799,"byte_end":14636802,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636807,"byte_end":14636827,"line_start":563,"line_end":563,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636832,"byte_end":14636855,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636860,"byte_end":14636908,"line_start":565,"line_end":565,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636913,"byte_end":14636981,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636986,"byte_end":14636989,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14636994,"byte_end":14637051,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637056,"byte_end":14637059,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637064,"byte_end":14637121,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637126,"byte_end":14637129,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637134,"byte_end":14637195,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637200,"byte_end":14637207,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637212,"byte_end":14637219,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12647},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638102,"byte_end":14638107,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637345,"byte_end":14637386,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637391,"byte_end":14637394,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637399,"byte_end":14637473,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637478,"byte_end":14637481,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637486,"byte_end":14637552,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637557,"byte_end":14637560,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637565,"byte_end":14637612,"line_start":585,"line_end":585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637617,"byte_end":14637620,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637625,"byte_end":14637639,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637644,"byte_end":14637647,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637652,"byte_end":14637663,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637668,"byte_end":14637700,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637705,"byte_end":14637733,"line_start":591,"line_end":591,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637738,"byte_end":14637741,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637746,"byte_end":14637766,"line_start":593,"line_end":593,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637771,"byte_end":14637794,"line_start":594,"line_end":594,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637799,"byte_end":14637847,"line_start":595,"line_end":595,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637852,"byte_end":14637855,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637860,"byte_end":14637918,"line_start":597,"line_end":597,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637923,"byte_end":14637926,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637931,"byte_end":14637972,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637977,"byte_end":14637980,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14637985,"byte_end":14638013,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638018,"byte_end":14638021,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638026,"byte_end":14638066,"line_start":603,"line_end":603,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638071,"byte_end":14638078,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638083,"byte_end":14638090,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12648},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638579,"byte_end":14638587,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638262,"byte_end":14638337,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638342,"byte_end":14638345,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638350,"byte_end":14638364,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638369,"byte_end":14638372,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638377,"byte_end":14638388,"line_start":617,"line_end":617,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638393,"byte_end":14638425,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638430,"byte_end":14638433,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638438,"byte_end":14638507,"line_start":620,"line_end":620,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638512,"byte_end":14638555,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638560,"byte_end":14638567,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12649},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639155,"byte_end":14639158,"line_start":643,"line_end":643,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638646,"byte_end":14638704,"line_start":627,"line_end":627,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638709,"byte_end":14638712,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638717,"byte_end":14638731,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638736,"byte_end":14638739,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638744,"byte_end":14638755,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638760,"byte_end":14638792,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638797,"byte_end":14638825,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638830,"byte_end":14638833,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638838,"byte_end":14638858,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638863,"byte_end":14638886,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638891,"byte_end":14638968,"line_start":637,"line_end":637,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14638973,"byte_end":14639014,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639019,"byte_end":14639073,"line_start":639,"line_end":639,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639078,"byte_end":14639119,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639124,"byte_end":14639131,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639136,"byte_end":14639143,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12650},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640367,"byte_end":14640374,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639212,"byte_end":14639283,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639288,"byte_end":14639311,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639316,"byte_end":14639319,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639324,"byte_end":14639399,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639404,"byte_end":14639480,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639485,"byte_end":14639561,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639566,"byte_end":14639642,"line_start":653,"line_end":653,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639647,"byte_end":14639670,"line_start":654,"line_end":654,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639675,"byte_end":14639678,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639683,"byte_end":14639755,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639760,"byte_end":14639793,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639798,"byte_end":14639801,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639806,"byte_end":14639818,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639823,"byte_end":14639826,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639831,"byte_end":14639903,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639908,"byte_end":14639930,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639935,"byte_end":14639938,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639943,"byte_end":14639957,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639962,"byte_end":14639965,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639970,"byte_end":14639977,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14639982,"byte_end":14640014,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640019,"byte_end":14640047,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640052,"byte_end":14640055,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640060,"byte_end":14640080,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640085,"byte_end":14640108,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640113,"byte_end":14640161,"line_start":672,"line_end":672,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640166,"byte_end":14640169,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640174,"byte_end":14640235,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640240,"byte_end":14640272,"line_start":675,"line_end":675,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640277,"byte_end":14640280,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640285,"byte_end":14640331,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640336,"byte_end":14640343,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640348,"byte_end":14640355,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12651},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14641090,"byte_end":14641098,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640457,"byte_end":14640511,"line_start":684,"line_end":684,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640516,"byte_end":14640519,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640524,"byte_end":14640598,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640603,"byte_end":14640659,"line_start":687,"line_end":687,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640664,"byte_end":14640667,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640672,"byte_end":14640686,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640691,"byte_end":14640694,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640699,"byte_end":14640706,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640711,"byte_end":14640743,"line_start":692,"line_end":692,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640748,"byte_end":14640776,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640781,"byte_end":14640784,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640789,"byte_end":14640809,"line_start":695,"line_end":695,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640814,"byte_end":14640837,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640842,"byte_end":14640890,"line_start":697,"line_end":697,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640895,"byte_end":14640935,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640940,"byte_end":14640943,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14640948,"byte_end":14641008,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14641013,"byte_end":14641054,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14641059,"byte_end":14641066,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14641071,"byte_end":14641078,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12683},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645761,"byte_end":14645768,"line_start":877,"line_end":877,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645706,"byte_end":14645749,"line_start":876,"line_end":876,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":12684},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645877,"byte_end":14645884,"line_start":882,"line_end":882,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645814,"byte_end":14645865,"line_start":881,"line_end":881,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":12685},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14646002,"byte_end":14646012,"line_start":887,"line_end":887,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645942,"byte_end":14645990,"line_start":886,"line_end":886,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":12686},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14646123,"byte_end":14646131,"line_start":892,"line_end":892,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14646055,"byte_end":14646111,"line_start":891,"line_end":891,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":12714},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646709,"byte_end":14646720,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646335,"byte_end":14646373,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646374,"byte_end":14646377,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646378,"byte_end":14646453,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646454,"byte_end":14646531,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646532,"byte_end":14646567,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646568,"byte_end":14646571,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646572,"byte_end":14646590,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646591,"byte_end":14646594,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646595,"byte_end":14646671,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646672,"byte_end":14646701,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":12715},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647786,"byte_end":14647795,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646859,"byte_end":14646898,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646899,"byte_end":14646902,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646903,"byte_end":14646978,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14646979,"byte_end":14647014,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647015,"byte_end":14647018,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647019,"byte_end":14647094,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647095,"byte_end":14647172,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647173,"byte_end":14647208,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647209,"byte_end":14647212,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647213,"byte_end":14647276,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647277,"byte_end":14647280,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647281,"byte_end":14647299,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647300,"byte_end":14647303,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647304,"byte_end":14647380,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647381,"byte_end":14647410,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647411,"byte_end":14647414,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647415,"byte_end":14647429,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647430,"byte_end":14647433,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647434,"byte_end":14647481,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647482,"byte_end":14647485,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647486,"byte_end":14647493,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647494,"byte_end":14647537,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647538,"byte_end":14647541,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647542,"byte_end":14647560,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647561,"byte_end":14647582,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647583,"byte_end":14647635,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647636,"byte_end":14647676,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647677,"byte_end":14647682,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647683,"byte_end":14647690,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647691,"byte_end":14647694,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647695,"byte_end":14647736,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":13382},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648055,"byte_end":14648060,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":13383}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647873,"byte_end":14647928,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647929,"byte_end":14647958,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14647976,"byte_end":14648043,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":12718},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648500,"byte_end":14648508,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648430,"byte_end":14648488,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":12719},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648712,"byte_end":14648722,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648577,"byte_end":14648622,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648627,"byte_end":14648630,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648635,"byte_end":14648700,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":12720},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14649111,"byte_end":14649116,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648790,"byte_end":14648840,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648845,"byte_end":14648848,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648853,"byte_end":14648927,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648932,"byte_end":14648999,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14649004,"byte_end":14649007,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14649012,"byte_end":14649080,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14649085,"byte_end":14649099,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":13441},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683679,"byte_end":14683684,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14682566,"byte_end":14682617,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14682618,"byte_end":14682621,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14682622,"byte_end":14682683,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14682684,"byte_end":14682687,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14682688,"byte_end":14682762,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14682763,"byte_end":14682842,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14682843,"byte_end":14682918,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14682919,"byte_end":14682994,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14682995,"byte_end":14683023,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683024,"byte_end":14683027,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683028,"byte_end":14683105,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683106,"byte_end":14683184,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683185,"byte_end":14683261,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683262,"byte_end":14683342,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683343,"byte_end":14683420,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683421,"byte_end":14683502,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683503,"byte_end":14683585,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683586,"byte_end":14683589,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683590,"byte_end":14683650,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":13051},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683885,"byte_end":14683893,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683822,"byte_end":14683873,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":13052},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14684025,"byte_end":14684036,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683942,"byte_end":14684013,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":13053},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14684224,"byte_end":14684235,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14684158,"byte_end":14684212,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":13054},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14684372,"byte_end":14684386,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14684286,"byte_end":14684360,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":13055},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14684577,"byte_end":14684584,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14684510,"byte_end":14684565,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":13056},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14684720,"byte_end":14684730,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14684632,"byte_end":14684708,"line_start":67,"line_end":67,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":13461},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14685944,"byte_end":14685951,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":13462}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14685748,"byte_end":14685808,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14685809,"byte_end":14685871,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":13077},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686198,"byte_end":14686201,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686005,"byte_end":14686051,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686056,"byte_end":14686059,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686064,"byte_end":14686078,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686083,"byte_end":14686086,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686091,"byte_end":14686098,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686103,"byte_end":14686132,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686137,"byte_end":14686140,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686145,"byte_end":14686174,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686179,"byte_end":14686186,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":13078},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686327,"byte_end":14686335,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686251,"byte_end":14686315,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":13079},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686471,"byte_end":14686479,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686409,"byte_end":14686459,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":13080},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686723,"byte_end":14686737,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686538,"byte_end":14686610,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686615,"byte_end":14686618,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686623,"byte_end":14686635,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686640,"byte_end":14686643,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686648,"byte_end":14686711,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":13081},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687428,"byte_end":14687450,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686833,"byte_end":14686908,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686913,"byte_end":14686961,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686966,"byte_end":14686969,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686974,"byte_end":14686988,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14686993,"byte_end":14686996,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687001,"byte_end":14687008,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687013,"byte_end":14687065,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687070,"byte_end":14687073,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687078,"byte_end":14687096,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687101,"byte_end":14687122,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687127,"byte_end":14687160,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687165,"byte_end":14687210,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687215,"byte_end":14687252,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687257,"byte_end":14687319,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687324,"byte_end":14687394,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687399,"byte_end":14687404,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687409,"byte_end":14687416,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":13082},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688173,"byte_end":14688198,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687562,"byte_end":14687637,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687642,"byte_end":14687701,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687706,"byte_end":14687709,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687714,"byte_end":14687728,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687733,"byte_end":14687736,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687741,"byte_end":14687748,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687753,"byte_end":14687805,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687810,"byte_end":14687813,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687818,"byte_end":14687836,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687841,"byte_end":14687862,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687867,"byte_end":14687900,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687905,"byte_end":14687950,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687955,"byte_end":14687992,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14687997,"byte_end":14688062,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688067,"byte_end":14688139,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688144,"byte_end":14688149,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688154,"byte_end":14688161,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":13083},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688969,"byte_end":14688976,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688305,"byte_end":14688375,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688380,"byte_end":14688383,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688388,"byte_end":14688400,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688405,"byte_end":14688408,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688413,"byte_end":14688481,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688486,"byte_end":14688552,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688557,"byte_end":14688584,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688589,"byte_end":14688592,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688597,"byte_end":14688611,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688616,"byte_end":14688619,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688624,"byte_end":14688631,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688636,"byte_end":14688688,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688693,"byte_end":14688696,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688701,"byte_end":14688719,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688724,"byte_end":14688745,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688750,"byte_end":14688787,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688792,"byte_end":14688840,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688845,"byte_end":14688881,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688886,"byte_end":14688935,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688940,"byte_end":14688945,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14688950,"byte_end":14688957,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":13084},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689257,"byte_end":14689268,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689040,"byte_end":14689115,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689120,"byte_end":14689191,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689196,"byte_end":14689245,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":13085},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689607,"byte_end":14689618,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689390,"byte_end":14689465,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689470,"byte_end":14689541,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689546,"byte_end":14689595,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":13143},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693082,"byte_end":14693090,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691340,"byte_end":14691417,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691418,"byte_end":14691449,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691450,"byte_end":14691453,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691454,"byte_end":14691534,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691535,"byte_end":14691574,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691575,"byte_end":14691578,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691579,"byte_end":14691652,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691653,"byte_end":14691656,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691657,"byte_end":14691669,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691670,"byte_end":14691673,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691674,"byte_end":14691719,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691720,"byte_end":14691723,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691724,"byte_end":14691738,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691739,"byte_end":14691742,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691743,"byte_end":14691750,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691751,"byte_end":14691789,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691790,"byte_end":14691793,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691794,"byte_end":14691812,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691813,"byte_end":14691834,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691835,"byte_end":14691904,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691905,"byte_end":14691908,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691909,"byte_end":14691939,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691940,"byte_end":14691970,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14691971,"byte_end":14692001,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692002,"byte_end":14692005,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692006,"byte_end":14692049,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692050,"byte_end":14692055,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692056,"byte_end":14692063,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692064,"byte_end":14692067,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692068,"byte_end":14692142,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692143,"byte_end":14692146,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692147,"byte_end":14692224,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692225,"byte_end":14692300,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692301,"byte_end":14692377,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692378,"byte_end":14692439,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692440,"byte_end":14692443,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692444,"byte_end":14692522,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692523,"byte_end":14692593,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692594,"byte_end":14692606,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692607,"byte_end":14692610,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692611,"byte_end":14692618,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692619,"byte_end":14692639,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692640,"byte_end":14692643,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692644,"byte_end":14692685,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692686,"byte_end":14692712,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692713,"byte_end":14692772,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692773,"byte_end":14692778,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692779,"byte_end":14692782,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692783,"byte_end":14692801,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692802,"byte_end":14692823,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692824,"byte_end":14692896,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692897,"byte_end":14692921,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692922,"byte_end":14692956,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14692957,"byte_end":14693002,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693003,"byte_end":14693012,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693013,"byte_end":14693018,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693019,"byte_end":14693026,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693027,"byte_end":14693030,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693031,"byte_end":14693074,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":13144},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693979,"byte_end":14693990,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693240,"byte_end":14693313,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693314,"byte_end":14693351,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693352,"byte_end":14693355,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693356,"byte_end":14693436,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693437,"byte_end":14693476,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693477,"byte_end":14693480,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693481,"byte_end":14693493,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693494,"byte_end":14693497,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693498,"byte_end":14693543,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693544,"byte_end":14693547,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693548,"byte_end":14693562,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693563,"byte_end":14693566,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693567,"byte_end":14693574,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693575,"byte_end":14693629,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693630,"byte_end":14693633,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693634,"byte_end":14693652,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693653,"byte_end":14693674,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693675,"byte_end":14693738,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693739,"byte_end":14693812,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693813,"byte_end":14693816,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693817,"byte_end":14693847,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693848,"byte_end":14693878,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693879,"byte_end":14693909,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693910,"byte_end":14693913,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693914,"byte_end":14693957,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693958,"byte_end":14693963,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14693964,"byte_end":14693971,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13480},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694439,"byte_end":14694447,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":13481},{"krate":0,"index":13482}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694188,"byte_end":14694267,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694268,"byte_end":14694271,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type only implements the [`Stream`] trait if the \"stream\" feature is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694272,"byte_end":14694349,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ enabled.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694350,"byte_end":14694362,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694363,"byte_end":14694366,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait@crate::stream::Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694367,"byte_end":14694410,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":13146},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694692,"byte_end":14694701,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13147},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695793,"byte_end":14695797,"line_start":163,"line_end":163,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695188,"byte_end":14695257,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695262,"byte_end":14695265,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695270,"byte_end":14695284,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695289,"byte_end":14695292,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695297,"byte_end":14695304,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695309,"byte_end":14695329,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695334,"byte_end":14695337,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695342,"byte_end":14695370,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695375,"byte_end":14695378,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695383,"byte_end":14695401,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695406,"byte_end":14695427,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695432,"byte_end":14695501,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695506,"byte_end":14695509,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695514,"byte_end":14695544,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695549,"byte_end":14695579,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695584,"byte_end":14695614,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695619,"byte_end":14695622,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695627,"byte_end":14695670,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695675,"byte_end":14695680,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695685,"byte_end":14695692,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695697,"byte_end":14695737,"line_start":162,"line_end":162,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":13197},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697479,"byte_end":14697486,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696464,"byte_end":14696541,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696542,"byte_end":14696545,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696546,"byte_end":14696625,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696626,"byte_end":14696698,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696699,"byte_end":14696712,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696713,"byte_end":14696716,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696717,"byte_end":14696734,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696735,"byte_end":14696738,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696739,"byte_end":14696817,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696818,"byte_end":14696848,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696849,"byte_end":14696852,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696853,"byte_end":14696933,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696934,"byte_end":14696961,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696962,"byte_end":14696965,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696966,"byte_end":14696980,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696981,"byte_end":14696984,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14696985,"byte_end":14697045,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697046,"byte_end":14697049,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697050,"byte_end":14697061,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697062,"byte_end":14697091,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697092,"byte_end":14697121,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697122,"byte_end":14697125,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697126,"byte_end":14697154,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697155,"byte_end":14697158,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697159,"byte_end":14697181,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697182,"byte_end":14697220,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697221,"byte_end":14697248,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697249,"byte_end":14697252,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697253,"byte_end":14697326,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697327,"byte_end":14697393,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697394,"byte_end":14697449,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697450,"byte_end":14697455,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697456,"byte_end":14697463,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697464,"byte_end":14697471,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":13199},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698708,"byte_end":14698718,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697677,"byte_end":14697749,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697750,"byte_end":14697753,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697754,"byte_end":14697831,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697832,"byte_end":14697887,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697888,"byte_end":14697891,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697892,"byte_end":14697909,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697910,"byte_end":14697913,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697914,"byte_end":14697992,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14697993,"byte_end":14698023,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698024,"byte_end":14698027,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698028,"byte_end":14698108,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698109,"byte_end":14698136,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698137,"byte_end":14698140,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698141,"byte_end":14698155,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698156,"byte_end":14698159,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698160,"byte_end":14698220,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698221,"byte_end":14698224,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698225,"byte_end":14698236,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698237,"byte_end":14698280,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698281,"byte_end":14698310,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698311,"byte_end":14698314,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698315,"byte_end":14698343,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698344,"byte_end":14698347,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698348,"byte_end":14698370,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698371,"byte_end":14698409,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698410,"byte_end":14698437,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698438,"byte_end":14698441,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698442,"byte_end":14698520,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698521,"byte_end":14698535,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698536,"byte_end":14698622,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698623,"byte_end":14698678,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698679,"byte_end":14698684,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698685,"byte_end":14698692,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14698693,"byte_end":14698700,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14051},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699093,"byte_end":14699100,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":14053},{"krate":0,"index":14054}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13485},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699257,"byte_end":14699264,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699185,"byte_end":14699217,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":13206},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699615,"byte_end":14699622,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699542,"byte_end":14699603,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":13207},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699750,"byte_end":14699757,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699669,"byte_end":14699738,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":13208},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699886,"byte_end":14699896,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699816,"byte_end":14699874,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":13527},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14718029,"byte_end":14718037,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717455,"byte_end":14717514,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717515,"byte_end":14717584,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717585,"byte_end":14717588,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717589,"byte_end":14717602,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717603,"byte_end":14717606,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717607,"byte_end":14717637,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717638,"byte_end":14717656,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717657,"byte_end":14717685,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717686,"byte_end":14717719,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717720,"byte_end":14717750,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717751,"byte_end":14717754,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717755,"byte_end":14717777,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717778,"byte_end":14717869,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717870,"byte_end":14717873,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717874,"byte_end":14717884,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717885,"byte_end":14717947,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14717948,"byte_end":14717999,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14718000,"byte_end":14718005,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14718006,"byte_end":14718013,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14718014,"byte_end":14718021,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14003},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14718532,"byte_end":14718540,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":14005},{"krate":0,"index":14006},{"krate":0,"index":14007},{"krate":0,"index":14008}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.12/src/lib.rs","byte_start":13042952,"byte_end":13042961,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":13531},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719007,"byte_end":14719014,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14718900,"byte_end":14718973,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14718978,"byte_end":14718995,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13532},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719323,"byte_end":14719330,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719062,"byte_end":14719140,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719145,"byte_end":14719165,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719170,"byte_end":14719173,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719178,"byte_end":14719258,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719263,"byte_end":14719311,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":13533},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719625,"byte_end":14719635,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719390,"byte_end":14719452,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719457,"byte_end":14719460,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719465,"byte_end":14719542,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719547,"byte_end":14719613,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":13273},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":14716588,"byte_end":14716593,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":13272},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":14716538,"byte_end":14716578,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":13274},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":14716651,"byte_end":14716659,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":13272},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":14716624,"byte_end":14716641,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":13275},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":14716748,"byte_end":14716753,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":13272},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":14716666,"byte_end":14716738,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1167},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182194,"byte_end":182200,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":1166},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182103,"byte_end":182132,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182137,"byte_end":182140,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182145,"byte_end":182184,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1168},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182230,"byte_end":182236,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":1166},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182207,"byte_end":182220,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1204},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/rand.rs","byte_start":198821,"byte_end":198833,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\", feature = \"stream\"))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/rand.rs","byte_start":198686,"byte_end":198737,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274050,"byte_end":13274060,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279831,"byte_end":13279835,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1471},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1481},{"krate":0,"index":1485},{"krate":0,"index":1489},{"krate":0,"index":1496},{"krate":0,"index":1500},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13293060,"byte_end":13293064,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13295548,"byte_end":13295552,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13297977,"byte_end":13297981,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13300952,"byte_end":13300956,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13301054,"byte_end":13301058,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13301287,"byte_end":13301291,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306216,"byte_end":13306227,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13316696,"byte_end":13316707,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13316825,"byte_end":13316836,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13320110,"byte_end":13320121,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320950,"byte_end":13320960,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13324032,"byte_end":13324039,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325274,"byte_end":13325281,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326108,"byte_end":13326116,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329898,"byte_end":13329906,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13335881,"byte_end":13335889,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13336162,"byte_end":13336170,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13337775,"byte_end":13337783,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13340508,"byte_end":13340511,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13342326,"byte_end":13342329,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2201},{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":13354651,"byte_end":13354662,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":13355421,"byte_end":13355432,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":13355639,"byte_end":13355650,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":13358272,"byte_end":13358283,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13343971,"byte_end":13343977,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13346838,"byte_end":13346844,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13347243,"byte_end":13347249,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13347385,"byte_end":13347391,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13348552,"byte_end":13348558,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13348636,"byte_end":13348642,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13348777,"byte_end":13348782,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13350326,"byte_end":13350335,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13364841,"byte_end":13364852,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13372643,"byte_end":13372654,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13373147,"byte_end":13373158,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13374239,"byte_end":13374250,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13374423,"byte_end":13374434,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376582,"byte_end":13376594,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13387464,"byte_end":13387476,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13387501,"byte_end":13387513,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13387532,"byte_end":13387544,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stderr.rs","byte_start":13390103,"byte_end":13390109,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stderr.rs","byte_start":13390417,"byte_end":13390423,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdin.rs","byte_start":13392831,"byte_end":13392836,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdin.rs","byte_start":13393140,"byte_end":13393145,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2597},{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdout.rs","byte_start":13395928,"byte_end":13395934,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdout.rs","byte_start":13396242,"byte_end":13396248,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398368,"byte_end":13398376,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13399293,"byte_end":13399302,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13399552,"byte_end":13399560,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2717},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13400115,"byte_end":13400124,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401073,"byte_end":13401078,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401471,"byte_end":13401476,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401729,"byte_end":13401734,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401857,"byte_end":13401865,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401902,"byte_end":13401911,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401948,"byte_end":13401956,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401993,"byte_end":13402002,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13402045,"byte_end":13402053,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2746}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13402221,"byte_end":13402230,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":13402920,"byte_end":13402924,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":13415019,"byte_end":13415020,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13454452,"byte_end":13454453,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13456211,"byte_end":13456212,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13491559,"byte_end":13491560,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13492976,"byte_end":13492985,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13495164,"byte_end":13495173,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13496149,"byte_end":13496158,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13496989,"byte_end":13496998,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3220},{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13497714,"byte_end":13497723,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499230,"byte_end":13499239,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13501076,"byte_end":13501085,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3275}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13501227,"byte_end":13501236,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13501948,"byte_end":13501957,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13502487,"byte_end":13502496,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13502975,"byte_end":13502984,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3290},{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13504938,"byte_end":13504947,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13507225,"byte_end":13507234,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13508124,"byte_end":13508133,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3352},{"krate":0,"index":3353}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13508615,"byte_end":13508624,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3356},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13508911,"byte_end":13508920,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510089,"byte_end":13510094,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13511234,"byte_end":13511239,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13511518,"byte_end":13511523,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3408},{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13512346,"byte_end":13512351,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3413},{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":13515394,"byte_end":13515398,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3442},{"krate":0,"index":3443}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":13518508,"byte_end":13518513,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3476},{"krate":0,"index":3477}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":13518842,"byte_end":13518847,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3480}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":13519080,"byte_end":13519085,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/flush.rs","byte_start":13519906,"byte_end":13519911,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3514},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521091,"byte_end":13521096,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13522348,"byte_end":13522353,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3558}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13523100,"byte_end":13523105,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3561},{"krate":0,"index":3562}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13526265,"byte_end":13526277,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13526826,"byte_end":13526838,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":3606},{"krate":0,"index":3607}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13527563,"byte_end":13527575,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13527735,"byte_end":13527739,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13528145,"byte_end":13528149,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3614}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13528975,"byte_end":13528979,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":13530907,"byte_end":13530911,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3654},{"krate":0,"index":3655}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":13531972,"byte_end":13531979,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3686},{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":13533344,"byte_end":13533353,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":13541631,"byte_end":13541639,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3791},{"krate":0,"index":3792}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":13547559,"byte_end":13547568,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3834},{"krate":0,"index":3835}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":13550307,"byte_end":13550319,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3877},{"krate":0,"index":3878}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":13552759,"byte_end":13552768,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3909},{"krate":0,"index":3910}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":13554602,"byte_end":13554608,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3929},{"krate":0,"index":3930}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/shutdown.rs","byte_start":13555730,"byte_end":13555738,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3962},{"krate":0,"index":3963}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":13557571,"byte_end":13557575,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":13558085,"byte_end":13558089,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3989}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559054,"byte_end":13559059,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559798,"byte_end":13559803,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4036}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13560582,"byte_end":13560587,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4039},{"krate":0,"index":4040}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13574126,"byte_end":13574138,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4646},{"krate":0,"index":4647}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13574643,"byte_end":13574655,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13576194,"byte_end":13576206,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4658},{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579735,"byte_end":13579747,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4699},{"krate":0,"index":4700}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561755,"byte_end":13561759,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13563387,"byte_end":13563391,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4087},{"krate":0,"index":4088}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13564048,"byte_end":13564052,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4091},{"krate":0,"index":4092}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":13565609,"byte_end":13565614,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4121},{"krate":0,"index":4122}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":13566407,"byte_end":13566415,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4151},{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":13567923,"byte_end":13567931,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4183},{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":79320,"byte_end":79326,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":79370,"byte_end":79376,"line_start":221,"line_end":221,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4931},{"krate":0,"index":4932},{"krate":0,"index":4933}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80742,"byte_end":80752,"line_start":272,"line_end":272,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4954},{"krate":0,"index":4955}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":81400,"byte_end":81409,"line_start":290,"line_end":290,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4957},{"krate":0,"index":4958},{"krate":0,"index":4959}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584431,"byte_end":13584442,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5038},{"krate":0,"index":5043},{"krate":0,"index":5044},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5055}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13595137,"byte_end":13595148,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5057},{"krate":0,"index":5058}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13595463,"byte_end":13595474,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5060},{"krate":0,"index":5061}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13595914,"byte_end":13595925,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5063},{"krate":0,"index":5064}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13596251,"byte_end":13596262,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5066}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13596478,"byte_end":13596489,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5073}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597321,"byte_end":13597329,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5099},{"krate":0,"index":5100}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597967,"byte_end":13597975,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5102},{"krate":0,"index":5103}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600138,"byte_end":13600146,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5145},{"krate":0,"index":5146}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602601,"byte_end":13602609,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5151},{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602929,"byte_end":13602938,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5157},{"krate":0,"index":5158}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13603751,"byte_end":13603759,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13603853,"byte_end":13603862,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5162}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13606950,"byte_end":13606962,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5219}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607165,"byte_end":13607177,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607187,"byte_end":13607200,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610034,"byte_end":13610047,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5229},{"krate":0,"index":5230}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610352,"byte_end":13610366,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5232},{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13611049,"byte_end":13611063,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5235}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13611223,"byte_end":13611237,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5237},{"krate":0,"index":5238},{"krate":0,"index":5240},{"krate":0,"index":5241}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13612176,"byte_end":13612189,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5243}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13612285,"byte_end":13612299,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5245}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614434,"byte_end":13614443,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5342},{"krate":0,"index":5347},{"krate":0,"index":5351},{"krate":0,"index":5352},{"krate":0,"index":5353},{"krate":0,"index":5357},{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5365},{"krate":0,"index":5366},{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5383}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13639500,"byte_end":13639509,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5393},{"krate":0,"index":5394}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13639945,"byte_end":13639954,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5396},{"krate":0,"index":5397}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13640307,"byte_end":13640316,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5399},{"krate":0,"index":5400}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13640630,"byte_end":13640639,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5405},{"krate":0,"index":5406}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13641383,"byte_end":13641392,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5408}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13641606,"byte_end":13641615,"line_start":920,"line_end":920,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5415}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13642621,"byte_end":13642630,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5515},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5530},{"krate":0,"index":5534},{"krate":0,"index":5535},{"krate":0,"index":5536},{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5546},{"krate":0,"index":5547},{"krate":0,"index":5548},{"krate":0,"index":5552},{"krate":0,"index":5553},{"krate":0,"index":5554},{"krate":0,"index":5555},{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5558},{"krate":0,"index":5559},{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5562},{"krate":0,"index":5563},{"krate":0,"index":5564},{"krate":0,"index":5565},{"krate":0,"index":5566}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13657291,"byte_end":13657300,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5568},{"krate":0,"index":5569}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13657736,"byte_end":13657745,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5571},{"krate":0,"index":5572}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13658065,"byte_end":13658074,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5574}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13658293,"byte_end":13658302,"line_start":435,"line_end":435,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5581}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13660388,"byte_end":13660400,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5609}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13660603,"byte_end":13660615,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661142,"byte_end":13661150,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5613},{"krate":0,"index":5614},{"krate":0,"index":5618}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662782,"byte_end":13662790,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":5628}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13664110,"byte_end":13664118,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5633}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13664209,"byte_end":13664217,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5635}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665475,"byte_end":13665487,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5733},{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5741},{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5773}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675908,"byte_end":13675920,"line_start":314,"line_end":314,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5775},{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13676362,"byte_end":13676374,"line_start":328,"line_end":328,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5778},{"krate":0,"index":5779}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13676703,"byte_end":13676715,"line_start":340,"line_end":340,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5781}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13676840,"byte_end":13676852,"line_start":346,"line_end":346,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5783}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677789,"byte_end":13677797,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5802},{"krate":0,"index":5806}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678189,"byte_end":13678197,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5811},{"krate":0,"index":5816}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678700,"byte_end":13678708,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5821}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678808,"byte_end":13678816,"line_start":64,"line_end":64,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5823}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680293,"byte_end":13680305,"line_start":53,"line_end":53,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5855}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680508,"byte_end":13680520,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681084,"byte_end":13681097,"line_start":77,"line_end":77,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5859},{"krate":0,"index":5860},{"krate":0,"index":5864}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681882,"byte_end":13681895,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5875},{"krate":0,"index":5879}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13683065,"byte_end":13683078,"line_start":130,"line_end":130,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5881}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13683247,"byte_end":13683260,"line_start":138,"line_end":138,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5883}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13683361,"byte_end":13683374,"line_start":144,"line_end":144,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5885}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13683719,"byte_end":13683727,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5925},{"krate":0,"index":5926}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13684459,"byte_end":13684467,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5928},{"krate":0,"index":5929}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686594,"byte_end":13686606,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5984},{"krate":0,"index":5986},{"krate":0,"index":5987},{"krate":0,"index":5988},{"krate":0,"index":5989},{"krate":0,"index":5993},{"krate":0,"index":5994},{"krate":0,"index":5995}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691310,"byte_end":13691322,"line_start":184,"line_end":184,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5997},{"krate":0,"index":5998}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691638,"byte_end":13691650,"line_start":196,"line_end":196,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6000},{"krate":0,"index":6001}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13692092,"byte_end":13692104,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6003},{"krate":0,"index":6004}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13692424,"byte_end":13692436,"line_start":222,"line_end":222,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6006}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13692561,"byte_end":13692573,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6008}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694550,"byte_end":13694558,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6044},{"krate":0,"index":6045}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694878,"byte_end":13694887,"line_start":67,"line_end":67,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13695371,"byte_end":13695379,"line_start":85,"line_end":85,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6051}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13695475,"byte_end":13695484,"line_start":91,"line_end":91,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6053}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698589,"byte_end":13698601,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6104}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698804,"byte_end":13698816,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698826,"byte_end":13698839,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699255,"byte_end":13699268,"line_start":111,"line_end":111,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6109},{"krate":0,"index":6110}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699573,"byte_end":13699587,"line_start":125,"line_end":125,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6112},{"krate":0,"index":6113}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13700285,"byte_end":13700299,"line_start":144,"line_end":144,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13700459,"byte_end":13700473,"line_start":152,"line_end":152,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13701207,"byte_end":13701220,"line_start":177,"line_end":177,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6121}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13701318,"byte_end":13701332,"line_start":183,"line_end":183,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6123}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702353,"byte_end":13702363,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6225},{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6236},{"krate":0,"index":6237},{"krate":0,"index":6238},{"krate":0,"index":6240}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706710,"byte_end":13706720,"line_start":143,"line_end":143,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6242},{"krate":0,"index":6243}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13707158,"byte_end":13707168,"line_start":157,"line_end":157,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6245},{"krate":0,"index":6246}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13707481,"byte_end":13707491,"line_start":169,"line_end":169,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6248},{"krate":0,"index":6249}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13707805,"byte_end":13707815,"line_start":183,"line_end":183,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6253}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13708302,"byte_end":13708312,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6255},{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13709829,"byte_end":13709839,"line_start":247,"line_end":247,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6258}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13709964,"byte_end":13709974,"line_start":253,"line_end":253,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6260}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":13714331,"byte_end":13714337,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6442},{"krate":0,"index":6443},{"krate":0,"index":6444},{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6447}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":13715294,"byte_end":13715300,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6451}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":13715514,"byte_end":13715520,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6455}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6499},{"krate":0,"index":6500},{"krate":0,"index":6502}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6513},{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6518}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6520},{"krate":0,"index":6521}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/orphan.rs","byte_start":13757431,"byte_end":13757446,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6581}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/orphan.rs","byte_start":13757690,"byte_end":13757705,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6584},{"krate":0,"index":6585}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13762286,"byte_end":13762292,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6634}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13762436,"byte_end":13762442,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6639},{"krate":0,"index":6640}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13762609,"byte_end":13762615,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6645},{"krate":0,"index":6646},{"krate":0,"index":6647}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13763082,"byte_end":13763088,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6652},{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13765383,"byte_end":13765389,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6658}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13765565,"byte_end":13765571,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6663}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13752047,"byte_end":13752052,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6738},{"krate":0,"index":6739}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13752230,"byte_end":13752235,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6741}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13752480,"byte_end":13752497,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6745}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13752646,"byte_end":13752663,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6747},{"krate":0,"index":6748}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13753010,"byte_end":13753015,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6752}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13753684,"byte_end":13753689,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6755}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13753776,"byte_end":13753781,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6757}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13753878,"byte_end":13753883,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6759},{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13754146,"byte_end":13754148,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6763}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13754303,"byte_end":13754305,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6766},{"krate":0,"index":6767}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13754535,"byte_end":13754537,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6770}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13754660,"byte_end":13754662,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6775}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721058,"byte_end":13721065,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6843},{"krate":0,"index":6845},{"krate":0,"index":6847},{"krate":0,"index":6850},{"krate":0,"index":6853},{"krate":0,"index":6857},{"krate":0,"index":6859},{"krate":0,"index":6860},{"krate":0,"index":6862},{"krate":0,"index":6864},{"krate":0,"index":6866},{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6878},{"krate":0,"index":6881}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13737315,"byte_end":13737322,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6885}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13737652,"byte_end":13737666,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6888}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13737872,"byte_end":13737886,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6891}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738023,"byte_end":13738037,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6896},{"krate":0,"index":6897}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739886,"byte_end":13739891,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6899},{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6903},{"krate":0,"index":6904}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743424,"byte_end":13743429,"line_start":858,"line_end":858,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6915},{"krate":0,"index":6916}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744394,"byte_end":13744404,"line_start":893,"line_end":893,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744929,"byte_end":13744940,"line_start":911,"line_end":911,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6922},{"krate":0,"index":6923}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13745404,"byte_end":13745415,"line_start":926,"line_end":926,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6925},{"krate":0,"index":6926}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13746006,"byte_end":13746016,"line_start":947,"line_end":947,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6946}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13746141,"byte_end":13746152,"line_start":953,"line_end":953,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6948}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13746277,"byte_end":13746288,"line_start":959,"line_end":959,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6950}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13990979,"byte_end":13990993,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7106},{"krate":0,"index":7107},{"krate":0,"index":7108},{"krate":0,"index":7110}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13994532,"byte_end":13994537,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7128}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13995224,"byte_end":13995238,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7132}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13996125,"byte_end":13996139,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7136}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13996305,"byte_end":13996312,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7138},{"krate":0,"index":7140}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13996770,"byte_end":13996777,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7142}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13996945,"byte_end":13996948,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7144},{"krate":0,"index":7146},{"krate":0,"index":7151}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13998046,"byte_end":13998052,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7154},{"krate":0,"index":7155}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14005735,"byte_end":14005741,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14005766,"byte_end":14005772,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14006131,"byte_end":14006135,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7243}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14006913,"byte_end":14006917,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7247},{"krate":0,"index":7249},{"krate":0,"index":7251},{"krate":0,"index":7253},{"krate":0,"index":7255},{"krate":0,"index":7257},{"krate":0,"index":7262},{"krate":0,"index":7264},{"krate":0,"index":7266}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14012668,"byte_end":14012674,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7776}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14013299,"byte_end":14013308,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7297},{"krate":0,"index":7298},{"krate":0,"index":7299},{"krate":0,"index":7300},{"krate":0,"index":7301},{"krate":0,"index":7302},{"krate":0,"index":7303},{"krate":0,"index":7304}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016387,"byte_end":14016396,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7306}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016639,"byte_end":14016648,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7308}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016925,"byte_end":14016934,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016968,"byte_end":14016973,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7311}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":14017651,"byte_end":14017658,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7371},{"krate":0,"index":7372},{"krate":0,"index":7373},{"krate":0,"index":7374}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":14018135,"byte_end":14018142,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7378},{"krate":0,"index":7389},{"krate":0,"index":7393},{"krate":0,"index":7396},{"krate":0,"index":7399},{"krate":0,"index":7400},{"krate":0,"index":7401},{"krate":0,"index":7402},{"krate":0,"index":7403},{"krate":0,"index":7404},{"krate":0,"index":7406},{"krate":0,"index":7407},{"krate":0,"index":7408},{"krate":0,"index":7410}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":14020313,"byte_end":14020318,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7388}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032622,"byte_end":14032632,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032669,"byte_end":14032679,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032695,"byte_end":14032705,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7443}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032881,"byte_end":14032891,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032918,"byte_end":14032928,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7448},{"krate":0,"index":7449}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14034154,"byte_end":14034164,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7452}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14034430,"byte_end":14034440,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7455}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":14035687,"byte_end":14035694,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7501},{"krate":0,"index":7504},{"krate":0,"index":7505},{"krate":0,"index":7506},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":7509},{"krate":0,"index":7510}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":14037225,"byte_end":14037232,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7512}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":14037322,"byte_end":14037329,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":14040011,"byte_end":14040016,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7568},{"krate":0,"index":7569},{"krate":0,"index":7570},{"krate":0,"index":7572},{"krate":0,"index":7574},{"krate":0,"index":7576},{"krate":0,"index":7578},{"krate":0,"index":7579},{"krate":0,"index":7581},{"krate":0,"index":7587},{"krate":0,"index":7589},{"krate":0,"index":7591},{"krate":0,"index":7593},{"krate":0,"index":7600},{"krate":0,"index":7601}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":14048872,"byte_end":14048880,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7604},{"krate":0,"index":7605},{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7609},{"krate":0,"index":7610},{"krate":0,"index":7611},{"krate":0,"index":7612},{"krate":0,"index":7613},{"krate":0,"index":7614},{"krate":0,"index":7615},{"krate":0,"index":7616},{"krate":0,"index":7617},{"krate":0,"index":7618},{"krate":0,"index":7619},{"krate":0,"index":7620},{"krate":0,"index":7621},{"krate":0,"index":7622}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":14050757,"byte_end":14050762,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7624}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":14050921,"byte_end":14050929,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7626}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/waker.rs","byte_start":14052747,"byte_end":14052755,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7676},{"krate":0,"index":7677}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/stack.rs","byte_start":14054503,"byte_end":14054516,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7829},{"krate":0,"index":7830},{"krate":0,"index":7832}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/stack.rs","byte_start":14055674,"byte_end":14055678,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7841},{"krate":0,"index":7842}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/stack.rs","byte_start":14056078,"byte_end":14056082,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7846}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999065,"byte_end":13999069,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999100,"byte_end":13999104,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999241,"byte_end":13999249,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999290,"byte_end":13999298,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14001222,"byte_end":14001226,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7740},{"krate":0,"index":7741}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14001523,"byte_end":14001531,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7858},{"krate":0,"index":7859}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14001782,"byte_end":14001786,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7862}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14001979,"byte_end":14001987,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7865}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002118,"byte_end":14002122,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7744}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002291,"byte_end":14002299,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7747},{"krate":0,"index":7748}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002585,"byte_end":14002589,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7751}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002829,"byte_end":14002833,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7754}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002985,"byte_end":14002993,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7757}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14003209,"byte_end":14003213,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7762},{"krate":0,"index":7763},{"krate":0,"index":7764}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14058490,"byte_end":14058502,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7946},{"krate":0,"index":7947},{"krate":0,"index":7948}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14060388,"byte_end":14060400,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7950}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14060486,"byte_end":14060498,"line_start":152,"line_end":152,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7952}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14060659,"byte_end":14060666,"line_start":160,"line_end":160,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7954},{"krate":0,"index":7955}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14063109,"byte_end":14063114,"line_start":238,"line_end":238,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7959}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14065863,"byte_end":14065870,"line_start":325,"line_end":325,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7961}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/schedule.rs","byte_start":14066373,"byte_end":14066385,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7986},{"krate":0,"index":7987},{"krate":0,"index":7988}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/shutdown.rs","byte_start":14067258,"byte_end":14067266,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8001}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/task.rs","byte_start":14069014,"byte_end":14069026,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8024}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/task.rs","byte_start":14069252,"byte_end":14069264,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/task.rs","byte_start":14069294,"byte_end":14069306,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8030},{"krate":0,"index":8031}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8070}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8072}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8074},{"krate":0,"index":8075}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":141852,"byte_end":141859,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8084},{"krate":0,"index":8085}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":146358,"byte_end":146363,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":147583,"byte_end":147604,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8124}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8129}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":149349,"byte_end":149354,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8152}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8194},{"krate":0,"index":8196}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":160647,"byte_end":160653,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8200}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14071277,"byte_end":14071283,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8256}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14071752,"byte_end":14071758,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8258}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14072074,"byte_end":14072080,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8260},{"krate":0,"index":8261},{"krate":0,"index":8262},{"krate":0,"index":8263},{"krate":0,"index":8264},{"krate":0,"index":8266}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14072799,"byte_end":14072807,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8268}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14072876,"byte_end":14072881,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8270},{"krate":0,"index":8271},{"krate":0,"index":8272},{"krate":0,"index":8273},{"krate":0,"index":8274},{"krate":0,"index":8275},{"krate":0,"index":8276}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8316}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14080104,"byte_end":14080109,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14080140,"byte_end":14080145,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14080176,"byte_end":14080182,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14080213,"byte_end":14080219,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14081078,"byte_end":14081083,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8400},{"krate":0,"index":8401},{"krate":0,"index":8403},{"krate":0,"index":8409}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14087617,"byte_end":14087622,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8413},{"krate":0,"index":8414},{"krate":0,"index":8416}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14092790,"byte_end":14092795,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8421}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14092891,"byte_end":14092896,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8424}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14093055,"byte_end":14093060,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8427}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14093248,"byte_end":14093254,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8430},{"krate":0,"index":8431},{"krate":0,"index":8432},{"krate":0,"index":8433},{"krate":0,"index":8434},{"krate":0,"index":8435},{"krate":0,"index":8436},{"krate":0,"index":8437}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14096759,"byte_end":14096765,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8440}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/atomic_cell.rs","byte_start":14100991,"byte_end":14101001,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/atomic_cell.rs","byte_start":14101038,"byte_end":14101048,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/atomic_cell.rs","byte_start":14101064,"byte_end":14101074,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8467},{"krate":0,"index":8468},{"krate":0,"index":8469},{"krate":0,"index":8470}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/atomic_cell.rs","byte_start":14101861,"byte_end":14101871,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8477}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/idle.rs","byte_start":14102677,"byte_end":14102681,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":8506},{"krate":0,"index":8507},{"krate":0,"index":8508},{"krate":0,"index":8509},{"krate":0,"index":8510},{"krate":0,"index":8511},{"krate":0,"index":8512},{"krate":0,"index":8513}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/idle.rs","byte_start":14106554,"byte_end":14106559,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8515},{"krate":0,"index":8516},{"krate":0,"index":8517},{"krate":0,"index":8518},{"krate":0,"index":8519},{"krate":0,"index":8520},{"krate":0,"index":8521},{"krate":0,"index":8522}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/idle.rs","byte_start":14108037,"byte_end":14108042,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8524}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/idle.rs","byte_start":14108215,"byte_end":14108220,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8528}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14113984,"byte_end":14113989,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8742}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14117619,"byte_end":14117625,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8623}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14118400,"byte_end":14118407,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8628},{"krate":0,"index":8629},{"krate":0,"index":8631},{"krate":0,"index":8632},{"krate":0,"index":8633}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14122673,"byte_end":14122677,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":8635},{"krate":0,"index":8636},{"krate":0,"index":8639},{"krate":0,"index":8641},{"krate":0,"index":8642},{"krate":0,"index":8643},{"krate":0,"index":8644},{"krate":0,"index":8645},{"krate":0,"index":8646},{"krate":0,"index":8647},{"krate":0,"index":8648}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14127489,"byte_end":14127495,"line_start":598,"line_end":598,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8653},{"krate":0,"index":8654},{"krate":0,"index":8655}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14127935,"byte_end":14127938,"line_start":614,"line_end":614,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8657},{"krate":0,"index":8659},{"krate":0,"index":8664},{"krate":0,"index":8665}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14130509,"byte_end":14130515,"line_start":692,"line_end":692,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8667},{"krate":0,"index":8669},{"krate":0,"index":8670},{"krate":0,"index":8671},{"krate":0,"index":8672},{"krate":0,"index":8673},{"krate":0,"index":8674},{"krate":0,"index":8675},{"krate":0,"index":8676}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14098817,"byte_end":14098827,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8702},{"krate":0,"index":8703},{"krate":0,"index":8704},{"krate":0,"index":8706}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14099982,"byte_end":14099992,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8709}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14100131,"byte_end":14100141,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8711}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14100244,"byte_end":14100251,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8713},{"krate":0,"index":8715}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14100672,"byte_end":14100679,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8717}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":173705,"byte_end":173711,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8787}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8806}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8813},{"krate":0,"index":8814}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14138362,"byte_end":14138365,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8867},{"krate":0,"index":8868}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14139087,"byte_end":14139095,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8875}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14139185,"byte_end":14139193,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8878},{"krate":0,"index":8880},{"krate":0,"index":8881}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14141346,"byte_end":14141353,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8890},{"krate":0,"index":8891}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14141461,"byte_end":14141468,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8893},{"krate":0,"index":8894},{"krate":0,"index":8895},{"krate":0,"index":8896}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14147540,"byte_end":14147549,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8982}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14147663,"byte_end":14147672,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8985},{"krate":0,"index":8987}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148060,"byte_end":14148071,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8992}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148357,"byte_end":14148367,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8994},{"krate":0,"index":8995},{"krate":0,"index":8996},{"krate":0,"index":8997},{"krate":0,"index":8998},{"krate":0,"index":8999},{"krate":0,"index":9000},{"krate":0,"index":9001},{"krate":0,"index":9002},{"krate":0,"index":9003},{"krate":0,"index":9004},{"krate":0,"index":9005}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14152163,"byte_end":14152173,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9011}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14154522,"byte_end":14154528,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9018}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14154813,"byte_end":14154819,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9020},{"krate":0,"index":9021}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161008,"byte_end":14161014,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9025},{"krate":0,"index":9032}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162872,"byte_end":14162878,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9070},{"krate":0,"index":9071}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":14197870,"byte_end":14197879,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9094}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":14198025,"byte_end":14198034,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":14198073,"byte_end":14198082,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9101},{"krate":0,"index":9102}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":14199033,"byte_end":14199042,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9127}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":14199188,"byte_end":14199197,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":14199236,"byte_end":14199245,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9134},{"krate":0,"index":9135}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":14200168,"byte_end":14200173,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9163}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":14200353,"byte_end":14200358,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9167},{"krate":0,"index":9168},{"krate":0,"index":9172}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201936,"byte_end":14201943,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9217}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14202227,"byte_end":14202234,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9221},{"krate":0,"index":9222}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14203210,"byte_end":14203216,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14203271,"byte_end":14203277,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9236},{"krate":0,"index":9237},{"krate":0,"index":9238},{"krate":0,"index":9239}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14203666,"byte_end":14203669,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14203715,"byte_end":14203718,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9244},{"krate":0,"index":9245},{"krate":0,"index":9246},{"krate":0,"index":9247}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14204101,"byte_end":14204104,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14204152,"byte_end":14204155,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9252},{"krate":0,"index":9253},{"krate":0,"index":9254},{"krate":0,"index":9255}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14204670,"byte_end":14204676,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14204765,"byte_end":14204771,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266},{"krate":0,"index":9267}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14205849,"byte_end":14205854,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14205902,"byte_end":14205907,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9272},{"krate":0,"index":9273},{"krate":0,"index":9274},{"krate":0,"index":9275}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14206307,"byte_end":14206315,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14206363,"byte_end":14206371,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":9280},{"krate":0,"index":9281},{"krate":0,"index":9282},{"krate":0,"index":9283}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207642,"byte_end":14207647,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207678,"byte_end":14207683,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207714,"byte_end":14207719,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208262,"byte_end":14208267,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9324},{"krate":0,"index":9325},{"krate":0,"index":9326}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":14208881,"byte_end":14208887,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9357}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":14209105,"byte_end":14209111,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9361}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":14209230,"byte_end":14209236,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9365},{"krate":0,"index":9366},{"krate":0,"index":9367}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":14210322,"byte_end":14210331,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9394}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":14210552,"byte_end":14210561,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9398}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":14210683,"byte_end":14210692,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9403},{"krate":0,"index":9404},{"krate":0,"index":9405}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":14211764,"byte_end":14211774,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9433}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":14211970,"byte_end":14211980,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9438},{"krate":0,"index":9439}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":14212879,"byte_end":14212883,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9462}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":14213043,"byte_end":14213047,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9467}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14213990,"byte_end":14213994,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214656,"byte_end":14214660,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9491},{"krate":0,"index":9492},{"krate":0,"index":9493}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":14215406,"byte_end":14215409,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9524}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":14215598,"byte_end":14215601,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9528}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":14215722,"byte_end":14215725,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9533},{"krate":0,"index":9534},{"krate":0,"index":9537}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":14216570,"byte_end":14216575,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9565}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":14216829,"byte_end":14216834,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9569},{"krate":0,"index":9570},{"krate":0,"index":9571}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":14218346,"byte_end":14218350,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":14218384,"byte_end":14218388,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9601}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":14218529,"byte_end":14218533,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":9604},{"krate":0,"index":9605}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219029,"byte_end":14219033,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219660,"byte_end":14219664,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9639},{"krate":0,"index":9640},{"krate":0,"index":9641}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220211,"byte_end":14220218,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220249,"byte_end":14220256,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220287,"byte_end":14220294,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220987,"byte_end":14220994,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9676},{"krate":0,"index":9677},{"krate":0,"index":9678}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226659,"byte_end":14226668,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9709},{"krate":0,"index":9710},{"krate":0,"index":9711},{"krate":0,"index":9714},{"krate":0,"index":9717},{"krate":0,"index":9720},{"krate":0,"index":9721},{"krate":0,"index":9722},{"krate":0,"index":9723},{"krate":0,"index":9724},{"krate":0,"index":9725},{"krate":0,"index":9727}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233669,"byte_end":14233678,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9732}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14235217,"byte_end":14235226,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9737},{"krate":0,"index":9738},{"krate":0,"index":9739}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":14236442,"byte_end":14236446,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9765}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":14236656,"byte_end":14236660,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9768}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":14236793,"byte_end":14236797,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9771},{"krate":0,"index":9772},{"krate":0,"index":9773}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":14238023,"byte_end":14238032,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9801}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":14238253,"byte_end":14238262,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9805}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":14238447,"byte_end":14238456,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9809},{"krate":0,"index":9810},{"krate":0,"index":9811}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":14239805,"byte_end":14239812,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":14239846,"byte_end":14239853,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9841}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":14240060,"byte_end":14240067,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":9846},{"krate":0,"index":9847}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":14240677,"byte_end":14240681,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9876}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":14240891,"byte_end":14240895,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9879}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":14241028,"byte_end":14241032,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9882},{"krate":0,"index":9883},{"krate":0,"index":9885}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":14242551,"byte_end":14242560,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9912}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":14242820,"byte_end":14242829,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9916}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":14243022,"byte_end":14243031,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9920},{"krate":0,"index":9921},{"krate":0,"index":9924}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":14274088,"byte_end":14274095,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10083}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":14274450,"byte_end":14274457,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10086},{"krate":0,"index":10087},{"krate":0,"index":10088}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14197100,"byte_end":14197102,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292933,"byte_end":14292940,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10104},{"krate":0,"index":10105}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14296220,"byte_end":14296237,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":10109}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14306804,"byte_end":14306810,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10221}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14306937,"byte_end":14306943,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10225}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307104,"byte_end":14307108,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307178,"byte_end":14307182,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14309956,"byte_end":14309962,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14309999,"byte_end":14310005,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310043,"byte_end":14310051,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310088,"byte_end":14310096,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310112,"byte_end":14310118,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10245},{"krate":0,"index":10247},{"krate":0,"index":10248},{"krate":0,"index":10249}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14315754,"byte_end":14315758,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":10253}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14316150,"byte_end":14316156,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10256}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14316336,"byte_end":14316342,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10259}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14316496,"byte_end":14316504,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":10262}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321369,"byte_end":14321377,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":10266},{"krate":0,"index":10267},{"krate":0,"index":10285}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14324195,"byte_end":14324200,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10283}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327552,"byte_end":14327560,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10290},{"krate":0,"index":10291}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14328010,"byte_end":14328018,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10295}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14329202,"byte_end":14329206,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":10301},{"krate":0,"index":10302}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14330048,"byte_end":14330052,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10306},{"krate":0,"index":10307}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14330782,"byte_end":14330790,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":11977}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14332102,"byte_end":14332106,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11982},{"krate":0,"index":11983}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14332830,"byte_end":14332834,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10311}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14333632,"byte_end":14333638,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10315},{"krate":0,"index":10316},{"krate":0,"index":10317},{"krate":0,"index":10318},{"krate":0,"index":10319}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334053,"byte_end":14334059,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10322}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334203,"byte_end":14334211,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10325}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334346,"byte_end":14334355,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":10329}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334528,"byte_end":14334537,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10334}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334828,"byte_end":14334837,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10337}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14335110,"byte_end":14335119,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14335146,"byte_end":14335158,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10340}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14335500,"byte_end":14335512,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":14341821,"byte_end":14341826,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10417},{"krate":0,"index":10418},{"krate":0,"index":10419},{"krate":0,"index":10420},{"krate":0,"index":10422},{"krate":0,"index":10424},{"krate":0,"index":10425},{"krate":0,"index":10426},{"krate":0,"index":10428},{"krate":0,"index":10429},{"krate":0,"index":10430},{"krate":0,"index":10432},{"krate":0,"index":10433},{"krate":0,"index":10434}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":14351808,"byte_end":14351814,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10439}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":14352296,"byte_end":14352302,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10442},{"krate":0,"index":10443}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14352940,"byte_end":14352946,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10479}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353078,"byte_end":14353084,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10482}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353491,"byte_end":14353499,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10488}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355271,"byte_end":14355279,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":10494},{"krate":0,"index":10495},{"krate":0,"index":10502},{"krate":0,"index":10503},{"krate":0,"index":10504}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357707,"byte_end":14357715,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357775,"byte_end":14357783,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11994},{"krate":0,"index":11995}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357971,"byte_end":14357977,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10509},{"krate":0,"index":10510},{"krate":0,"index":10517},{"krate":0,"index":10518},{"krate":0,"index":10525},{"krate":0,"index":10527}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14369367,"byte_end":14369369,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10600}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14369770,"byte_end":14369772,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10608}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14370079,"byte_end":14370088,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10611}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14370350,"byte_end":14370362,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":10614}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14372147,"byte_end":14372151,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10636}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14372784,"byte_end":14372792,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10643}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14373058,"byte_end":14373062,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14373111,"byte_end":14373115,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14373594,"byte_end":14373596,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10656},{"krate":0,"index":10657},{"krate":0,"index":10658},{"krate":0,"index":10659}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14374295,"byte_end":14374297,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10662}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14374445,"byte_end":14374447,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10665}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14374625,"byte_end":14374627,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10669}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14375027,"byte_end":14375029,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":10673}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14375556,"byte_end":14375558,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10677},{"krate":0,"index":10678},{"krate":0,"index":10680},{"krate":0,"index":10684}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14378678,"byte_end":14378680,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":10690}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14379116,"byte_end":14379120,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":10698}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14379584,"byte_end":14379588,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10702}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14380137,"byte_end":14380149,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10711}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14381809,"byte_end":14381820,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10738},{"krate":0,"index":10739},{"krate":0,"index":10740},{"krate":0,"index":10741},{"krate":0,"index":10742},{"krate":0,"index":10743},{"krate":0,"index":10745},{"krate":0,"index":10746},{"krate":0,"index":10747}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":14384564,"byte_end":14384566,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10799},{"krate":0,"index":10800},{"krate":0,"index":10801},{"krate":0,"index":10803}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":14390270,"byte_end":14390272,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10806}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":14390549,"byte_end":14390551,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10809},{"krate":0,"index":10810},{"krate":0,"index":10811},{"krate":0,"index":10812}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":14393950,"byte_end":14393952,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10815}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394626,"byte_end":14394641,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":10845}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394782,"byte_end":14394797,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10848}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395255,"byte_end":14395272,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10854}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396250,"byte_end":14396267,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10860},{"krate":0,"index":10861},{"krate":0,"index":10862},{"krate":0,"index":10869},{"krate":0,"index":10870}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398739,"byte_end":14398756,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":10873},{"krate":0,"index":10874}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398922,"byte_end":14398937,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10877},{"krate":0,"index":10878}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400047,"byte_end":14400056,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10898}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400216,"byte_end":14400225,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400711,"byte_end":14400723,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400756,"byte_end":14400768,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10905}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401108,"byte_end":14401120,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10908}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401349,"byte_end":14401358,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10910}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401488,"byte_end":14401497,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401983,"byte_end":14401995,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10913}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402301,"byte_end":14402313,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402470,"byte_end":14402481,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":10916}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402580,"byte_end":14402591,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":10918}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402721,"byte_end":14402732,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14403236,"byte_end":14403252,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14403289,"byte_end":14403305,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":12051}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409604,"byte_end":14409609,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409663,"byte_end":14409668,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409722,"byte_end":14409732,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409797,"byte_end":14409812,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14410099,"byte_end":14410111,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10964}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14410248,"byte_end":14410260,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411068,"byte_end":14411073,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":10968},{"krate":0,"index":10969},{"krate":0,"index":10972},{"krate":0,"index":10975},{"krate":0,"index":10979},{"krate":0,"index":10980},{"krate":0,"index":10981}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415646,"byte_end":14415651,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10984}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415735,"byte_end":14415740,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10987}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415864,"byte_end":14415869,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":10990}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416264,"byte_end":14416274,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10993}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416375,"byte_end":14416385,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10996},{"krate":0,"index":10997}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416532,"byte_end":14416542,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11000}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416699,"byte_end":14416709,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":11003}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416875,"byte_end":14416885,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":11006}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417063,"byte_end":14417078,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11009}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417175,"byte_end":14417190,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":11012},{"krate":0,"index":11013}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417333,"byte_end":14417348,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":11016}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417501,"byte_end":14417516,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":11019}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417678,"byte_end":14417693,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":11022}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14421657,"byte_end":14421665,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14421698,"byte_end":14421706,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14421969,"byte_end":14421975,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11086},{"krate":0,"index":11087},{"krate":0,"index":11090}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14425983,"byte_end":14425989,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11092}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14427727,"byte_end":14427735,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11095}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14428245,"byte_end":14428253,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":11097},{"krate":0,"index":11098}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14433083,"byte_end":14433091,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11101}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14436049,"byte_end":14436055,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11104},{"krate":0,"index":11105},{"krate":0,"index":11106},{"krate":0,"index":11107},{"krate":0,"index":11108}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437931,"byte_end":14437940,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11168}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14438102,"byte_end":14438111,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14438180,"byte_end":14438192,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11171}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14438491,"byte_end":14438503,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440314,"byte_end":14440320,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11184},{"krate":0,"index":11187},{"krate":0,"index":11189},{"krate":0,"index":11196}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446621,"byte_end":14446627,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11199}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446766,"byte_end":14446774,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":11202},{"krate":0,"index":11203}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14451165,"byte_end":14451173,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11206}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14451320,"byte_end":14451328,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":11209},{"krate":0,"index":11210}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14451791,"byte_end":14451796,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11213},{"krate":0,"index":11214},{"krate":0,"index":11216},{"krate":0,"index":11217},{"krate":0,"index":11219},{"krate":0,"index":11223},{"krate":0,"index":11227},{"krate":0,"index":11229},{"krate":0,"index":11231},{"krate":0,"index":11233}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14456168,"byte_end":14456173,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14456210,"byte_end":14456215,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14456240,"byte_end":14456245,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11241}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14456614,"byte_end":14456619,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11245}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14457014,"byte_end":14457019,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":11254},{"krate":0,"index":11255},{"krate":0,"index":11256},{"krate":0,"index":11257},{"krate":0,"index":11258},{"krate":0,"index":11259},{"krate":0,"index":11260},{"krate":0,"index":11261},{"krate":0,"index":11262},{"krate":0,"index":11263},{"krate":0,"index":11264},{"krate":0,"index":11265},{"krate":0,"index":11266}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14458732,"byte_end":14458737,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11268}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14462215,"byte_end":14462224,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11339},{"krate":0,"index":11340},{"krate":0,"index":11341},{"krate":0,"index":11342},{"krate":0,"index":11343},{"krate":0,"index":11344},{"krate":0,"index":11345},{"krate":0,"index":11347},{"krate":0,"index":11348},{"krate":0,"index":11349},{"krate":0,"index":11353}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14472145,"byte_end":14472154,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11357}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14472355,"byte_end":14472361,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11359},{"krate":0,"index":11360}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14473227,"byte_end":14473234,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11362},{"krate":0,"index":11363}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14473912,"byte_end":14473919,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":11366},{"krate":0,"index":11367}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14474718,"byte_end":14474725,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":11371}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476367,"byte_end":14476374,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476421,"byte_end":14476433,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":11374}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476526,"byte_end":14476538,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11376}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476682,"byte_end":14476694,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476741,"byte_end":14476756,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11379},{"krate":0,"index":11380}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14477378,"byte_end":14477393,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11382}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14477679,"byte_end":14477694,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14477787,"byte_end":14477793,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11385},{"krate":0,"index":11386},{"krate":0,"index":11387},{"krate":0,"index":11388},{"krate":0,"index":11389}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14483062,"byte_end":14483071,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11469},{"krate":0,"index":11470},{"krate":0,"index":11471},{"krate":0,"index":11474},{"krate":0,"index":11476},{"krate":0,"index":11480},{"krate":0,"index":11481},{"krate":0,"index":11482},{"krate":0,"index":11483},{"krate":0,"index":11488},{"krate":0,"index":11489},{"krate":0,"index":11490},{"krate":0,"index":11491}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499265,"byte_end":14499274,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11493}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499353,"byte_end":14499362,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11495}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499740,"byte_end":14499749,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499774,"byte_end":14499783,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499821,"byte_end":14499827,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11500},{"krate":0,"index":11504},{"krate":0,"index":11505},{"krate":0,"index":11509},{"krate":0,"index":11511},{"krate":0,"index":11512}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14506233,"byte_end":14506239,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11515}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14506312,"byte_end":14506318,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11517}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14506740,"byte_end":14506752,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":11519}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14506932,"byte_end":14506944,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11522}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14507088,"byte_end":14507100,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14507147,"byte_end":14507162,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11525},{"krate":0,"index":11526}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14507692,"byte_end":14507707,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11528}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14507993,"byte_end":14508008,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14508046,"byte_end":14508052,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11531},{"krate":0,"index":11532},{"krate":0,"index":11533},{"krate":0,"index":11534},{"krate":0,"index":11535},{"krate":0,"index":11536},{"krate":0,"index":11537},{"krate":0,"index":11538},{"krate":0,"index":11539}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14513539,"byte_end":14513547,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11541},{"krate":0,"index":11542},{"krate":0,"index":11543},{"krate":0,"index":11544},{"krate":0,"index":11545},{"krate":0,"index":11546},{"krate":0,"index":11547},{"krate":0,"index":11548},{"krate":0,"index":11549},{"krate":0,"index":11550},{"krate":0,"index":11551},{"krate":0,"index":11552},{"krate":0,"index":11553},{"krate":0,"index":11554},{"krate":0,"index":11555},{"krate":0,"index":11556}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14517210,"byte_end":14517218,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11558}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14517571,"byte_end":14517582,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":11560},{"krate":0,"index":11561},{"krate":0,"index":11562},{"krate":0,"index":11563},{"krate":0,"index":11564},{"krate":0,"index":11565},{"krate":0,"index":11566},{"krate":0,"index":11567}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520311,"byte_end":14520320,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11576},{"krate":0,"index":11577},{"krate":0,"index":11578},{"krate":0,"index":11579},{"krate":0,"index":11582},{"krate":0,"index":11583},{"krate":0,"index":11586}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522415,"byte_end":14522430,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":11589}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522675,"byte_end":14522695,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11591}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522949,"byte_end":14522964,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":11594}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14523072,"byte_end":14523092,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11596}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526446,"byte_end":14526461,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":11636},{"krate":0,"index":11639}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529879,"byte_end":14529894,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11645}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530074,"byte_end":14530089,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":11649}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530265,"byte_end":14530280,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":11653}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530744,"byte_end":14530760,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11663},{"krate":0,"index":11666}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14534354,"byte_end":14534370,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":11672}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14534550,"byte_end":14534566,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":11676}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14534742,"byte_end":14534758,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":11680}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14535834,"byte_end":14535840,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14535894,"byte_end":14535900,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536134,"byte_end":14536149,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536207,"byte_end":14536222,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536287,"byte_end":14536303,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536616,"byte_end":14536632,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536690,"byte_end":14536696,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11695},{"krate":0,"index":11696},{"krate":0,"index":11700},{"krate":0,"index":11704}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539884,"byte_end":14539899,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11707},{"krate":0,"index":11708}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14540030,"byte_end":14540046,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11711},{"krate":0,"index":11712}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14540180,"byte_end":14540196,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11715}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14540310,"byte_end":14540316,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11718}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14540408,"byte_end":14540414,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11721}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14546689,"byte_end":14546700,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":11767},{"krate":0,"index":11768},{"krate":0,"index":11769},{"krate":0,"index":11770},{"krate":0,"index":11774},{"krate":0,"index":11775}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14552627,"byte_end":14552638,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11778}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14552724,"byte_end":14552735,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":11780}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14552868,"byte_end":14552879,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14552904,"byte_end":14552915,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14553011,"byte_end":14553016,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11787},{"krate":0,"index":11788}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556557,"byte_end":14556566,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11857}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556746,"byte_end":14556755,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558914,"byte_end":14558922,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":11868},{"krate":0,"index":11869}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560194,"byte_end":14560202,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11873}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561568,"byte_end":14561576,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":11880},{"krate":0,"index":11881}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561835,"byte_end":14561843,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11885}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14562146,"byte_end":14562154,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11888}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14562268,"byte_end":14562274,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11891},{"krate":0,"index":11892},{"krate":0,"index":11896}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14563809,"byte_end":14563815,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11901}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564054,"byte_end":14564057,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11904},{"krate":0,"index":11905}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564198,"byte_end":14564204,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11908}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564306,"byte_end":14564313,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":11910}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564536,"byte_end":14564543,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11912}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564660,"byte_end":14564667,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564697,"byte_end":14564704,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11915}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564851,"byte_end":14564858,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11918},{"krate":0,"index":11919}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":14583677,"byte_end":14583685,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":12342},{"krate":0,"index":12343}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14590817,"byte_end":14590825,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":12409},{"krate":0,"index":12410},{"krate":0,"index":12412},{"krate":0,"index":12414},{"krate":0,"index":12418},{"krate":0,"index":12420},{"krate":0,"index":12423}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14598667,"byte_end":14598675,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":12427}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14598814,"byte_end":14598822,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":12429},{"krate":0,"index":12430}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14599787,"byte_end":14599795,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":12433}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14599876,"byte_end":14599884,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":12435}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14600751,"byte_end":14600759,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12439},{"krate":0,"index":12440}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14601644,"byte_end":14601650,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":12444},{"krate":0,"index":12446}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14602213,"byte_end":14602216,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":12448},{"krate":0,"index":12450},{"krate":0,"index":12455}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605785,"byte_end":14605793,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":12500},{"krate":0,"index":12504},{"krate":0,"index":12507}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607569,"byte_end":14607577,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":12513}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607785,"byte_end":14607793,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":12517}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14608114,"byte_end":14608129,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":12521},{"krate":0,"index":12522}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14608430,"byte_end":14608435,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":12531}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609053,"byte_end":14609054,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609239,"byte_end":14609250,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":12538}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609394,"byte_end":14609405,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":12540}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609552,"byte_end":14609563,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/clock.rs","byte_start":14614148,"byte_end":14614153,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":13331},{"krate":0,"index":13332},{"krate":0,"index":13333},{"krate":0,"index":13334}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624751,"byte_end":14624761,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":12623},{"krate":0,"index":12624},{"krate":0,"index":12625},{"krate":0,"index":12626},{"krate":0,"index":12629},{"krate":0,"index":12630},{"krate":0,"index":12638},{"krate":0,"index":12642},{"krate":0,"index":12643},{"krate":0,"index":12644},{"krate":0,"index":12646},{"krate":0,"index":12647},{"krate":0,"index":12648},{"krate":0,"index":12649},{"krate":0,"index":12650},{"krate":0,"index":12651},{"krate":0,"index":12652},{"krate":0,"index":12656}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14642755,"byte_end":14642765,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14642793,"byte_end":14642803,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":12661}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14642940,"byte_end":14642950,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":12664},{"krate":0,"index":12665}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14643332,"byte_end":14643337,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":12668},{"krate":0,"index":12669},{"krate":0,"index":12670},{"krate":0,"index":12671},{"krate":0,"index":12672},{"krate":0,"index":12673},{"krate":0,"index":12674},{"krate":0,"index":12675}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645464,"byte_end":14645469,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":12678}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645599,"byte_end":14645602,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":12680}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645689,"byte_end":14645696,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":12683},{"krate":0,"index":12684},{"krate":0,"index":12685},{"krate":0,"index":12686}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648234,"byte_end":14648239,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":12717},{"krate":0,"index":12718},{"krate":0,"index":12719},{"krate":0,"index":12720}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14649217,"byte_end":14649222,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":12722},{"krate":0,"index":12723}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":14662892,"byte_end":14662903,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":12756},{"krate":0,"index":12757},{"krate":0,"index":12758},{"krate":0,"index":12759}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":14664881,"byte_end":14664899,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12761},{"krate":0,"index":12762}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":14665495,"byte_end":14665513,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":12764}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":14669751,"byte_end":14669756,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":12828},{"krate":0,"index":12829},{"krate":0,"index":12830},{"krate":0,"index":12831},{"krate":0,"index":12832},{"krate":0,"index":12833},{"krate":0,"index":12834},{"krate":0,"index":12835},{"krate":0,"index":12836},{"krate":0,"index":12837},{"krate":0,"index":12838},{"krate":0,"index":12839},{"krate":0,"index":12840},{"krate":0,"index":12841}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":14676424,"byte_end":14676429,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":12844}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":14676637,"byte_end":14676642,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":14676667,"byte_end":14676672,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":14677049,"byte_end":14677055,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":12868},{"krate":0,"index":12869},{"krate":0,"index":12870}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":14677718,"byte_end":14677724,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12872}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":14678169,"byte_end":14678181,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":12905},{"krate":0,"index":12906},{"krate":0,"index":12907},{"krate":0,"index":12908},{"krate":0,"index":12909}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":14679091,"byte_end":14679103,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12912}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":14679387,"byte_end":14679392,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":12930}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":14679483,"byte_end":14679488,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":12932},{"krate":0,"index":12933},{"krate":0,"index":12934},{"krate":0,"index":12935},{"krate":0,"index":12936},{"krate":0,"index":12937},{"krate":0,"index":12938},{"krate":0,"index":12939}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14654187,"byte_end":14654193,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":13009},{"krate":0,"index":13010},{"krate":0,"index":13011},{"krate":0,"index":13012},{"krate":0,"index":13013},{"krate":0,"index":13014},{"krate":0,"index":13015}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14657890,"byte_end":14657896,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":13021},{"krate":0,"index":13022},{"krate":0,"index":13023},{"krate":0,"index":13024},{"krate":0,"index":13025},{"krate":0,"index":13026}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14660469,"byte_end":14660475,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":13032}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14660591,"byte_end":14660596,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":13034},{"krate":0,"index":13035},{"krate":0,"index":13036},{"krate":0,"index":13037},{"krate":0,"index":13038},{"krate":0,"index":13039}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14662213,"byte_end":14662218,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":13041}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683810,"byte_end":14683815,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":13051},{"krate":0,"index":13052},{"krate":0,"index":13053},{"krate":0,"index":13054},{"krate":0,"index":13055},{"krate":0,"index":13056},{"krate":0,"index":13057},{"krate":0,"index":13058}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14685182,"byte_end":14685187,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14685214,"byte_end":14685219,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":13061}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14685991,"byte_end":14685998,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":13077},{"krate":0,"index":13078},{"krate":0,"index":13079},{"krate":0,"index":13080},{"krate":0,"index":13081},{"krate":0,"index":13082},{"krate":0,"index":13083},{"krate":0,"index":13084},{"krate":0,"index":13085}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689772,"byte_end":14689779,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":13087}],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689908,"byte_end":14689915,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":13089}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690030,"byte_end":14690037,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13091},{"krate":0,"index":13092}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690202,"byte_end":14690209,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":13094}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690314,"byte_end":14690321,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":13096},{"krate":0,"index":13097}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690462,"byte_end":14690469,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13099},{"krate":0,"index":13100}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690630,"byte_end":14690637,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":13102}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690744,"byte_end":14690751,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":13104}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694633,"byte_end":14694641,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":13146},{"krate":0,"index":13147}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695936,"byte_end":14695944,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":13152},{"krate":0,"index":13153}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699276,"byte_end":14699283,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":13202}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699412,"byte_end":14699419,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":13205},{"krate":0,"index":13206},{"krate":0,"index":13207},{"krate":0,"index":13208}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699957,"byte_end":14699964,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13211},{"krate":0,"index":13212}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14700542,"byte_end":14700549,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":13214}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14700693,"byte_end":14700700,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14700737,"byte_end":14700742,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":13217}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14718882,"byte_end":14718890,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":13531},{"krate":0,"index":13532},{"krate":0,"index":13533}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719705,"byte_end":14719713,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13536},{"krate":0,"index":13537}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":14710646,"byte_end":14710651,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":13248},{"krate":0,"index":13250},{"krate":0,"index":13251},{"krate":0,"index":13252},{"krate":0,"index":13253},{"krate":0,"index":13254}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":14715403,"byte_end":14715408,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":13257}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":14702467,"byte_end":14702472,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":13294},{"krate":0,"index":13295},{"krate":0,"index":13296},{"krate":0,"index":13297},{"krate":0,"index":13298},{"krate":0,"index":13300},{"krate":0,"index":13302},{"krate":0,"index":13303},{"krate":0,"index":13304},{"krate":0,"index":13305},{"krate":0,"index":13306},{"krate":0,"index":13307}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":14708180,"byte_end":14708184,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":13310}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":14720546,"byte_end":14720550,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":13578},{"krate":0,"index":13579},{"krate":0,"index":13580},{"krate":0,"index":13581},{"krate":0,"index":13582},{"krate":0,"index":13583},{"krate":0,"index":13584}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":14722024,"byte_end":14722028,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":13586}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/addr.rs","byte_start":14729247,"byte_end":14729254,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":13617},{"krate":0,"index":13618},{"krate":0,"index":13619},{"krate":0,"index":13620},{"krate":0,"index":13621},{"krate":0,"index":13622},{"krate":0,"index":13623},{"krate":0,"index":13624}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/generation.rs","byte_start":14732283,"byte_end":14732293,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":13646},{"krate":0,"index":13647},{"krate":0,"index":13648},{"krate":0,"index":13649},{"krate":0,"index":13650}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":14733432,"byte_end":14733437,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":13687},{"krate":0,"index":13688},{"krate":0,"index":13690}],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":14733779,"byte_end":14733785,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":13694},{"krate":0,"index":13695},{"krate":0,"index":13697},{"krate":0,"index":13700},{"krate":0,"index":13703},{"krate":0,"index":13706}],"docs":"","sig":null,"attributes":[]},{"id":830,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":14737737,"byte_end":14737742,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":13711}],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":14738048,"byte_end":14738054,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":13715}],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":14740197,"byte_end":14740202,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":13739},{"krate":0,"index":13742},{"krate":0,"index":13743},{"krate":0,"index":13744},{"krate":0,"index":13745},{"krate":0,"index":13746}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":14741881,"byte_end":14741886,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":13749}],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/slot.rs","byte_start":14742263,"byte_end":14742267,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":13770},{"krate":0,"index":13771},{"krate":0,"index":13772},{"krate":0,"index":13773},{"krate":0,"index":13774},{"krate":0,"index":13776}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":14743238,"byte_end":14743251,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":13800},{"krate":0,"index":13801},{"krate":0,"index":13802}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":14744079,"byte_end":14744092,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":13805}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":14723626,"byte_end":14723630,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":14723667,"byte_end":14723671,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":14723694,"byte_end":14723698,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":13830},{"krate":0,"index":13831},{"krate":0,"index":13832},{"krate":0,"index":13833}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":14725213,"byte_end":14725217,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":13836}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186296,"byte_end":186306,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":13881}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186706,"byte_end":186716,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":13889}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186938,"byte_end":186942,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":13893},{"krate":0,"index":13894}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14744904,"byte_end":14744911,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14744948,"byte_end":14744955,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14744993,"byte_end":14745002,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14745188,"byte_end":14745195,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":13952},{"krate":0,"index":13953}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14745829,"byte_end":14745838,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":13956},{"krate":0,"index":13957}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14745970,"byte_end":14745979,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":13960}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14746101,"byte_end":14746110,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13963}],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14197,"byte_end":14203,"line_start":348,"line_end":348,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","byte_start":16314,"byte_end":16321,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14228,"byte_end":14230,"line_start":351,"line_end":351,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1320}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/mod.rs","byte_start":13267029,"byte_end":13267031,"line_start":51,"line_end":51,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1617}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/mod.rs","byte_start":13316948,"byte_end":13316952,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1618}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14258,"byte_end":14264,"line_start":355,"line_end":355,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14275,"byte_end":14277,"line_start":357,"line_end":357,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":243}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14287,"byte_end":14290,"line_start":358,"line_end":358,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":445}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72960,"byte_end":72963,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":4996}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73067,"byte_end":73070,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":5464}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73134,"byte_end":73138,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5667}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":13664328,"byte_end":13664336,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":5668}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14322,"byte_end":14329,"line_start":363,"line_end":363,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":822}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14359,"byte_end":14366,"line_start":366,"line_end":366,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":6551}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14379,"byte_end":14386,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":836}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14437,"byte_end":14443,"line_start":374,"line_end":374,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":8815}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":14135532,"byte_end":14135536,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":8906}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14474,"byte_end":14480,"line_start":378,"line_end":378,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":9072}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14509,"byte_end":14513,"line_start":382,"line_end":382,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":10095}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290678,"byte_end":14290687,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":10117}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290845,"byte_end":14290849,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":10344}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/mod.rs","byte_start":14339238,"byte_end":14339243,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":10889}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14290996,"byte_end":14291003,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":11114}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mod.rs","byte_start":14291317,"byte_end":14291322,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":11798}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14577,"byte_end":14581,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":12277}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14635,"byte_end":14639,"line_start":394,"line_end":394,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":12569}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":14612437,"byte_end":14612448,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":12574}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":63},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/dir_builder.rs","byte_start":13274050,"byte_end":13274060,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13279831,"byte_end":13279835,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13293060,"byte_end":13293064,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1461},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13295548,"byte_end":13295552,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1461},"to":{"krate":0,"index":354}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13297977,"byte_end":13297981,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1461},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13300952,"byte_end":13300956,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1461},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13301054,"byte_end":13301058,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1461},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/file.rs","byte_start":13301287,"byte_end":13301291,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1461},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13306216,"byte_end":13306227,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13316696,"byte_end":13316707,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2009},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/open_options.rs","byte_start":13316825,"byte_end":13316836,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2009},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/open_options_ext.rs","byte_start":13320110,"byte_end":13320121,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2009},"to":{"krate":0,"index":1645}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/os/unix/dir_builder_ext.rs","byte_start":13320950,"byte_end":13320960,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":1658}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13324032,"byte_end":13324039,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13325274,"byte_end":13325281,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2016},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13326108,"byte_end":13326116,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/fs/read_dir.rs","byte_start":13329898,"byte_end":13329906,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2030},"to":{"krate":1,"index":5524}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2035},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2035},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2048},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2048},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13335881,"byte_end":13335889,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13336162,"byte_end":13336170,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2172},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13337775,"byte_end":13337783,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2172},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13340508,"byte_end":13340511,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/blocking.rs","byte_start":13342326,"byte_end":13342329,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47547,"byte_end":47556,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":309},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":43480},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":10561},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":43480},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":10561},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":354}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":43480},"to":{"krate":0,"index":354}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":10561},"to":{"krate":0,"index":354}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":43}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":43480},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":5,"index":7050},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":10561},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":10561},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":10561},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":1,"index":10561},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":13354651,"byte_end":13354662,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2508},"to":{"krate":0,"index":13632}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":13355421,"byte_end":13355432,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2508},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":13355639,"byte_end":13355650,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":13358272,"byte_end":13358283,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2508},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13343971,"byte_end":13343977,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13346838,"byte_end":13346844,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2323},"to":{"krate":0,"index":809}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13347243,"byte_end":13347249,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13347385,"byte_end":13347391,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13348552,"byte_end":13348558,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2514},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13348636,"byte_end":13348642,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2514},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13348777,"byte_end":13348782,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":13350326,"byte_end":13350335,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13364841,"byte_end":13364852,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13372643,"byte_end":13372654,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2534},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13373147,"byte_end":13373158,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2534},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13374239,"byte_end":13374250,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":13374423,"byte_end":13374434,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13376582,"byte_end":13376594,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13387464,"byte_end":13387476,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2538},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13387501,"byte_end":13387513,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2538},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":13387532,"byte_end":13387544,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2538},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stderr.rs","byte_start":13390103,"byte_end":13390109,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2639},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stderr.rs","byte_start":13390417,"byte_end":13390423,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2639},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdin.rs","byte_start":13392831,"byte_end":13392836,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2644},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdin.rs","byte_start":13393140,"byte_end":13393145,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2644},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdout.rs","byte_start":13395928,"byte_end":13395934,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2649},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/stdout.rs","byte_start":13396242,"byte_end":13396248,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2649},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13398368,"byte_end":13398376,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13399293,"byte_end":13399302,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13399552,"byte_end":13399560,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2855},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13400115,"byte_end":13400124,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2858},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401073,"byte_end":13401078,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401471,"byte_end":13401476,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401729,"byte_end":13401734,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2704},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401857,"byte_end":13401865,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401902,"byte_end":13401911,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2858},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401948,"byte_end":13401956,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13401993,"byte_end":13402002,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2858},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13402045,"byte_end":13402053,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":13402221,"byte_end":13402230,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2858},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":13402920,"byte_end":13402924,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2863},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":13405986,"byte_end":13405998,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":264},"to":{"krate":0,"index":4217}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":13415019,"byte_end":13415020,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2905},"to":{"krate":0,"index":4217}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13417047,"byte_end":13417056,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":309},"to":{"krate":0,"index":4225}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":13454452,"byte_end":13454453,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3022},"to":{"krate":0,"index":4225}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13455332,"byte_end":13455341,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":354},"to":{"krate":0,"index":3040}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":13456211,"byte_end":13456212,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3043},"to":{"krate":0,"index":3040}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13458269,"byte_end":13458279,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":393},"to":{"krate":0,"index":4277}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":13491559,"byte_end":13491560,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3146},"to":{"krate":0,"index":4277}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13492976,"byte_end":13492985,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":16714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13495164,"byte_end":13495173,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":16714},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13496149,"byte_end":13496158,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":16714},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13496989,"byte_end":13496998,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":16714},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":13497714,"byte_end":13497723,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":16714},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13499230,"byte_end":13499239,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":16687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13501076,"byte_end":13501085,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":16687},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13501227,"byte_end":13501236,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":16687},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13501948,"byte_end":13501957,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":16687},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13502487,"byte_end":13502496,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":16687},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":13502975,"byte_end":13502984,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":16687},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13504938,"byte_end":13504947,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":16637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13507225,"byte_end":13507234,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":16637},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13508124,"byte_end":13508133,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":16637},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13508615,"byte_end":13508624,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":16637},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":13508911,"byte_end":13508920,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":16637},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13510089,"byte_end":13510094,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":16588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13511234,"byte_end":13511239,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":16588},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13511518,"byte_end":13511523,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":16588},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":13512346,"byte_end":13512351,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":16588},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":13515394,"byte_end":13515398,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4327},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":13518508,"byte_end":13518513,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4343},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":13518842,"byte_end":13518847,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4343},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":13519080,"byte_end":13519085,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4343},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/flush.rs","byte_start":13519906,"byte_end":13519911,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4346},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13521091,"byte_end":13521096,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":16549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13522348,"byte_end":13522353,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":16549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":13523100,"byte_end":13523105,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":16549},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13526265,"byte_end":13526277,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4354},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13526826,"byte_end":13526838,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4354},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13527563,"byte_end":13527575,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4354},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13527735,"byte_end":13527739,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13528145,"byte_end":13528149,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4359},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":13528975,"byte_end":13528979,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4359},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":13530907,"byte_end":13530911,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4367},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":13531972,"byte_end":13531979,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4376},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":13533344,"byte_end":13533353,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4387},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":13541631,"byte_end":13541639,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4541},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":13547559,"byte_end":13547568,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4552},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":13550307,"byte_end":13550319,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4565},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":13552759,"byte_end":13552768,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4576},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":13554602,"byte_end":13554608,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4588},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/shutdown.rs","byte_start":13555730,"byte_end":13555738,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4592},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":13557571,"byte_end":13557575,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4600},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":13558085,"byte_end":13558089,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4600},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559054,"byte_end":13559059,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":15715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13559798,"byte_end":13559803,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":15715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":13560582,"byte_end":13560587,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":15715},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13574126,"byte_end":13574138,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":15668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13574643,"byte_end":13574655,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":15668},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":13576194,"byte_end":13576206,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":15668},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":13579735,"byte_end":13579747,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":15626},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13561755,"byte_end":13561759,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":15586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13563387,"byte_end":13563391,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":15586},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":13564048,"byte_end":13564052,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":15586},"to":{"krate":0,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":13565609,"byte_end":13565614,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4708},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":13566407,"byte_end":13566415,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4717},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":13567923,"byte_end":13567931,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4726},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74102,"byte_end":74119,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":527},"to":{"krate":0,"index":472}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":153}},"from":{"krate":1,"index":10778},"to":{"krate":0,"index":472}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":154}},"from":{"krate":1,"index":10778},"to":{"krate":0,"index":527}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":1,"index":10802},"to":{"krate":0,"index":472}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":156}},"from":{"krate":1,"index":10802},"to":{"krate":0,"index":527}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":1,"index":10805},"to":{"krate":0,"index":472}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":158}},"from":{"krate":1,"index":10805},"to":{"krate":0,"index":527}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":79320,"byte_end":79326,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"kind":{"Impl":{"id":161}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":472}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":79370,"byte_end":79376,"line_start":221,"line_end":221,"column_start":40,"column_end":46},"kind":{"Impl":{"id":162}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":527}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80742,"byte_end":80752,"line_start":272,"line_end":272,"column_start":25,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4960},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":81400,"byte_end":81409,"line_start":290,"line_end":290,"column_start":27,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4969},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13584431,"byte_end":13584442,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13595137,"byte_end":13595148,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5425},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13595463,"byte_end":13595474,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":167}},"from":{"krate":24,"index":1498},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13595914,"byte_end":13595925,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5425},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13596251,"byte_end":13596262,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5425},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":13596478,"byte_end":13596489,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5425},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597321,"byte_end":13597329,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":13597967,"byte_end":13597975,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5427},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13600138,"byte_end":13600146,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602601,"byte_end":13602609,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13602929,"byte_end":13602938,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5440},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13603751,"byte_end":13603759,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5433},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":13603853,"byte_end":13603862,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5440},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13606950,"byte_end":13606962,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5456},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607165,"byte_end":13607177,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5456},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13607187,"byte_end":13607200,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610034,"byte_end":13610047,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5447},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13610352,"byte_end":13610366,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13611049,"byte_end":13611063,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5451},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13611223,"byte_end":13611237,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5451},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13612176,"byte_end":13612189,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5447},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":13612285,"byte_end":13612299,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5451},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13614434,"byte_end":13614443,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13639500,"byte_end":13639509,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"kind":{"Impl":{"id":188}},"from":{"krate":24,"index":1440},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13639945,"byte_end":13639954,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5462},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13640307,"byte_end":13640316,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5462},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13640630,"byte_end":13640639,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5462},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13641383,"byte_end":13641392,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5462},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":13641606,"byte_end":13641615,"line_start":920,"line_end":920,"column_start":22,"column_end":31},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5462},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13642621,"byte_end":13642630,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13657291,"byte_end":13657300,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"kind":{"Impl":{"id":195}},"from":{"krate":24,"index":1592},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13657736,"byte_end":13657745,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5649},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13658065,"byte_end":13658074,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5649},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":13658293,"byte_end":13658302,"line_start":435,"line_end":435,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5649},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13660388,"byte_end":13660400,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13660603,"byte_end":13660615,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5661},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13661142,"byte_end":13661150,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13662782,"byte_end":13662790,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13664110,"byte_end":13664118,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5651},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":13664209,"byte_end":13664217,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5656},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13665475,"byte_end":13665487,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":6321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13675908,"byte_end":13675920,"line_start":314,"line_end":314,"column_start":41,"column_end":53},"kind":{"Impl":{"id":206}},"from":{"krate":32,"index":300},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13676362,"byte_end":13676374,"line_start":328,"line_end":328,"column_start":37,"column_end":49},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6321},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13676703,"byte_end":13676715,"line_start":340,"line_end":340,"column_start":21,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":6321},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":13676840,"byte_end":13676852,"line_start":346,"line_end":346,"column_start":18,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6321},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13677789,"byte_end":13677797,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678189,"byte_end":13678197,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":6330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678700,"byte_end":13678708,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":6323},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":13678808,"byte_end":13678816,"line_start":64,"line_end":64,"column_start":30,"column_end":38},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":6330},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680293,"byte_end":13680305,"line_start":53,"line_end":53,"column_start":23,"column_end":35},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":6346},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13680508,"byte_end":13680520,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":6346},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681084,"byte_end":13681097,"line_start":77,"line_end":77,"column_start":6,"column_end":19},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":6342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13681882,"byte_end":13681895,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":6337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13683065,"byte_end":13683078,"line_start":130,"line_end":130,"column_start":15,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":6337},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13683247,"byte_end":13683260,"line_start":138,"line_end":138,"column_start":30,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6337},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":13683361,"byte_end":13683374,"line_start":144,"line_end":144,"column_start":30,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":6342},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13683719,"byte_end":13683727,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":6352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":13684459,"byte_end":13684467,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":6352},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13686594,"byte_end":13686606,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":6358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691310,"byte_end":13691322,"line_start":184,"line_end":184,"column_start":32,"column_end":44},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":6358},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13691638,"byte_end":13691650,"line_start":196,"line_end":196,"column_start":41,"column_end":53},"kind":{"Impl":{"id":225}},"from":{"krate":32,"index":304},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13692092,"byte_end":13692104,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":6358},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13692424,"byte_end":13692436,"line_start":222,"line_end":222,"column_start":21,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":6358},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":13692561,"byte_end":13692573,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":6358},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694550,"byte_end":13694558,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":6360},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13694878,"byte_end":13694887,"line_start":67,"line_end":67,"column_start":21,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6367},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13695371,"byte_end":13695379,"line_start":85,"line_end":85,"column_start":28,"column_end":36},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6360},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":13695475,"byte_end":13695484,"line_start":91,"line_end":91,"column_start":28,"column_end":37},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6367},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698589,"byte_end":13698601,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698804,"byte_end":13698816,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":6383},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13698826,"byte_end":13698839,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":6374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699255,"byte_end":13699268,"line_start":111,"line_end":111,"column_start":20,"column_end":33},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":6374},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13699573,"byte_end":13699587,"line_start":125,"line_end":125,"column_start":6,"column_end":20},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":6378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13700285,"byte_end":13700299,"line_start":144,"line_end":144,"column_start":15,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13700459,"byte_end":13700473,"line_start":152,"line_end":152,"column_start":21,"column_end":35},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":6378},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13701207,"byte_end":13701220,"line_start":177,"line_end":177,"column_start":28,"column_end":41},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":6374},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":13701318,"byte_end":13701332,"line_start":183,"line_end":183,"column_start":28,"column_end":42},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13702353,"byte_end":13702363,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":6389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13706710,"byte_end":13706720,"line_start":143,"line_end":143,"column_start":39,"column_end":49},"kind":{"Impl":{"id":243}},"from":{"krate":32,"index":308},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13707158,"byte_end":13707168,"line_start":157,"line_end":157,"column_start":35,"column_end":45},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6389},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13707481,"byte_end":13707491,"line_start":169,"line_end":169,"column_start":20,"column_end":30},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6389},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13707805,"byte_end":13707815,"line_start":183,"line_end":183,"column_start":21,"column_end":31},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6389},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13708302,"byte_end":13708312,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13709829,"byte_end":13709839,"line_start":247,"line_end":247,"column_start":21,"column_end":31},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6389},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":13709964,"byte_end":13709974,"line_start":253,"line_end":253,"column_start":18,"column_end":28},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6389},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":6409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":13714331,"byte_end":13714337,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":6430},"to":{"krate":0,"index":809}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":13715294,"byte_end":13715300,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6430},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":13715514,"byte_end":13715520,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6430},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6459},"to":{"krate":0,"index":809}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6459},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6463},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":6527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":6527},"to":{"krate":0,"index":809}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95507,"byte_end":95511,"line_start":97,"line_end":97,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95514,"byte_end":95518,"line_start":97,"line_end":97,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"kind":{"Impl":{"id":287}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"kind":{"Impl":{"id":288}},"from":{"krate":5,"index":5953},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/orphan.rs","byte_start":13757431,"byte_end":13757446,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/orphan.rs","byte_start":13757690,"byte_end":13757705,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6951},"to":{"krate":0,"index":6570}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13762188,"byte_end":13762193,"line_start":27,"line_end":27,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3045},"to":{"krate":0,"index":6631}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13762286,"byte_end":13762292,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":9064},"to":{"krate":0,"index":6631}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13762436,"byte_end":13762442,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13762609,"byte_end":13762615,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13763082,"byte_end":13763088,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13765383,"byte_end":13765389,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6957},"to":{"krate":0,"index":6785}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/reap.rs","byte_start":13765565,"byte_end":13765571,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13752047,"byte_end":13752052,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"kind":{"Impl":{"id":297}},"from":{"krate":1,"index":7302},"to":{"krate":0,"index":6563}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13752230,"byte_end":13752235,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"kind":{"Impl":{"id":298}},"from":{"krate":1,"index":7302},"to":{"krate":0,"index":6785}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13752480,"byte_end":13752497,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6742},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13752646,"byte_end":13752663,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6742},"to":{"krate":0,"index":6570}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13753010,"byte_end":13753015,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6749},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13753684,"byte_end":13753689,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13753776,"byte_end":13753781,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6749},"to":{"krate":0,"index":6785}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13753878,"byte_end":13753883,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6749},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13754146,"byte_end":13754148,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6980},"to":{"krate":1,"index":4345}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13754303,"byte_end":13754305,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6980},"to":{"krate":1,"index":4405}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13754535,"byte_end":13754537,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6980},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/unix/mod.rs","byte_start":13754660,"byte_end":13754662,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6980},"to":{"krate":24,"index":26}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13721058,"byte_end":13721065,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13737315,"byte_end":13737322,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6986},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13737652,"byte_end":13737666,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6991},"to":{"krate":0,"index":6785}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13737872,"byte_end":13737886,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6991},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13738023,"byte_end":13738037,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6991},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13739886,"byte_end":13739891,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13743424,"byte_end":13743429,"line_start":858,"line_end":858,"column_start":17,"column_end":22},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6998},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744394,"byte_end":13744404,"line_start":893,"line_end":893,"column_start":21,"column_end":31},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":7005},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13744929,"byte_end":13744940,"line_start":911,"line_end":911,"column_start":20,"column_end":31},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":7009},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13745404,"byte_end":13745415,"line_start":926,"line_end":926,"column_start":20,"column_end":31},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":7013},"to":{"krate":0,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13746006,"byte_end":13746016,"line_start":947,"line_end":947,"column_start":22,"column_end":32},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":7005},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13746141,"byte_end":13746152,"line_start":953,"line_end":953,"column_start":22,"column_end":33},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":7009},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/process/mod.rs","byte_start":13746277,"byte_end":13746288,"line_start":959,"line_end":959,"column_start":22,"column_end":33},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":7013},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13990979,"byte_end":13990993,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":7086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13994532,"byte_end":13994537,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":7121},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13995224,"byte_end":13995238,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":7086},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13996125,"byte_end":13996139,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":7086},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13996305,"byte_end":13996312,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":7766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13996770,"byte_end":13996777,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":7766},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13996945,"byte_end":13996948,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":5953},"to":{"krate":0,"index":7730}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":13998046,"byte_end":13998052,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7095},"to":{"krate":0,"index":1229}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14005735,"byte_end":14005741,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":7220},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14005766,"byte_end":14005772,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":7220},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14006131,"byte_end":14006135,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":7209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14006913,"byte_end":14006917,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":7215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":14012668,"byte_end":14012674,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":7220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14013299,"byte_end":14013308,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":7780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016387,"byte_end":14016396,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":7780},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016639,"byte_end":14016648,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":7780},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016925,"byte_end":14016934,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":7780},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":14016968,"byte_end":14016973,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":340}},"from":{"krate":1,"index":3804},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":14017651,"byte_end":14017658,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":7364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":14018135,"byte_end":14018142,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":14020313,"byte_end":14020318,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7380},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032622,"byte_end":14032632,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7782},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032669,"byte_end":14032679,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7782},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032695,"byte_end":14032705,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032881,"byte_end":14032891,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7782},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14032918,"byte_end":14032928,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7782},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14034154,"byte_end":14034164,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7782},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":14034430,"byte_end":14034440,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":7782},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":14035687,"byte_end":14035694,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":7489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":14037225,"byte_end":14037232,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":7489},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":14037322,"byte_end":14037329,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":7489},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":14040011,"byte_end":14040016,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":7552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":14048872,"byte_end":14048880,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":14050757,"byte_end":14050762,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7552},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":14050921,"byte_end":14050929,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7786},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/waker.rs","byte_start":14052747,"byte_end":14052755,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7666},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/stack.rs","byte_start":14054503,"byte_end":14054516,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/stack.rs","byte_start":14055674,"byte_end":14055678,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7834},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/stack.rs","byte_start":14056078,"byte_end":14056082,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":7834},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999065,"byte_end":13999069,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7712},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999100,"byte_end":13999104,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":7712},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999241,"byte_end":13999249,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7720},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999290,"byte_end":13999298,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7720},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999423,"byte_end":13999427,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":7730}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":13999430,"byte_end":13999435,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":7730}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14001222,"byte_end":14001226,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14001523,"byte_end":14001531,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14001782,"byte_end":14001786,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":7712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14001979,"byte_end":14001987,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":7720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002118,"byte_end":14002122,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":7712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002291,"byte_end":14002299,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002585,"byte_end":14002589,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7712},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002829,"byte_end":14002833,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7712},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14002985,"byte_end":14002993,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7720},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":14003209,"byte_end":14003213,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7712},"to":{"krate":0,"index":1166}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14058490,"byte_end":14058502,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14060388,"byte_end":14060400,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7918},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14060486,"byte_end":14060498,"line_start":152,"line_end":152,"column_start":21,"column_end":33},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7918},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14060659,"byte_end":14060666,"line_start":160,"line_end":160,"column_start":6,"column_end":13},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":8036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14063109,"byte_end":14063114,"line_start":238,"line_end":238,"column_start":6,"column_end":11},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/pool.rs","byte_start":14065863,"byte_end":14065870,"line_start":325,"line_end":325,"column_start":21,"column_end":28},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":8036},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/schedule.rs","byte_start":14066373,"byte_end":14066385,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7983},"to":{"krate":0,"index":7730}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/shutdown.rs","byte_start":14067258,"byte_end":14067266,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":8046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/task.rs","byte_start":14069014,"byte_end":14069026,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":8019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/task.rs","byte_start":14069252,"byte_end":14069264,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":8019},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/task.rs","byte_start":14069294,"byte_end":14069306,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":8019},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":141852,"byte_end":141859,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":8104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":146358,"byte_end":146363,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":953},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":147583,"byte_end":147604,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":149349,"byte_end":149354,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":8183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":8183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":160647,"byte_end":160653,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":8183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":998},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":998},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":998},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14071277,"byte_end":14071283,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":8239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14071752,"byte_end":14071758,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":8239},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14072074,"byte_end":14072080,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":8239},"to":{"krate":0,"index":809}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14072799,"byte_end":14072807,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":8241},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/park.rs","byte_start":14072876,"byte_end":14072881,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":8243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":8280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":8285},"to":{"krate":0,"index":1229}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":8302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":8302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14080104,"byte_end":14080109,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":8377},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14080140,"byte_end":14080145,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":8377},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14080176,"byte_end":14080182,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":8372},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14080213,"byte_end":14080219,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":8372},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14081078,"byte_end":14081083,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":8365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14087617,"byte_end":14087622,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":8368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14092790,"byte_end":14092795,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":8368},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14092891,"byte_end":14092896,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":8365},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14093055,"byte_end":14093060,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":8377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14093248,"byte_end":14093254,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":8372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/queue.rs","byte_start":14096759,"byte_end":14096765,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":8372},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/atomic_cell.rs","byte_start":14100991,"byte_end":14101001,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":8458},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/atomic_cell.rs","byte_start":14101038,"byte_end":14101048,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":8458},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/atomic_cell.rs","byte_start":14101064,"byte_end":14101074,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":8458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/atomic_cell.rs","byte_start":14101861,"byte_end":14101871,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":8458},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/idle.rs","byte_start":14102677,"byte_end":14102681,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":8498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/idle.rs","byte_start":14106554,"byte_end":14106559,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":8721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/idle.rs","byte_start":14108037,"byte_end":14108042,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":8721},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/idle.rs","byte_start":14108215,"byte_end":14108220,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":8721},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14113984,"byte_end":14113989,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":8738},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14117619,"byte_end":14117625,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":8614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14118400,"byte_end":14118407,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":8611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14122673,"byte_end":14122677,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":8593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14127489,"byte_end":14127495,"line_start":598,"line_end":598,"column_start":6,"column_end":12},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":8589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14127935,"byte_end":14127938,"line_start":614,"line_end":614,"column_start":25,"column_end":28},"kind":{"Impl":{"id":441}},"from":{"krate":5,"index":5953},"to":{"krate":0,"index":7730}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/worker.rs","byte_start":14130509,"byte_end":14130515,"line_start":692,"line_end":692,"column_start":6,"column_end":12},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":8602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14098817,"byte_end":14098827,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":8699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14099982,"byte_end":14099992,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":8699},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14100131,"byte_end":14100141,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":8699},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14100244,"byte_end":14100251,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":8749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/thread_pool/mod.rs","byte_start":14100672,"byte_end":14100679,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":8749},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":8756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":173705,"byte_end":173711,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":8778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":1139},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":8802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":8802},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":8778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14138362,"byte_end":14138365,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":455}},"from":{"krate":5,"index":7050},"to":{"krate":0,"index":8861}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14139087,"byte_end":14139095,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":9041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14139185,"byte_end":14139193,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":9041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14141346,"byte_end":14141353,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":8886},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":14141461,"byte_end":14141468,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":8886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14147540,"byte_end":14147549,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":8979},"to":{"krate":0,"index":8871}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14147663,"byte_end":14147672,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8979},"to":{"krate":0,"index":8861}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148060,"byte_end":14148071,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":9047},"to":{"krate":0,"index":8871}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14148357,"byte_end":14148367,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":9052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14152163,"byte_end":14152173,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":9006},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14154522,"byte_end":14154528,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":9060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14154813,"byte_end":14154819,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":9060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14161008,"byte_end":14161014,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":9064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":14162872,"byte_end":14162878,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":9064},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":14197870,"byte_end":14197879,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":9968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":14198025,"byte_end":14198034,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":9968},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":14198073,"byte_end":14198082,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":9968},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":14199033,"byte_end":14199042,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":9979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":14199188,"byte_end":14199197,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":9979},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":14199236,"byte_end":14199245,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":9979},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":14200168,"byte_end":14200173,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":14727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":14200353,"byte_end":14200358,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":14727},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201903,"byte_end":14201917,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":9285},"to":{"krate":0,"index":9212}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14201936,"byte_end":14201943,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":14689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14202227,"byte_end":14202234,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":14689},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14203210,"byte_end":14203216,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":479}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":9212}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14203271,"byte_end":14203277,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":480}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":9285}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14203666,"byte_end":14203669,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":481}},"from":{"krate":5,"index":7050},"to":{"krate":0,"index":9212}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14203715,"byte_end":14203718,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":482}},"from":{"krate":5,"index":7050},"to":{"krate":0,"index":9285}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14204101,"byte_end":14204104,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":483}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":9212}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14204152,"byte_end":14204155,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":484}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":9285}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14204670,"byte_end":14204676,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":485}},"from":{"krate":2,"index":43488},"to":{"krate":0,"index":9212}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14204765,"byte_end":14204771,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":486}},"from":{"krate":2,"index":43488},"to":{"krate":0,"index":9285}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14205849,"byte_end":14205854,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":487}},"from":{"krate":21,"index":483},"to":{"krate":0,"index":9212}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14205902,"byte_end":14205907,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":488}},"from":{"krate":21,"index":483},"to":{"krate":0,"index":9285}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14206307,"byte_end":14206315,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":489}},"from":{"krate":21,"index":737},"to":{"krate":0,"index":9212}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":14206363,"byte_end":14206371,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":490}},"from":{"krate":21,"index":737},"to":{"krate":0,"index":9285}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207642,"byte_end":14207647,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":9990},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207678,"byte_end":14207683,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":9990},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14207714,"byte_end":14207719,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":9990},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":14208262,"byte_end":14208267,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":9990},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":14208881,"byte_end":14208887,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":14633},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":14209105,"byte_end":14209111,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":14633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":14209230,"byte_end":14209236,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":14633},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":14210322,"byte_end":14210331,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":14588},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":14210552,"byte_end":14210561,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":14588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":14210683,"byte_end":14210692,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":14588},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":14211764,"byte_end":14211774,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":14539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":14211970,"byte_end":14211980,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":14539},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":14212879,"byte_end":14212883,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":14499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":14213043,"byte_end":14213047,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":14499},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14213990,"byte_end":14213994,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":9997},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":14214656,"byte_end":14214660,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":9997},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":14215406,"byte_end":14215409,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":14445},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":14215598,"byte_end":14215601,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":14445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":14215722,"byte_end":14215725,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":14445},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":14216570,"byte_end":14216575,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":14396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":14216829,"byte_end":14216834,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":14396},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":14218346,"byte_end":14218350,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":10003},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":14218384,"byte_end":14218388,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":10003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":14218529,"byte_end":14218533,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":10003},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219029,"byte_end":14219033,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":10011},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":14219660,"byte_end":14219664,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":10011},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220211,"byte_end":14220218,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":10017},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220249,"byte_end":14220256,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":10017},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220287,"byte_end":14220294,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":10017},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":14220987,"byte_end":14220994,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":10017},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14226659,"byte_end":14226668,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":10024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14233669,"byte_end":14233678,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":10024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":14235217,"byte_end":14235226,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":10024},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":14236442,"byte_end":14236446,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":14359},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":14236656,"byte_end":14236660,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":14359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":14236793,"byte_end":14236797,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":14359},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":14238023,"byte_end":14238032,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":14314},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":14238253,"byte_end":14238262,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":14314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":14238447,"byte_end":14238456,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":14314},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":14239805,"byte_end":14239812,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":10036},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":14239846,"byte_end":14239853,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":10036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":14240060,"byte_end":14240067,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":10036},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":14240677,"byte_end":14240681,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":14277},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":14240891,"byte_end":14240895,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":14277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":14241028,"byte_end":14241032,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":14277},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":14242551,"byte_end":14242560,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":14228},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":14242820,"byte_end":14242829,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":14228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":14243022,"byte_end":14243031,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":14228},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":14274088,"byte_end":14274095,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":14189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":14274450,"byte_end":14274457,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":14189},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14173112,"byte_end":14173118,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":23,"index":96},"to":{"krate":0,"index":9931}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":14197100,"byte_end":14197102,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":9966},"to":{"krate":0,"index":9931}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14292933,"byte_end":14292940,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":11920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/barrier.rs","byte_start":14296220,"byte_end":14296237,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":11932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14306804,"byte_end":14306810,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":10215},"to":{"krate":2,"index":2904}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14306937,"byte_end":14306943,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":10215},"to":{"krate":2,"index":2904}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307104,"byte_end":14307108,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":10209},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14307178,"byte_end":14307182,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":10209},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14309956,"byte_end":14309962,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14309999,"byte_end":14310005,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310043,"byte_end":14310051,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":10178},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310088,"byte_end":14310096,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":10178},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14310112,"byte_end":14310118,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":10175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14315754,"byte_end":14315758,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":10189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14316150,"byte_end":14316156,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14316336,"byte_end":14316342,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14316496,"byte_end":14316504,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":10178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14321369,"byte_end":14321377,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":10178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14324195,"byte_end":14324200,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":10275},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14327552,"byte_end":14327560,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":10178},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14328010,"byte_end":14328018,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":10178},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14329202,"byte_end":14329206,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":10209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14330048,"byte_end":14330052,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":10209},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14330782,"byte_end":14330790,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":10178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14332102,"byte_end":14332106,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":10209},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14332830,"byte_end":14332834,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":10209},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14333632,"byte_end":14333638,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":10200},"to":{"krate":0,"index":1166}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334053,"byte_end":14334059,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":10175},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334203,"byte_end":14334211,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":10178},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334346,"byte_end":14334355,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":10205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334528,"byte_end":14334537,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":10205},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14334828,"byte_end":14334837,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":11946},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14335110,"byte_end":14335119,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":11946},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14335146,"byte_end":14335158,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":11958},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/broadcast.rs","byte_start":14335500,"byte_end":14335512,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":11958},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":14341821,"byte_end":14341826,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":10386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":14351808,"byte_end":14351814,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":10400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":14352296,"byte_end":14352302,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":10400},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14352940,"byte_end":14352946,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":10474},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353078,"byte_end":14353084,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":10474},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14353491,"byte_end":14353499,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":10483},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14355271,"byte_end":14355279,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":10483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357707,"byte_end":14357715,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":10483},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357775,"byte_end":14357783,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":10483},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":14357971,"byte_end":14357977,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":10474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14369367,"byte_end":14369369,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":10592},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14369770,"byte_end":14369772,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":10601},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14370079,"byte_end":14370088,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":12009},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14370350,"byte_end":14370362,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":12016},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14372147,"byte_end":14372151,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":10625},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14372784,"byte_end":14372792,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":10637},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14373058,"byte_end":14373062,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":10625},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14373111,"byte_end":14373115,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":10625},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14373594,"byte_end":14373596,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":10592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14374295,"byte_end":14374297,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":10592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14374445,"byte_end":14374447,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":10592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14374625,"byte_end":14374627,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":10592},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14375027,"byte_end":14375029,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":10592},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14375556,"byte_end":14375558,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":10601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14378678,"byte_end":14378680,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":10601},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14379116,"byte_end":14379120,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":10625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14379584,"byte_end":14379588,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":10625},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14380137,"byte_end":14380149,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":11996},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":14381809,"byte_end":14381820,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":638},"to":{"krate":0,"index":10615}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":14384564,"byte_end":14384566,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":10786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":14390270,"byte_end":14390272,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":10786},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":14390549,"byte_end":14390551,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":10790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":14393950,"byte_end":14393952,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":10790},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394626,"byte_end":14394641,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":10840},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14394782,"byte_end":14394797,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":10840},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14395255,"byte_end":14395272,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":10849},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14396250,"byte_end":14396267,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":10849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398739,"byte_end":14398756,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":10849},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":14398922,"byte_end":14398937,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":10840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400047,"byte_end":14400056,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":12009},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400216,"byte_end":14400225,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":12009},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400711,"byte_end":14400723,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":12016},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14400756,"byte_end":14400768,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":12016},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401108,"byte_end":14401120,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":12016},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401349,"byte_end":14401358,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":12027},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401488,"byte_end":14401497,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":12027},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14401983,"byte_end":14401995,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":12032},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402301,"byte_end":14402313,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":12032},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402470,"byte_end":14402481,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":12042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402580,"byte_end":14402591,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":12042},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14402721,"byte_end":14402732,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":12042},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14403236,"byte_end":14403252,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":12052},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":14403289,"byte_end":14403305,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":12052},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409604,"byte_end":14409609,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":10944},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409663,"byte_end":14409668,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":10944},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409722,"byte_end":14409732,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":10948},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14409797,"byte_end":14409812,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":10952},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14410099,"byte_end":14410111,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":12063},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14410248,"byte_end":14410260,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":12063},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14411068,"byte_end":14411073,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":10944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415646,"byte_end":14415651,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":10944},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415735,"byte_end":14415740,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":10944},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14415864,"byte_end":14415869,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":10944},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416264,"byte_end":14416274,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":10948},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416375,"byte_end":14416385,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":10948},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416532,"byte_end":14416542,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":10948},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416699,"byte_end":14416709,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":10948},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14416875,"byte_end":14416885,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":10948},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417063,"byte_end":14417078,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":10952},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417175,"byte_end":14417190,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":10952},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417333,"byte_end":14417348,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":10952},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417501,"byte_end":14417516,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":10952},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mutex.rs","byte_start":14417678,"byte_end":14417693,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":10952},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14421657,"byte_end":14421665,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":12080},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14421698,"byte_end":14421706,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":12080},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14421969,"byte_end":14421975,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":12068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14425983,"byte_end":14425989,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":12068},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14427727,"byte_end":14427735,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":12080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14428245,"byte_end":14428253,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":12080},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14433083,"byte_end":14433091,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":12080},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/notify.rs","byte_start":14436049,"byte_end":14436055,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":12073},"to":{"krate":0,"index":1166}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14437931,"byte_end":14437940,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":12109},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14438102,"byte_end":14438111,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":12109},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14438180,"byte_end":14438192,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":12121},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14438491,"byte_end":14438503,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":12121},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14440314,"byte_end":14440320,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":12097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446621,"byte_end":14446627,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":12097},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14446766,"byte_end":14446774,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":12103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14451165,"byte_end":14451173,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":12103},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14451320,"byte_end":14451328,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":12103},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14451791,"byte_end":14451796,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":11174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14456168,"byte_end":14456173,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":11174},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14456210,"byte_end":14456215,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":11174},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14456240,"byte_end":14456245,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":11174},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14456614,"byte_end":14456619,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":11174},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14457014,"byte_end":14457019,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":12134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":14458732,"byte_end":14458737,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":12134},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14462215,"byte_end":14462224,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":11321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14472145,"byte_end":14472154,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":11321},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14472355,"byte_end":14472361,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":11333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14473227,"byte_end":14473234,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":11327},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14473912,"byte_end":14473919,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":11327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14474718,"byte_end":14474725,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":11327},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476367,"byte_end":14476374,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":11327},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476421,"byte_end":14476433,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":12147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476526,"byte_end":14476538,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":12147},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476682,"byte_end":14476694,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":12147},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14476741,"byte_end":14476756,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":12140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14477378,"byte_end":14477393,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":12140},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14477679,"byte_end":14477694,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":12140},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/batch_semaphore.rs","byte_start":14477787,"byte_end":14477793,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":11333},"to":{"krate":0,"index":1166}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14483062,"byte_end":14483071,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":11453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499265,"byte_end":14499274,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":11453},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499353,"byte_end":14499362,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":11453},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499740,"byte_end":14499749,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":11453},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499774,"byte_end":14499783,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":11453},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14499821,"byte_end":14499827,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":12152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14506233,"byte_end":14506239,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":12152},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14506312,"byte_end":14506318,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":12152},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14506740,"byte_end":14506752,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":12157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14506932,"byte_end":14506944,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":12157},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14507088,"byte_end":14507100,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":12157},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14507147,"byte_end":14507162,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":12162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14507692,"byte_end":14507707,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":12162},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14507993,"byte_end":14508008,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":12162},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14508046,"byte_end":14508052,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":12169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14513539,"byte_end":14513547,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":12175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14517210,"byte_end":14517218,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":12175},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":14517571,"byte_end":14517582,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":12193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14520311,"byte_end":14520320,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":12201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522415,"byte_end":14522430,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":12205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522675,"byte_end":14522695,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":12212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14522949,"byte_end":14522964,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":12205},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore.rs","byte_start":14523072,"byte_end":14523092,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":12212},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14526446,"byte_end":14526461,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":11627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14529879,"byte_end":14529894,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":11627},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530074,"byte_end":14530089,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":11627},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530265,"byte_end":14530280,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":11627},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14530744,"byte_end":14530760,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":11654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14534354,"byte_end":14534370,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":11654},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14534550,"byte_end":14534566,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":11654},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14534742,"byte_end":14534758,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":11654},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14535834,"byte_end":14535840,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":12222},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14535894,"byte_end":14535900,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":12222},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536134,"byte_end":14536149,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":11627},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536207,"byte_end":14536222,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":11627},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536287,"byte_end":14536303,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":11654},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536616,"byte_end":14536632,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":11654},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14536690,"byte_end":14536696,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":12222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14539884,"byte_end":14539899,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":11627},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14540030,"byte_end":14540046,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":11654},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14540180,"byte_end":14540196,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":11654},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14540310,"byte_end":14540316,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":12222},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/rwlock.rs","byte_start":14540408,"byte_end":14540414,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":12222},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14546689,"byte_end":14546700,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":11760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14552627,"byte_end":14552638,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":11760},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14552724,"byte_end":14552735,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":11760},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14552868,"byte_end":14552879,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":11760},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14552904,"byte_end":14552915,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":11760},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":14553011,"byte_end":14553016,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":734}},"from":{"krate":2,"index":12877},"to":{"krate":0,"index":11783}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556557,"byte_end":14556566,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":12250},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14556746,"byte_end":14556755,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":12250},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14558914,"byte_end":14558922,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":12229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14560194,"byte_end":14560202,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":12229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561568,"byte_end":14561576,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":12229},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14561835,"byte_end":14561843,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":12229},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14562146,"byte_end":14562154,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":12229},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14562268,"byte_end":14562274,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":12236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14563809,"byte_end":14563815,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":12236},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564054,"byte_end":14564057,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":12242},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564198,"byte_end":14564204,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":12256},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564306,"byte_end":14564313,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":12265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564536,"byte_end":14564543,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":12265},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564660,"byte_end":14564667,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":12265},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564697,"byte_end":14564704,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":12265},"to":{"krate":2,"index":9549}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/watch.rs","byte_start":14564851,"byte_end":14564858,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":12265},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":14583677,"byte_end":14583685,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":12339},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14590817,"byte_end":14590825,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":12545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14598667,"byte_end":14598675,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":12545},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14598814,"byte_end":14598822,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":12545},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14599787,"byte_end":14599795,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":12545},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14599876,"byte_end":14599884,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":12545},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14600751,"byte_end":14600759,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":14142},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14601644,"byte_end":14601650,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":12402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":14602213,"byte_end":14602216,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":759}},"from":{"krate":5,"index":5953},"to":{"krate":0,"index":7730}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14605785,"byte_end":14605793,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":12495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607569,"byte_end":14607577,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":12495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14607785,"byte_end":14607793,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":12495},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14608114,"byte_end":14608129,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":14082},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14608430,"byte_end":14608435,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":12523},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609053,"byte_end":14609054,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":12536},"to":{"krate":0,"index":12534}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609239,"byte_end":14609250,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":12557},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609394,"byte_end":14609405,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":12557},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":14609552,"byte_end":14609563,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":12557},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/clock.rs","byte_start":14614148,"byte_end":14614153,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":13335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14624751,"byte_end":14624761,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":13340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14642755,"byte_end":14642765,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":13340},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14642793,"byte_end":14642803,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":13340},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14642940,"byte_end":14642950,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":13340},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14643332,"byte_end":14643337,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":13365},"to":{"krate":0,"index":13272}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645464,"byte_end":14645469,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":13365},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645599,"byte_end":14645602,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":13359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":14645689,"byte_end":14645696,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":13351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14648234,"byte_end":14648239,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":13382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":14649217,"byte_end":14649222,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":13382},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":14662892,"byte_end":14662903,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":13386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":14664881,"byte_end":14664899,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":13390},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":14665495,"byte_end":14665513,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":13390},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":14669751,"byte_end":14669756,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":13394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":14676424,"byte_end":14676429,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":13394},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":14676637,"byte_end":14676642,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":13394},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":14676667,"byte_end":14676672,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":13394},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":14677049,"byte_end":14677055,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":13419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":14677718,"byte_end":14677724,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":13419},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":14678169,"byte_end":14678181,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":13423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":14679091,"byte_end":14679103,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":13423},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":14679387,"byte_end":14679392,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":13427},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":14679483,"byte_end":14679488,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":13427},"to":{"krate":0,"index":13272}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14654187,"byte_end":14654193,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":13431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14657890,"byte_end":14657896,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":13431},"to":{"krate":0,"index":809}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14660469,"byte_end":14660475,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":13431},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14660591,"byte_end":14660596,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":13000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":14662213,"byte_end":14662218,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":13000},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14683810,"byte_end":14683815,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":13441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14685182,"byte_end":14685187,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":13441},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":14685214,"byte_end":14685219,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":13441},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14685991,"byte_end":14685998,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":13461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689772,"byte_end":14689779,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":13461},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14689908,"byte_end":14689915,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":803}},"from":{"krate":1,"index":11798},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690030,"byte_end":14690037,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":13461},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690202,"byte_end":14690209,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":13461},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690314,"byte_end":14690321,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":13461},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690462,"byte_end":14690469,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":13461},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690630,"byte_end":14690637,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":13461},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":14690744,"byte_end":14690751,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":13461},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14694633,"byte_end":14694641,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":13480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":14695936,"byte_end":14695944,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":13480},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699276,"byte_end":14699283,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":13485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699412,"byte_end":14699419,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":14051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14699957,"byte_end":14699964,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":14051},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14700542,"byte_end":14700549,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":13485},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14700693,"byte_end":14700700,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":13485},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":14700737,"byte_end":14700742,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":817}},"from":{"krate":1,"index":3804},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14718882,"byte_end":14718890,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":14003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":14719705,"byte_end":14719713,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":14003},"to":{"krate":23,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":14710646,"byte_end":14710651,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":13239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":14715403,"byte_end":14715408,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":13239},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":14716524,"byte_end":14716531,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2982},"to":{"krate":0,"index":13272}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":14702467,"byte_end":14702472,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":13551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":14708180,"byte_end":14708184,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":13565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":14720546,"byte_end":14720550,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":13837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":14722024,"byte_end":14722028,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":13837},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/addr.rs","byte_start":14729247,"byte_end":14729254,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":13843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/entry.rs","byte_start":14731889,"byte_end":14731896,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2982},"to":{"krate":0,"index":13632}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/generation.rs","byte_start":14732283,"byte_end":14732293,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":13858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":14733432,"byte_end":14733437,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":13677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":14733779,"byte_end":14733785,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":13679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":14737737,"byte_end":14737742,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":830}},"from":{"krate":0,"index":13677},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":14738048,"byte_end":14738054,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":13679},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":14740197,"byte_end":14740202,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":13733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":14741881,"byte_end":14741886,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":13733},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/slot.rs","byte_start":14742263,"byte_end":14742267,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":13764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":14743238,"byte_end":14743251,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":13797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":14744079,"byte_end":14744092,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":13797},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":14723626,"byte_end":14723630,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":13820},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":14723667,"byte_end":14723671,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":13820},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":14723694,"byte_end":14723698,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":13820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":14725213,"byte_end":14725217,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":13820},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186296,"byte_end":186306,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186706,"byte_end":186716,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186938,"byte_end":186942,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":13882},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":13895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199224,"byte_end":199228,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":1229}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199231,"byte_end":199235,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":1229}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":13904},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14744904,"byte_end":14744911,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":13934},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14744948,"byte_end":14744955,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":13934},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14744993,"byte_end":14745002,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":13938},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14745188,"byte_end":14745195,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":13934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14745829,"byte_end":14745838,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":13938},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14745970,"byte_end":14745979,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":13938},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/try_lock.rs","byte_start":14746101,"byte_end":14746110,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":13938},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":13969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":13969},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":13969},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":13978},"to":{"krate":4294967295,"index":4294967295}}]}