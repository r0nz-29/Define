{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1","program":"/home/raunit/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=0751082a590380d6","-C","extra-filename=-0751082a590380d6","--out-dir","/mnt/data-hdd/temp-clones/define/target/rls/debug/deps","-L","dependency=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps","--extern","bytes=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libbytes-c96089039741c98e.rmeta","--extern","futures_core=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libfutures_core-65fff6f399cd7f53.rmeta","--extern","futures_sink=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libfutures_sink-ece4ed231bd496be.rmeta","--extern","log=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/liblog-c78037e96bf7a644.rmeta","--extern","pin_project_lite=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libpin_project_lite-16d35f5901c615aa.rmeta","--extern","tokio=/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libtokio-5571acaba5217e9a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/raunit/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/data-hdd/temp-clones/define/target/rls/debug/deps/libtokio_util-0751082a590380d6.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[13775457586336304203,0]},"crate_root":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src","external_crates":[{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","num":20,"id":{"name":"bytes","disambiguator":[17681988112069779642,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":21,"id":{"name":"tokio","disambiguator":[17550634516355149373,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[15337890374147599949,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":23,"id":{"name":"lazy_static","disambiguator":[2335416628160260444,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","num":24,"id":{"name":"futures_core","disambiguator":[2659877968316655252,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":25,"id":{"name":"mio","disambiguator":[17694678366010686396,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":26,"id":{"name":"net2","disambiguator":[13599134683448532048,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":27,"id":{"name":"libc","disambiguator":[16461978545476624764,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":28,"id":{"name":"cfg_if","disambiguator":[14009363344889244906,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":29,"id":{"name":"iovec","disambiguator":[6455986803578610869,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":30,"id":{"name":"slab","disambiguator":[4028794699268519618,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","num":31,"id":{"name":"log","disambiguator":[16138615073828880648,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":32,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":33,"id":{"name":"mio_uds","disambiguator":[8138063546309499524,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":34,"id":{"name":"fnv","disambiguator":[5726890394453190873,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":35,"id":{"name":"tokio_macros","disambiguator":[7573113604473485743,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":36,"id":{"name":"memchr","disambiguator":[11363686017877364425,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":37,"id":{"name":"num_cpus","disambiguator":[10795413462275089228,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":38,"id":{"name":"signal_hook_registry","disambiguator":[12261261931747632145,0]}},{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","num":39,"id":{"name":"futures_sink","disambiguator":[17271045042861320725,0]}}],"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805122,"byte_end":12805132,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805171,"byte_end":12805178,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805217,"byte_end":12805224,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":979},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805262,"byte_end":12805268,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805270,"byte_end":12805281,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805329,"byte_end":12805339,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805388,"byte_end":12805399,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":724},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805461,"byte_end":12805481,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805483,"byte_end":12805508,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805557,"byte_end":12805567,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805569,"byte_end":12805584,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":7}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":208,"byte_end":251,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":409,"byte_end":446,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":447,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":451,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":509,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":574,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":650,"byte_end":653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":654,"byte_end":690,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":673}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/cfg.rs","byte_start":892,"byte_end":917,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12804674,"byte_end":12804721,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12804722,"byte_end":12804725,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12804726,"byte_end":12804794,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12804795,"byte_end":12804870,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12804871,"byte_end":12804919,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12804920,"byte_end":12804923,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12804924,"byte_end":12804963,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12804964,"byte_end":12805005,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805006,"byte_end":12805043,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805044,"byte_end":12805076,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806861,"byte_end":12806871,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805713,"byte_end":12805798,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805799,"byte_end":12805802,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805803,"byte_end":12805841,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805842,"byte_end":12805880,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805881,"byte_end":12805884,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805885,"byte_end":12805898,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805899,"byte_end":12805902,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805903,"byte_end":12805984,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805985,"byte_end":12805988,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12805989,"byte_end":12806028,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806029,"byte_end":12806062,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806063,"byte_end":12806092,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806093,"byte_end":12806096,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806097,"byte_end":12806104,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806105,"byte_end":12806123,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806124,"byte_end":12806154,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806155,"byte_end":12806179,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806180,"byte_end":12806187,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806188,"byte_end":12806217,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806218,"byte_end":12806270,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806271,"byte_end":12806274,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806275,"byte_end":12806293,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806294,"byte_end":12806311,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806312,"byte_end":12806392,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806393,"byte_end":12806427,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806428,"byte_end":12806481,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806482,"byte_end":12806493,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806494,"byte_end":12806501,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806502,"byte_end":12806507,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(core_threads = 1)]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806508,"byte_end":12806546,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806547,"byte_end":12806600,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806601,"byte_end":12806659,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806660,"byte_end":12806739,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806740,"byte_end":12806752,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806753,"byte_end":12806760,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806761,"byte_end":12806768,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806769,"byte_end":12806772,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806973,"byte_end":12806976,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806900,"byte_end":12806961,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808288,"byte_end":12808295,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12807691,"byte_end":12807726,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12807727,"byte_end":12807730,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12807731,"byte_end":12807800,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12807801,"byte_end":12807880,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12807881,"byte_end":12807953,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12807954,"byte_end":12807978,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12807979,"byte_end":12807982,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12807983,"byte_end":12808051,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808052,"byte_end":12808129,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808130,"byte_end":12808191,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808192,"byte_end":12808195,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808196,"byte_end":12808232,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808233,"byte_end":12808277,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808343,"byte_end":12808347,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808302,"byte_end":12808333,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809113,"byte_end":12809118,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808354,"byte_end":12808406,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808411,"byte_end":12808414,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808419,"byte_end":12808488,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808493,"byte_end":12808563,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808568,"byte_end":12808614,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808619,"byte_end":12808622,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808627,"byte_end":12808703,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808708,"byte_end":12808783,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808788,"byte_end":12808863,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808868,"byte_end":12808908,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808913,"byte_end":12808916,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12808921,"byte_end":12808995,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809000,"byte_end":12809046,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809051,"byte_end":12809054,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809059,"byte_end":12809103,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812054,"byte_end":12812060,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809142,"byte_end":12809207,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809212,"byte_end":12809215,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809220,"byte_end":12809294,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809299,"byte_end":12809371,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809376,"byte_end":12809449,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809454,"byte_end":12809497,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809502,"byte_end":12809505,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809510,"byte_end":12809583,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809588,"byte_end":12809651,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809656,"byte_end":12809731,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809736,"byte_end":12809811,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809816,"byte_end":12809839,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809844,"byte_end":12809847,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809852,"byte_end":12809924,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12809929,"byte_end":12810003,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810008,"byte_end":12810078,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810083,"byte_end":12810086,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810091,"byte_end":12810159,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810164,"byte_end":12810235,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810240,"byte_end":12810320,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810325,"byte_end":12810337,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810342,"byte_end":12810345,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810350,"byte_end":12810420,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810425,"byte_end":12810500,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810505,"byte_end":12810542,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810547,"byte_end":12810550,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810555,"byte_end":12810591,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810596,"byte_end":12810640,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810645,"byte_end":12810648,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810653,"byte_end":12810676,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810681,"byte_end":12810684,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810689,"byte_end":12810763,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810768,"byte_end":12810842,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810847,"byte_end":12810900,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810905,"byte_end":12810908,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810913,"byte_end":12810984,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12810989,"byte_end":12811059,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811064,"byte_end":12811080,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811085,"byte_end":12811088,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811093,"byte_end":12811106,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811111,"byte_end":12811129,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811134,"byte_end":12811139,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811144,"byte_end":12811170,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811175,"byte_end":12811212,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811217,"byte_end":12811222,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811227,"byte_end":12811248,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811253,"byte_end":12811258,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811263,"byte_end":12811293,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811298,"byte_end":12811312,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811317,"byte_end":12811348,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811353,"byte_end":12811386,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811391,"byte_end":12811394,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811399,"byte_end":12811492,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811497,"byte_end":12811515,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811520,"byte_end":12811523,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811528,"byte_end":12811600,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811605,"byte_end":12811665,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811670,"byte_end":12811722,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811727,"byte_end":12811789,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811794,"byte_end":12811861,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811866,"byte_end":12811869,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811874,"byte_end":12811902,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811907,"byte_end":12811916,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811921,"byte_end":12811926,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811931,"byte_end":12811938,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811943,"byte_end":12811946,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12811951,"byte_end":12812020,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812025,"byte_end":12812046,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812919,"byte_end":12812929,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812141,"byte_end":12812213,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812218,"byte_end":12812267,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812272,"byte_end":12812275,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812280,"byte_end":12812348,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812353,"byte_end":12812420,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812425,"byte_end":12812493,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812498,"byte_end":12812546,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812551,"byte_end":12812554,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812559,"byte_end":12812627,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812632,"byte_end":12812707,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812712,"byte_end":12812787,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812792,"byte_end":12812864,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12812869,"byte_end":12812911,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814538,"byte_end":12814544,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813347,"byte_end":12813427,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813432,"byte_end":12813508,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813513,"byte_end":12813516,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813521,"byte_end":12813596,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813601,"byte_end":12813671,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813676,"byte_end":12813747,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813752,"byte_end":12813824,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813829,"byte_end":12813887,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813892,"byte_end":12813895,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813900,"byte_end":12813969,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12813974,"byte_end":12814049,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814054,"byte_end":12814130,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814135,"byte_end":12814157,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814162,"byte_end":12814165,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814170,"byte_end":12814243,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814248,"byte_end":12814321,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814326,"byte_end":12814402,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814407,"byte_end":12814410,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814415,"byte_end":12814452,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814457,"byte_end":12814489,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":12814494,"byte_end":12814530,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12814878,"byte_end":12814885,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12814723,"byte_end":12814795,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12814796,"byte_end":12814816,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12814817,"byte_end":12814820,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12814821,"byte_end":12814867,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815150,"byte_end":12815155,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12814898,"byte_end":12814930,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12814935,"byte_end":12814938,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12814943,"byte_end":12815020,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815025,"byte_end":12815081,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815086,"byte_end":12815089,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815094,"byte_end":12815140,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815506,"byte_end":12815512,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815179,"byte_end":12815224,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815229,"byte_end":12815232,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815237,"byte_end":12815311,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815316,"byte_end":12815396,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815401,"byte_end":12815439,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815444,"byte_end":12815447,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":12815452,"byte_end":12815498,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12816661,"byte_end":12816667,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":982}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817103,"byte_end":12817105,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817116,"byte_end":12817121,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818911,"byte_end":12818914,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817569,"byte_end":12817649,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817654,"byte_end":12817735,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817740,"byte_end":12817743,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817748,"byte_end":12817823,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817828,"byte_end":12817898,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817903,"byte_end":12817972,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817977,"byte_end":12818049,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818054,"byte_end":12818112,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818117,"byte_end":12818120,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818125,"byte_end":12818196,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818201,"byte_end":12818278,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818283,"byte_end":12818359,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818364,"byte_end":12818386,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818391,"byte_end":12818394,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818399,"byte_end":12818472,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818477,"byte_end":12818550,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818555,"byte_end":12818631,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818636,"byte_end":12818639,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818644,"byte_end":12818681,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818686,"byte_end":12818718,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818723,"byte_end":12818760,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818765,"byte_end":12818803,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12818808,"byte_end":12818899,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820462,"byte_end":12820475,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819066,"byte_end":12819146,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819151,"byte_end":12819232,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819237,"byte_end":12819286,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819291,"byte_end":12819294,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819299,"byte_end":12819374,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819379,"byte_end":12819449,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819454,"byte_end":12819523,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819528,"byte_end":12819600,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819605,"byte_end":12819663,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819668,"byte_end":12819671,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819676,"byte_end":12819747,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819752,"byte_end":12819829,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819834,"byte_end":12819910,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819915,"byte_end":12819937,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819942,"byte_end":12819945,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12819950,"byte_end":12820023,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820028,"byte_end":12820101,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820106,"byte_end":12820182,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820187,"byte_end":12820190,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820195,"byte_end":12820232,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820237,"byte_end":12820269,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820274,"byte_end":12820311,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820316,"byte_end":12820354,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820359,"byte_end":12820450,"line_start":123,"line_end":123,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822344,"byte_end":12822354,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820766,"byte_end":12820846,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820851,"byte_end":12820932,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820937,"byte_end":12820940,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820945,"byte_end":12821020,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821025,"byte_end":12821095,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821100,"byte_end":12821171,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821176,"byte_end":12821248,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821253,"byte_end":12821311,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821316,"byte_end":12821319,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821324,"byte_end":12821395,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821400,"byte_end":12821477,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821482,"byte_end":12821558,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821563,"byte_end":12821585,"line_start":147,"line_end":147,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821590,"byte_end":12821593,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821598,"byte_end":12821677,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821682,"byte_end":12821759,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821764,"byte_end":12821767,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821772,"byte_end":12821845,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821850,"byte_end":12821923,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12821928,"byte_end":12822004,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822009,"byte_end":12822012,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822017,"byte_end":12822054,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822059,"byte_end":12822091,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822096,"byte_end":12822134,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822139,"byte_end":12822177,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822182,"byte_end":12822236,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822241,"byte_end":12822332,"line_start":161,"line_end":161,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823043,"byte_end":12823050,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822760,"byte_end":12822823,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822828,"byte_end":12822841,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822846,"byte_end":12822849,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822854,"byte_end":12822929,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12822934,"byte_end":12823004,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823009,"byte_end":12823031,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823411,"byte_end":12823418,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823120,"byte_end":12823191,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823196,"byte_end":12823209,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823214,"byte_end":12823217,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823222,"byte_end":12823297,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823302,"byte_end":12823372,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823377,"byte_end":12823399,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823751,"byte_end":12823756,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823500,"byte_end":12823558,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823563,"byte_end":12823576,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823581,"byte_end":12823584,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823589,"byte_end":12823663,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823668,"byte_end":12823739,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824088,"byte_end":12824097,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823829,"byte_end":12823895,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823900,"byte_end":12823913,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823918,"byte_end":12823921,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12823926,"byte_end":12824000,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824005,"byte_end":12824076,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824237,"byte_end":12824248,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824182,"byte_end":12824225,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824575,"byte_end":12824585,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824310,"byte_end":12824373,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824378,"byte_end":12824381,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824386,"byte_end":12824461,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824466,"byte_end":12824536,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824541,"byte_end":12824563,"line_start":224,"line_end":224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824980,"byte_end":12824990,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824658,"byte_end":12824732,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824737,"byte_end":12824778,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824783,"byte_end":12824786,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824791,"byte_end":12824866,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824871,"byte_end":12824941,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12824946,"byte_end":12824968,"line_start":234,"line_end":234,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829352,"byte_end":12829363,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829077,"byte_end":12829148,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829149,"byte_end":12829221,"line_start":391,"line_end":391,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829222,"byte_end":12829282,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829283,"byte_end":12829286,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829287,"byte_end":12829323,"line_start":394,"line_end":394,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829449,"byte_end":12829451,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829376,"byte_end":12829440,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":704},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829483,"byte_end":12829488,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829461,"byte_end":12829474,"line_start":400,"line_end":400,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":705},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829553,"byte_end":12829561,"line_start":404,"line_end":404,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829498,"byte_end":12829544,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829648,"byte_end":12829657,"line_start":407,"line_end":407,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829578,"byte_end":12829639,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829890,"byte_end":12829893,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829838,"byte_end":12829878,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12830622,"byte_end":12830632,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":896}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831090,"byte_end":12831093,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831022,"byte_end":12831078,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831410,"byte_end":12831423,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831294,"byte_end":12831376,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831381,"byte_end":12831398,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832066,"byte_end":12832073,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831779,"byte_end":12831842,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831847,"byte_end":12831864,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831869,"byte_end":12831872,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831877,"byte_end":12831952,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831957,"byte_end":12832027,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832032,"byte_end":12832054,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832424,"byte_end":12832431,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832129,"byte_end":12832200,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832205,"byte_end":12832222,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832227,"byte_end":12832230,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832235,"byte_end":12832310,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832315,"byte_end":12832385,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832390,"byte_end":12832412,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832768,"byte_end":12832778,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832499,"byte_end":12832566,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832571,"byte_end":12832574,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832579,"byte_end":12832654,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832659,"byte_end":12832729,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832734,"byte_end":12832756,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832893,"byte_end":12832900,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832831,"byte_end":12832881,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12833029,"byte_end":12833040,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12832959,"byte_end":12833017,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12833166,"byte_end":12833177,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12833111,"byte_end":12833154,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839093,"byte_end":12839104,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":810}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839528,"byte_end":12839531,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839459,"byte_end":12839516,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840056,"byte_end":12840063,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839768,"byte_end":12839831,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839836,"byte_end":12839854,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839859,"byte_end":12839862,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839867,"byte_end":12839942,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839947,"byte_end":12840017,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840022,"byte_end":12840044,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840415,"byte_end":12840422,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840119,"byte_end":12840190,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840195,"byte_end":12840213,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840218,"byte_end":12840221,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840226,"byte_end":12840301,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840306,"byte_end":12840376,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840381,"byte_end":12840403,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840760,"byte_end":12840770,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840490,"byte_end":12840558,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840563,"byte_end":12840566,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840571,"byte_end":12840646,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840651,"byte_end":12840721,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840726,"byte_end":12840748,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840885,"byte_end":12840892,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840823,"byte_end":12840873,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12841021,"byte_end":12841032,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12840951,"byte_end":12841009,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":506},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":712},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":560},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":562},{"krate":0,"index":569},{"krate":0,"index":573},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847367,"byte_end":12847419,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847420,"byte_end":12847423,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847424,"byte_end":12847494,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847495,"byte_end":12847553,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847554,"byte_end":12847626,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847627,"byte_end":12847697,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847698,"byte_end":12847765,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847766,"byte_end":12847769,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847770,"byte_end":12847791,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847792,"byte_end":12847795,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847796,"byte_end":12847871,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847872,"byte_end":12847943,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12847944,"byte_end":12848015,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848016,"byte_end":12848086,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848087,"byte_end":12848127,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848128,"byte_end":12848131,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848132,"byte_end":12848139,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848140,"byte_end":12848183,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848184,"byte_end":12848242,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848243,"byte_end":12848246,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848247,"byte_end":12848302,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848303,"byte_end":12848345,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848346,"byte_end":12848351,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848352,"byte_end":12848404,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848405,"byte_end":12848410,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848411,"byte_end":12848433,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848434,"byte_end":12848441,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848442,"byte_end":12848445,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848446,"byte_end":12848518,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848519,"byte_end":12848590,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848591,"byte_end":12848610,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848611,"byte_end":12848614,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848615,"byte_end":12848626,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848627,"byte_end":12848676,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848677,"byte_end":12848726,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848727,"byte_end":12848776,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848777,"byte_end":12848784,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848785,"byte_end":12848788,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848789,"byte_end":12848827,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848828,"byte_end":12848831,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848832,"byte_end":12848839,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848840,"byte_end":12848866,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848867,"byte_end":12848925,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848926,"byte_end":12848929,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848930,"byte_end":12848955,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848956,"byte_end":12848977,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848978,"byte_end":12848981,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12848982,"byte_end":12849058,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849059,"byte_end":12849068,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849069,"byte_end":12849111,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849112,"byte_end":12849117,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849118,"byte_end":12849191,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849192,"byte_end":12849239,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849240,"byte_end":12849243,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849244,"byte_end":12849281,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849282,"byte_end":12849296,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849297,"byte_end":12849302,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849303,"byte_end":12849310,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849311,"byte_end":12849314,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849315,"byte_end":12849357,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849358,"byte_end":12849361,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849362,"byte_end":12849373,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849374,"byte_end":12849413,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849414,"byte_end":12849453,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849454,"byte_end":12849493,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849494,"byte_end":12849501,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849502,"byte_end":12849505,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849506,"byte_end":12849520,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849521,"byte_end":12849524,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849525,"byte_end":12849600,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849601,"byte_end":12849674,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849675,"byte_end":12849741,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849742,"byte_end":12849811,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849812,"byte_end":12849877,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849878,"byte_end":12849881,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849882,"byte_end":12849898,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849899,"byte_end":12849902,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849903,"byte_end":12849979,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12849980,"byte_end":12850021,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850022,"byte_end":12850025,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850026,"byte_end":12850033,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850034,"byte_end":12850065,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850066,"byte_end":12850116,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850117,"byte_end":12850158,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850159,"byte_end":12850194,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850195,"byte_end":12850243,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850244,"byte_end":12850275,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850276,"byte_end":12850324,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850325,"byte_end":12850374,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850375,"byte_end":12850397,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850398,"byte_end":12850405,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850406,"byte_end":12850428,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850429,"byte_end":12850436,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850437,"byte_end":12850440,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850441,"byte_end":12850489,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850490,"byte_end":12850493,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850494,"byte_end":12850505,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850506,"byte_end":12850558,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850559,"byte_end":12850624,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850625,"byte_end":12850690,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850691,"byte_end":12850756,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850757,"byte_end":12850764,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850765,"byte_end":12850768,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850769,"byte_end":12850845,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850846,"byte_end":12850920,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850921,"byte_end":12850993,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12850994,"byte_end":12851070,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851071,"byte_end":12851113,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851114,"byte_end":12851117,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851118,"byte_end":12851134,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851135,"byte_end":12851138,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851139,"byte_end":12851214,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851215,"byte_end":12851256,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851257,"byte_end":12851260,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851261,"byte_end":12851268,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851269,"byte_end":12851300,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851301,"byte_end":12851351,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851352,"byte_end":12851393,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851394,"byte_end":12851429,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851430,"byte_end":12851478,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851479,"byte_end":12851510,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851511,"byte_end":12851559,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851560,"byte_end":12851619,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851620,"byte_end":12851642,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851643,"byte_end":12851650,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851651,"byte_end":12851673,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851674,"byte_end":12851681,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851682,"byte_end":12851685,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851686,"byte_end":12851734,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851735,"byte_end":12851738,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851739,"byte_end":12851750,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851751,"byte_end":12851800,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851801,"byte_end":12851855,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851856,"byte_end":12851910,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851911,"byte_end":12851965,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851966,"byte_end":12851973,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851974,"byte_end":12851977,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12851978,"byte_end":12852051,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852052,"byte_end":12852119,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852120,"byte_end":12852123,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852124,"byte_end":12852140,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852141,"byte_end":12852144,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852145,"byte_end":12852221,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852222,"byte_end":12852294,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852295,"byte_end":12852334,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852335,"byte_end":12852338,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852339,"byte_end":12852346,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852347,"byte_end":12852378,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852379,"byte_end":12852429,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852430,"byte_end":12852471,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852472,"byte_end":12852507,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852508,"byte_end":12852556,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852557,"byte_end":12852588,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852589,"byte_end":12852636,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852637,"byte_end":12852657,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852658,"byte_end":12852680,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852681,"byte_end":12852688,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852689,"byte_end":12852711,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852712,"byte_end":12852719,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852720,"byte_end":12852723,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852724,"byte_end":12852772,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852773,"byte_end":12852776,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852777,"byte_end":12852788,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852789,"byte_end":12852841,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852842,"byte_end":12852907,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852908,"byte_end":12852973,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12852974,"byte_end":12853039,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853040,"byte_end":12853047,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853048,"byte_end":12853051,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853052,"byte_end":12853124,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853125,"byte_end":12853200,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853201,"byte_end":12853273,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853274,"byte_end":12853350,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853351,"byte_end":12853424,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853425,"byte_end":12853428,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853429,"byte_end":12853445,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853446,"byte_end":12853449,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853450,"byte_end":12853524,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853525,"byte_end":12853592,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853593,"byte_end":12853596,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853597,"byte_end":12853604,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853605,"byte_end":12853636,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853637,"byte_end":12853687,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853688,"byte_end":12853729,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853730,"byte_end":12853765,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853766,"byte_end":12853814,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853815,"byte_end":12853846,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853847,"byte_end":12853895,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853896,"byte_end":12853916,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853917,"byte_end":12853939,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853940,"byte_end":12853947,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853948,"byte_end":12853970,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853971,"byte_end":12853978,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853979,"byte_end":12853982,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12853983,"byte_end":12854031,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854032,"byte_end":12854035,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854036,"byte_end":12854047,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854048,"byte_end":12854074,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854075,"byte_end":12854120,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854121,"byte_end":12854166,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854167,"byte_end":12854212,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854213,"byte_end":12854216,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854217,"byte_end":12854245,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854246,"byte_end":12854291,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854292,"byte_end":12854337,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854338,"byte_end":12854383,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854384,"byte_end":12854391,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854392,"byte_end":12854395,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854396,"byte_end":12854468,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854469,"byte_end":12854545,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854546,"byte_end":12854616,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854617,"byte_end":12854686,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854687,"byte_end":12854724,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854725,"byte_end":12854728,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854729,"byte_end":12854803,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854804,"byte_end":12854858,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854859,"byte_end":12854862,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854863,"byte_end":12854879,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854880,"byte_end":12854883,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854884,"byte_end":12854957,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12854958,"byte_end":12855034,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855035,"byte_end":12855109,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855110,"byte_end":12855123,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855124,"byte_end":12855127,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855128,"byte_end":12855135,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855136,"byte_end":12855167,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855168,"byte_end":12855218,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855219,"byte_end":12855260,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855261,"byte_end":12855296,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855297,"byte_end":12855346,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855347,"byte_end":12855378,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855379,"byte_end":12855427,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855428,"byte_end":12855472,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855473,"byte_end":12855495,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855496,"byte_end":12855503,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855504,"byte_end":12855526,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855527,"byte_end":12855534,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855535,"byte_end":12855538,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855539,"byte_end":12855587,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855588,"byte_end":12855591,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855592,"byte_end":12855603,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855604,"byte_end":12855630,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855631,"byte_end":12855681,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855682,"byte_end":12855732,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855733,"byte_end":12855783,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855784,"byte_end":12855787,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855788,"byte_end":12855808,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855809,"byte_end":12855839,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855840,"byte_end":12855870,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855871,"byte_end":12855901,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855902,"byte_end":12855909,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855910,"byte_end":12855913,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855914,"byte_end":12855987,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12855988,"byte_end":12856063,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856064,"byte_end":12856136,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856137,"byte_end":12856175,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856176,"byte_end":12856179,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856180,"byte_end":12856254,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856255,"byte_end":12856331,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856332,"byte_end":12856405,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856406,"byte_end":12856434,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856435,"byte_end":12856438,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856439,"byte_end":12856455,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856456,"byte_end":12856459,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856460,"byte_end":12856533,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856534,"byte_end":12856610,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856611,"byte_end":12856685,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856686,"byte_end":12856758,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856759,"byte_end":12856770,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856771,"byte_end":12856774,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856775,"byte_end":12856782,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856783,"byte_end":12856814,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856815,"byte_end":12856865,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856866,"byte_end":12856907,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856908,"byte_end":12856943,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856944,"byte_end":12856993,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12856994,"byte_end":12857025,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857026,"byte_end":12857091,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857092,"byte_end":12857112,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857113,"byte_end":12857135,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857136,"byte_end":12857143,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857144,"byte_end":12857151,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857152,"byte_end":12857155,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857156,"byte_end":12857204,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857205,"byte_end":12857208,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857209,"byte_end":12857220,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857221,"byte_end":12857247,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857248,"byte_end":12857298,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857299,"byte_end":12857349,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857350,"byte_end":12857400,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857401,"byte_end":12857404,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857405,"byte_end":12857425,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857426,"byte_end":12857456,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857457,"byte_end":12857487,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857488,"byte_end":12857518,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857519,"byte_end":12857526,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857527,"byte_end":12857530,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857531,"byte_end":12857604,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857605,"byte_end":12857679,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857680,"byte_end":12857754,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857755,"byte_end":12857828,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857829,"byte_end":12857905,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857906,"byte_end":12857939,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857940,"byte_end":12857943,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857944,"byte_end":12857958,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857959,"byte_end":12857962,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12857963,"byte_end":12858038,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858039,"byte_end":12858111,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858112,"byte_end":12858180,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858181,"byte_end":12858257,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858258,"byte_end":12858299,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858300,"byte_end":12858303,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858304,"byte_end":12858374,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858375,"byte_end":12858393,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858394,"byte_end":12858397,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858398,"byte_end":12858405,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858406,"byte_end":12858438,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858439,"byte_end":12858489,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858490,"byte_end":12858534,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858535,"byte_end":12858548,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858549,"byte_end":12858584,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858585,"byte_end":12858616,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858617,"byte_end":12858640,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858641,"byte_end":12858648,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858649,"byte_end":12858671,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858672,"byte_end":12858679,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858680,"byte_end":12858683,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858684,"byte_end":12858734,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858735,"byte_end":12858738,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858739,"byte_end":12858750,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858751,"byte_end":12858784,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858785,"byte_end":12858818,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858819,"byte_end":12858852,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858853,"byte_end":12858860,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858861,"byte_end":12858864,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858865,"byte_end":12858945,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858946,"byte_end":12858988,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12858989,"byte_end":12859033,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859034,"byte_end":12859079,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859080,"byte_end":12859127,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859128,"byte_end":12859166,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859167,"byte_end":12859237,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859799,"byte_end":12859806,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859481,"byte_end":12859536,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859537,"byte_end":12859540,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859541,"byte_end":12859616,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859617,"byte_end":12859697,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12859698,"byte_end":12859757,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860477,"byte_end":12860502,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":561}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860392,"byte_end":12860465,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":724},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860847,"byte_end":12860867,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860523,"byte_end":12860597,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860598,"byte_end":12860601,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860602,"byte_end":12860681,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860682,"byte_end":12860725,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860726,"byte_end":12860729,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860730,"byte_end":12860783,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860784,"byte_end":12860787,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12860788,"byte_end":12860818,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861211,"byte_end":12861214,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861120,"byte_end":12861199,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861441,"byte_end":12861448,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861338,"byte_end":12861413,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861418,"byte_end":12861429,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861670,"byte_end":12861686,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861498,"byte_end":12861539,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861544,"byte_end":12861547,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861552,"byte_end":12861625,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861630,"byte_end":12861658,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12862107,"byte_end":12862127,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861751,"byte_end":12861785,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861790,"byte_end":12861793,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861798,"byte_end":12861868,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861873,"byte_end":12861948,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861953,"byte_end":12862025,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12862030,"byte_end":12862095,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867403,"byte_end":12867406,"line_start":621,"line_end":621,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866861,"byte_end":12866936,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866941,"byte_end":12866952,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866957,"byte_end":12866960,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866965,"byte_end":12866979,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866984,"byte_end":12866987,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866992,"byte_end":12866999,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867004,"byte_end":12867035,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867040,"byte_end":12867088,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867093,"byte_end":12867096,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867101,"byte_end":12867142,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867147,"byte_end":12867182,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867187,"byte_end":12867218,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867223,"byte_end":12867254,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867259,"byte_end":12867288,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867293,"byte_end":12867313,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867318,"byte_end":12867340,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867345,"byte_end":12867352,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867357,"byte_end":12867379,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12867384,"byte_end":12867391,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868591,"byte_end":12868601,"line_start":662,"line_end":662,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868070,"byte_end":12868119,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868124,"byte_end":12868127,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868132,"byte_end":12868164,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868169,"byte_end":12868172,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868177,"byte_end":12868245,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868250,"byte_end":12868253,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868258,"byte_end":12868272,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868277,"byte_end":12868280,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868285,"byte_end":12868292,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868297,"byte_end":12868328,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868333,"byte_end":12868381,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868386,"byte_end":12868389,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868394,"byte_end":12868435,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868440,"byte_end":12868475,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868480,"byte_end":12868501,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868506,"byte_end":12868528,"line_start":658,"line_end":658,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868533,"byte_end":12868540,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868545,"byte_end":12868567,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868572,"byte_end":12868579,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869233,"byte_end":12869246,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868700,"byte_end":12868752,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868757,"byte_end":12868760,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868765,"byte_end":12868803,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868808,"byte_end":12868811,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868816,"byte_end":12868884,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868889,"byte_end":12868892,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868897,"byte_end":12868911,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868916,"byte_end":12868919,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868924,"byte_end":12868931,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868936,"byte_end":12868967,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12868972,"byte_end":12869020,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869025,"byte_end":12869028,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869033,"byte_end":12869074,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869079,"byte_end":12869114,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869119,"byte_end":12869143,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869148,"byte_end":12869170,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869175,"byte_end":12869182,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869187,"byte_end":12869209,"line_start":684,"line_end":684,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869214,"byte_end":12869221,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869879,"byte_end":12869892,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869346,"byte_end":12869398,"line_start":691,"line_end":691,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869403,"byte_end":12869406,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869411,"byte_end":12869449,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869454,"byte_end":12869457,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869462,"byte_end":12869530,"line_start":695,"line_end":695,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869535,"byte_end":12869538,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869543,"byte_end":12869557,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869562,"byte_end":12869565,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869570,"byte_end":12869577,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869582,"byte_end":12869613,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869618,"byte_end":12869666,"line_start":701,"line_end":701,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869671,"byte_end":12869674,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869679,"byte_end":12869720,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869725,"byte_end":12869760,"line_start":704,"line_end":704,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869765,"byte_end":12869789,"line_start":705,"line_end":705,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869794,"byte_end":12869816,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869821,"byte_end":12869828,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869833,"byte_end":12869855,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12869860,"byte_end":12869867,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870973,"byte_end":12870989,"line_start":744,"line_end":744,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870061,"byte_end":12870090,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870095,"byte_end":12870098,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870103,"byte_end":12870175,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870180,"byte_end":12870205,"line_start":721,"line_end":721,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870210,"byte_end":12870213,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870218,"byte_end":12870290,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870295,"byte_end":12870364,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870369,"byte_end":12870442,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870447,"byte_end":12870459,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870464,"byte_end":12870467,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870472,"byte_end":12870547,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870552,"byte_end":12870613,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870618,"byte_end":12870621,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870626,"byte_end":12870640,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870645,"byte_end":12870648,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870653,"byte_end":12870660,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870665,"byte_end":12870696,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870701,"byte_end":12870749,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870754,"byte_end":12870757,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870762,"byte_end":12870803,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870808,"byte_end":12870843,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870848,"byte_end":12870883,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870888,"byte_end":12870910,"line_start":740,"line_end":740,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870915,"byte_end":12870922,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870927,"byte_end":12870949,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12870954,"byte_end":12870961,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871650,"byte_end":12871669,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871086,"byte_end":12871149,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871154,"byte_end":12871157,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871162,"byte_end":12871213,"line_start":751,"line_end":751,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871218,"byte_end":12871221,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871226,"byte_end":12871294,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871299,"byte_end":12871302,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871307,"byte_end":12871321,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871326,"byte_end":12871329,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871334,"byte_end":12871341,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871346,"byte_end":12871377,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871382,"byte_end":12871430,"line_start":759,"line_end":759,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871435,"byte_end":12871438,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871443,"byte_end":12871484,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871489,"byte_end":12871524,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871529,"byte_end":12871560,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871565,"byte_end":12871587,"line_start":764,"line_end":764,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871592,"byte_end":12871599,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871604,"byte_end":12871626,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871631,"byte_end":12871638,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872328,"byte_end":12872347,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871838,"byte_end":12871904,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871909,"byte_end":12871912,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871917,"byte_end":12871972,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871977,"byte_end":12871980,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12871985,"byte_end":12871999,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872004,"byte_end":12872007,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872012,"byte_end":12872019,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872024,"byte_end":12872055,"line_start":781,"line_end":781,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872060,"byte_end":12872108,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872113,"byte_end":12872116,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872121,"byte_end":12872162,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872167,"byte_end":12872202,"line_start":785,"line_end":785,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872207,"byte_end":12872238,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872243,"byte_end":12872265,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872270,"byte_end":12872277,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872282,"byte_end":12872304,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872309,"byte_end":12872316,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872901,"byte_end":12872918,"line_start":812,"line_end":812,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872450,"byte_end":12872523,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872528,"byte_end":12872546,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872551,"byte_end":12872554,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872559,"byte_end":12872573,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872578,"byte_end":12872581,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872586,"byte_end":12872593,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872598,"byte_end":12872629,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872634,"byte_end":12872682,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872687,"byte_end":12872690,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872695,"byte_end":12872736,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872741,"byte_end":12872776,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872781,"byte_end":12872811,"line_start":807,"line_end":807,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872816,"byte_end":12872838,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872843,"byte_end":12872850,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872855,"byte_end":12872877,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12872882,"byte_end":12872889,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873568,"byte_end":12873576,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873019,"byte_end":12873082,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873087,"byte_end":12873090,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873095,"byte_end":12873156,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873161,"byte_end":12873164,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873169,"byte_end":12873223,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873228,"byte_end":12873231,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873236,"byte_end":12873250,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873255,"byte_end":12873258,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873263,"byte_end":12873270,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873275,"byte_end":12873306,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873311,"byte_end":12873359,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873364,"byte_end":12873367,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873372,"byte_end":12873413,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873418,"byte_end":12873453,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873458,"byte_end":12873478,"line_start":831,"line_end":831,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873483,"byte_end":12873505,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873510,"byte_end":12873517,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873522,"byte_end":12873544,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873549,"byte_end":12873556,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874096,"byte_end":12874105,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873674,"byte_end":12873737,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873742,"byte_end":12873745,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873750,"byte_end":12873764,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873769,"byte_end":12873772,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873777,"byte_end":12873784,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873789,"byte_end":12873837,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873842,"byte_end":12873863,"line_start":847,"line_end":847,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873868,"byte_end":12873903,"line_start":848,"line_end":848,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873908,"byte_end":12873939,"line_start":849,"line_end":849,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873944,"byte_end":12873975,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12873980,"byte_end":12874009,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874014,"byte_end":12874034,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874039,"byte_end":12874060,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874065,"byte_end":12874072,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874077,"byte_end":12874084,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874761,"byte_end":12874769,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874257,"byte_end":12874310,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874315,"byte_end":12874318,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874323,"byte_end":12874337,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874342,"byte_end":12874345,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874350,"byte_end":12874357,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874362,"byte_end":12874393,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874398,"byte_end":12874446,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874451,"byte_end":12874454,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874459,"byte_end":12874500,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874505,"byte_end":12874540,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874545,"byte_end":12874576,"line_start":873,"line_end":873,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874581,"byte_end":12874612,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874617,"byte_end":12874646,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874651,"byte_end":12874671,"line_start":876,"line_end":876,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874676,"byte_end":12874698,"line_start":877,"line_end":877,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874703,"byte_end":12874710,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874715,"byte_end":12874737,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874742,"byte_end":12874749,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875342,"byte_end":12875351,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874933,"byte_end":12874987,"line_start":888,"line_end":888,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12874992,"byte_end":12874995,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875000,"byte_end":12875014,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875019,"byte_end":12875022,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875027,"byte_end":12875034,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875039,"byte_end":12875071,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875076,"byte_end":12875126,"line_start":894,"line_end":894,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875131,"byte_end":12875175,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875180,"byte_end":12875215,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875220,"byte_end":12875251,"line_start":897,"line_end":897,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875256,"byte_end":12875279,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875284,"byte_end":12875291,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875296,"byte_end":12875318,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875323,"byte_end":12875330,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875960,"byte_end":12875970,"line_start":924,"line_end":924,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875512,"byte_end":12875561,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875566,"byte_end":12875569,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875574,"byte_end":12875588,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875593,"byte_end":12875596,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875601,"byte_end":12875608,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875613,"byte_end":12875658,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875663,"byte_end":12875713,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875718,"byte_end":12875774,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875779,"byte_end":12875792,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875797,"byte_end":12875832,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875837,"byte_end":12875868,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875873,"byte_end":12875897,"line_start":920,"line_end":920,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875902,"byte_end":12875909,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875914,"byte_end":12875936,"line_start":922,"line_end":922,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12875941,"byte_end":12875948,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12877349,"byte_end":12877359,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12877106,"byte_end":12877193,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12877194,"byte_end":12877197,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12877198,"byte_end":12877236,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12877237,"byte_end":12877275,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878459,"byte_end":12878462,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878040,"byte_end":12878100,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878105,"byte_end":12878108,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878113,"byte_end":12878123,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878128,"byte_end":12878131,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878136,"byte_end":12878208,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878213,"byte_end":12878286,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878291,"byte_end":12878358,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878363,"byte_end":12878366,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878371,"byte_end":12878447,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879593,"byte_end":12879612,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878620,"byte_end":12878680,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878685,"byte_end":12878688,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878693,"byte_end":12878756,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878761,"byte_end":12878839,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878844,"byte_end":12878911,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878916,"byte_end":12878988,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878993,"byte_end":12879063,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879068,"byte_end":12879091,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879096,"byte_end":12879099,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879104,"byte_end":12879114,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879119,"byte_end":12879122,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879127,"byte_end":12879202,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879207,"byte_end":12879280,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879285,"byte_end":12879361,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879366,"byte_end":12879439,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879444,"byte_end":12879514,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879519,"byte_end":12879522,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879527,"byte_end":12879581,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12880178,"byte_end":12880188,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879740,"byte_end":12879790,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879795,"byte_end":12879798,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879803,"byte_end":12879810,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879815,"byte_end":12879834,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879839,"byte_end":12879877,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879882,"byte_end":12879885,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879890,"byte_end":12879924,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879929,"byte_end":12879976,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879981,"byte_end":12879988,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12879993,"byte_end":12880000,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12880005,"byte_end":12880043,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12880048,"byte_end":12880051,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12880056,"byte_end":12880109,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12880114,"byte_end":12880154,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12880159,"byte_end":12880166,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884548,"byte_end":12884569,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884502,"byte_end":12884543,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884604,"byte_end":12884606,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884575,"byte_end":12884599,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":762},"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884480,"byte_end":12884495,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":765}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884398,"byte_end":12884453,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806883,"byte_end":12806893,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12807044,"byte_end":12807054,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12807381,"byte_end":12807391,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817238,"byte_end":12817242,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817513,"byte_end":12817519,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820747,"byte_end":12820753,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12825320,"byte_end":12825326,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12825588,"byte_end":12825594,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12826365,"byte_end":12826371,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12826731,"byte_end":12826735,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12826873,"byte_end":12826877,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12827084,"byte_end":12827088,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12827483,"byte_end":12827487,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12827768,"byte_end":12827772,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12827989,"byte_end":12827993,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12828522,"byte_end":12828526,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12828907,"byte_end":12828911,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829814,"byte_end":12829825,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12830959,"byte_end":12830969,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831756,"byte_end":12831766,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12833258,"byte_end":12833268,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12833581,"byte_end":12833591,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12834681,"byte_end":12834691,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12835747,"byte_end":12835758,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12836276,"byte_end":12836287,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839410,"byte_end":12839421,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839744,"byte_end":12839755,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12841183,"byte_end":12841194,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12841905,"byte_end":12841916,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12842248,"byte_end":12842259,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12843102,"byte_end":12843114,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12843456,"byte_end":12843468,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12845728,"byte_end":12845740,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12846076,"byte_end":12846088,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12846223,"byte_end":12846235,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12846442,"byte_end":12846454,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12846849,"byte_end":12846861,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12847141,"byte_end":12847153,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861093,"byte_end":12861113,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12864466,"byte_end":12864486,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12865373,"byte_end":12865393,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866734,"byte_end":12866754,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866847,"byte_end":12866854,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12876453,"byte_end":12876460,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12876586,"byte_end":12876611,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12876769,"byte_end":12876794,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12876929,"byte_end":12876954,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878023,"byte_end":12878033,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12880575,"byte_end":12880585,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12883996,"byte_end":12884006,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884329,"byte_end":12884339,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884644,"byte_end":12884659,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884941,"byte_end":12884956,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12885073,"byte_end":12885088,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":740,"byte_end":745,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":12805410,"byte_end":12805426,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":506}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12806883,"byte_end":12806893,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12807044,"byte_end":12807054,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":12807381,"byte_end":12807391,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":74}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817238,"byte_end":12817242,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12817513,"byte_end":12817519,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12820747,"byte_end":12820753,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12825320,"byte_end":12825326,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":979},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12825588,"byte_end":12825594,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":979},"to":{"krate":39,"index":17}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12826365,"byte_end":12826371,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12826731,"byte_end":12826735,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":4345}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12826873,"byte_end":12826877,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":4430}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12827084,"byte_end":12827088,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":934},"to":{"krate":21,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12827483,"byte_end":12827487,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":934},"to":{"krate":21,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12827768,"byte_end":12827772,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":4405}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12827989,"byte_end":12827993,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":934},"to":{"krate":21,"index":393}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12828522,"byte_end":12828526,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12828907,"byte_end":12828911,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":74}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":12829814,"byte_end":12829825,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12830959,"byte_end":12830969,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12831756,"byte_end":12831766,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12833258,"byte_end":12833268,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":893},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12833581,"byte_end":12833591,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":893},"to":{"krate":39,"index":17}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12834681,"byte_end":12834691,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12835747,"byte_end":12835758,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":12836276,"byte_end":12836287,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":848},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839410,"byte_end":12839421,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12839744,"byte_end":12839755,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12841183,"byte_end":12841194,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":807},"to":{"krate":39,"index":17}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12841905,"byte_end":12841916,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":807},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12842248,"byte_end":12842259,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":807},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12843102,"byte_end":12843114,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12843456,"byte_end":12843468,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":770},"to":{"krate":39,"index":17}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12845728,"byte_end":12845740,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12846076,"byte_end":12846088,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":4345}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12846223,"byte_end":12846235,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":4430}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12846442,"byte_end":12846454,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":770},"to":{"krate":21,"index":309}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12846849,"byte_end":12846861,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":770},"to":{"krate":21,"index":264}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":12847141,"byte_end":12847153,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12861093,"byte_end":12861113,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12864466,"byte_end":12864486,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":724},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12865373,"byte_end":12865393,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":724},"to":{"krate":0,"index":74}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866734,"byte_end":12866754,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12866847,"byte_end":12866854,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12876453,"byte_end":12876460,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12876586,"byte_end":12876611,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12876769,"byte_end":12876794,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":12876929,"byte_end":12876954,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12878023,"byte_end":12878033,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12880575,"byte_end":12880585,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12883996,"byte_end":12884006,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":74}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884329,"byte_end":12884339,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884644,"byte_end":12884659,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12884941,"byte_end":12884956,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/raunit/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":12885073,"byte_end":12885088,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":762},"to":{"krate":1,"index":2339}}]}